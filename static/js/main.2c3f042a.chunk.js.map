{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","common/AlertSnackbar.tsx","common/UseSnackBar.tsx","Login.tsx","Verify.tsx","common/Tracking.ts","Logout.tsx","common/ResponsiveDialog.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","Upload.tsx","User.tsx","power/PowerEntry.tsx","Power.tsx","archive/ArchiveEntry.tsx","Archive.tsx","common/ConsumerTools.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","behavior/BehaviorDragSelect.tsx","Behavior.tsx","Home.tsx","common/Time.ts","thermostats/DummyData.ts","thermostats/ModifyTimeItemDialog.tsx","thermostats/ChartOptions.ts","thermostats/ThermostatDaySetting.tsx","Thermostats.tsx","Mood.tsx","Page404.tsx","PastBehavior.tsx","Routes.tsx","service/BackendService.ts","common/UserConfirmationDialog.tsx","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","PersonOutline","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","open","variant","role","AppBarSpace","Divider","List","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","props","flexGrow","Suspense","fallback","LinearProgress","paddingTop","children","Root","display","Toolbar","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","ml","hideBackButton","IconButton","color","marginRight","onClick","goBack","size","Typography","mx","multiLine","DefaultBottomNavigation","React","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","Math","random","predictions","token","setItem","parse","saveFakeDB","DefaultExecutor","reject","data","console","log","this","status","statusText","headers","config","request","response","FaultyExecutor","executor","ok","error","findInDict","dict","matcher","key","FakeBackend","backendConfig","url","Authorization","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","startsWith","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","AlertSnackbar","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","onClose","Alert","message","useSnackBar","state","setState","prevState","useCallback","StyledGrid","styled","Grid","margin","padding","flexDirection","alignItems","withRouter","withTranslation","setError","backendService","height","Container","maxWidth","container","spacing","item","xs","md","paragraph","Avatar","backgroundColor","onSubmit","preventDefault","requestPin","catch","TextField","autoFocus","target","required","fullWidth","autoComplete","Button","Form","StyledContainer","useEffect","login","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Logout","page","logout","ResponsiveDialog","fullScreen","Dialog","edge","DialogTitle","useInfoDialog","Lorem","DialogContentText","InfoDialog","DialogContent","content","DialogActions","ResponsiveIconButton","breakpoint","AttentionIcon","Badge","invisible","requiresAttention","Tooltip","description","startIcon","Input","operators","link","success","setSuccess","setAppBar","infoProps","openInfo","showBackButton","my","gutterBottom","op","Link","href","htmlFor","accept","file","files","postConsumption","UserInfo","items","text","idx","ConsumersInfo","LanguageInfo","i18next","resolvedLanguage","language","setLanguage","changeLanguage","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","ColorModeContext","colorModeValue","mode","toggleColorMode","setUser","getUser","square","animation","PowerEntry","getProcessedConsumption","consumptions","labels","from","datasets","fill","borderColor","Component","Power","setDates","getProcessedConsumptions","Card","CardContent","ArchiveEntry","ListItemAvatar","Done","Archive","getPredictions","translate","str","override","de","en","icons","laundry","cooking","dishes","hygiene","entertainment","wellness","homeoffice","misc","temperature","guests","emobility","colors","pink","purple","orange","teal","green","red","blue","s","h","l","length","charCodeAt","hashCode","iconLookup","compareProps","a","b","compareConsumers","ConsumerCard","memo","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","style","ListItemSecondaryAction","Consumers","consumers","setConsumers","getConsumers","applyChangeActive","putConsumer","pb","BehaviorDragSelect","handleTouchStartCell","isLeftClick","isTouch","selectionStarted","eventToCellLocation","row","column","onSelectionStart","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","nextRowCount","abs","nextColumnCount","maxRows","maxColumns","handleTouchEndWindow","r","minRow","min","maxRow","max","minColumn","maxColumn","isCellBeingSelected","window","addEventListener","removeEventListener","TableRow","TableCell","left","header","selected","j","disabled","beingSelected","onTouchStart","onTouchMove","defaultProps","Infinity","onInput","Cell","td","handleTouchStart","handleTouchMove","nextProps","nextState","nextContext","passive","className","ref","onMouseDown","onMouseMove","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","rowIndex","cellIndex","hours","formatTime","energyAvailable","userSelect","borderCollapse","top","border","Behavior","setRows","modified","setModified","all","getPrediction","filter","enterTouchDelay","find","p","handleChange","cells","handleSave","putPrediction","TableContainer","maxHeight","Table","stickyHeader","TableHead","align","String","TableBody","when","HomeCard","lg","CardActionArea","CardMedia","noWrap","Home","homeDestinations","useHomeDestinations","justifyContent","now","createTime","minutes","getDay","getMonth","data_","useAdvanced","simple","time","advanced","ModifyTimeItemDialog","showTimePicker","StaticTimePicker","ampm","setTime","renderInput","setTemperature","InputProps","endAdornment","InputAdornment","onOK","chartOptions","plugins","legend","tooltip","enabled","scales","ticks","stepSize","callback","printTime","toLocaleTimeString","hour","minute","every","getTime","compareItem","ThermostatDaySetting","palette","labeledTimeItems","dataItems","getHours","getMinutes","showLine","stepped","main","secondary","createData","CardHeader","colSpan","hover","onEdit","onDelete","CardActions","onCopyFrom","marginLeft","onAddTime","TabPanel","other","hidden","copySetting","day","copyData","sortDay","sort","compareDays","dayIndex","itemIndex","Thermostats","setData","initialData","setInitialData","Success","simpleDayLabels","dayLabels","getThermostats","reset","save","putThermostats","addTimeOpen","setAddTimeOpen","editTimeOpen","setEditTimeOpen","copyFromOpen","setCopyFromOpen","setShowTimePicker","setID","intId","setIndex","addEntry","editEntry","copyFrom","fromID","empty","days","simpleDays","tabs","xl","Stack","textTransform","Switch","checked","tab","minWidth","DraggableGraph","defaults","divider","commonScaleProps","alignToPixels","grid","borderWidth","pointHitRadius","maintainAspectRatio","aspectRation","onHover","chart","getElementsAtEventForMode","intersect","native","cursor","dragData","dragX","showTooltip","onDragStart","element","onDrag","datasetIndex","onDragEnd","setMood","getMood","onSaveClick","putMood","onMoodChange","py","Page404","m","textAlign","path","PastBehavior","URLSearchParams","useLocation","search","get","PublicRouter","PrivateRouter","paths","pastbehavior","root","exact","commonPaths","managementPaths","homeOwnerPaths","studentPaths","unpack","BackendService","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","addAuth","finally","post","put","delete","formData","FormData","append","UserConfirmationDialog","onAccept","Config","createContext","App","prefersDarkMode","setMode","useMemo","createTheme","lightGreen","contrastText","components","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","subscribe","appBar","setAppBarCb","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","i18n","use","resourcesToBackend","namespace","resources","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.2c3f042a.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t439,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t440,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 428;\nmodule.exports = webpackAsyncContext;","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport PersonOutline from \"@mui/icons-material/PersonOutline\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: PersonOutline, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.thermostats, destinations.user];\n        default:\n            return [];\n    }\n}\n\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.thermostats, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useHomeDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.upload, destinations.user]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.power, destinations.upload, destinations.mood]\n        default:\n            return []\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n    multiLine?: React.ReactNode;\n}\n\nexport function DefaultDrawer() {\n\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <AppBarSpace/>\n                        <Divider/>\n                        <List>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n\n    return <Box sx={{flexGrow: 1}}>\n        <AppBarSpace/>\n        <React.Suspense fallback={<LinearProgress/>}>\n            <Box paddingTop={1}>\n                {props.children}\n            </Box>\n        </React.Suspense>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nexport function AppBarSpace() {\n    return <Toolbar/>\n}\n\nfunction DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={{ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}}}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\">\n                        <ArrowBack/>\n                    </IconButton>\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n                {props.multiLine}\n            </AppBar>\n        </Slide>\n    );\n}\n\nexport default DefaultAppBar;","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'misc'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'misc'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'misc'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => Math.random() < 0.5)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1)\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString())\n                if (index < 0) return e.error()\n                db.consumer[user].splice(index, 1)\n\n                saveFakeDB(db)\n                return e.ok({})\n            }\n            return e.error()\n        })\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n\n        })\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import {Avatar, Box, Button, Container, Grid, TextField, Typography} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t, backendService, history} = props;\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    id=\"shared_password\"\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    autoComplete=\"email\"\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                >\n                                    {t('login_submit')}\n                                </Button>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Container>\n            </Box>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Login)));\n","import {Avatar, Button, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect, useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    email?: string\n    password: string\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Verify(props: Props) {\n    const [state, setState] = useState<State>({password: ''})\n    const [error, setError] = useSnackBar()\n    const {location, history, backendService, t} = props;\n\n    useEffect(() => {\n        // @ts-ignore\n        if (!location?.state?.email) {\n            history.push('/')\n        }\n    }, [location, history])\n\n    const handleSubmit = (e: React.FormEvent) => {\n        const {password} = state;\n        // @ts-ignore\n        const {email} = location.state;\n\n        e.preventDefault();\n        backendService.login(email, password)\n            .then(() => history.push('/'))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{\n                        margin: '1px',\n                        backgroundColor: 'secondary.main',\n                    }}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={state.password}\n                            onChange={(e) => setState({...state, password: e.target.value})}\n                            required\n                            fullWidth/>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</Button>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Verify)));\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/login\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"><ArrowBack/></IconButton>\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle>{props.title}</DialogTitle>\n            {props.children}\n        </Dialog>\n    );\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nexport function ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const AttentionIcon = () => <Badge invisible={!props.requiresAttention}\n                                       variant=\"dot\"\n                                       color=\"info\">{props.icon}</Badge>\n    return <>\n        {breakpoint &&\n        <Tooltip title={props.description}>\n            <IconButton color=\"inherit\" onClick={props.onClick} size=\"large\"><AttentionIcon/></IconButton>\n        </Tooltip>\n        }\n        {!breakpoint &&\n        <Button startIcon={<AttentionIcon/>} color=\"inherit\" onClick={props.onClick}>{props.description}</Button>\n        }\n    </>;\n}\n","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Box, Button, Container, Grid, Link, List, ListItem, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect} from 'react';\nimport {useTranslation, WithTranslation, withTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\ninterface Operator {\n    name: string;\n    link: string;\n}\n\nconst operators: Operator[] = [\n    {name: 'Netz Oberösterreich', link: 'https://netz-online.netzgmbh.at/eServiceWeb/main.html'},\n    {name: 'Netz Burgenland', link: 'https://smartmeter.netzburgenland.at'},\n    {name: 'Kärnten Netz', link: 'https://meinportal.kaerntennetz.at/meinPortal/Login.aspx?service=verbrauch'},\n]\n\ninterface Props extends PrivateRouteProps, WithTranslation {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <>\n            <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n        </>\n    }), [t, setAppBar, openInfo])\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\">\n                <Box my={1}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                            <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                            <Typography color=\"textSecondary\" paragraph>\n                                {t('upload_instruction_download')}\n                            </Typography>\n                            <List>\n                                {operators.map((op) => {\n                                    return (\n                                        <ListItem key={op.name}>\n                                            <Typography><Link href={op.link}>{op.name}</Link></Typography>\n                                        </ListItem>\n                                    )\n                                })}\n                            </List>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Typography\n                                variant=\"h5\"\n                                gutterBottom\n                            >{t('upload_title_upload')}</Typography>\n                            <Typography\n                                color=\"textSecondary\"\n                                paragraph\n                            >{t('upload_instruction_upload')}</Typography>\n                            <label htmlFor=\"contained-button-file\">\n                                <Input\n                                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                    id=\"contained-button-file\"\n                                    type=\"file\"\n                                    onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                                />\n                                <Button variant=\"contained\"\n                                        size=\"large\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        component=\"span\"\n                                        startIcon={<CloudUploadOutlined/>}\n                                >{t('action_upload')}</Button>\n                            </label>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default (withTranslation()(Upload));\n","import ArrowRight from \"@mui/icons-material/ArrowRight\"\nimport Brightness4Outlined from \"@mui/icons-material/Brightness4Outlined\"\nimport Email from \"@mui/icons-material/Email\"\nimport ExitToApp from \"@mui/icons-material/ExitToApp\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport Language from \"@mui/icons-material/Language\"\nimport MyLocation from \"@mui/icons-material/MyLocation\"\nimport Power from \"@mui/icons-material/Power\"\nimport Container from \"@mui/material/Container\"\nimport Divider from \"@mui/material/Divider\"\nimport LinearProgress from \"@mui/material/LinearProgress\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemIcon from \"@mui/material/ListItemIcon\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Paper from \"@mui/material/Paper\"\nimport ToggleButton from \"@mui/material/ToggleButton\"\nimport ToggleButtonGroup from \"@mui/material/ToggleButtonGroup\"\nimport Typography from \"@mui/material/Typography\"\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation, withTranslation, WithTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props extends WithTranslation {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [user, setUser] = useState<UserModel>()\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {backendService, t, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            {user &&\n            <Container maxWidth=\"sm\">\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo user={user}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            }\n            {!user && <LinearProgress/>}\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default withTranslation()(User);\n","import {ChartOptions} from \"chart.js\";\nimport React from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\n\ninterface EntryProps {\n    backendService: BackendService;\n    date: string;\n}\n\ninterface EntryState {\n    data: any;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport class PowerEntry extends React.Component<EntryProps, EntryState> {\n    constructor(props: Readonly<EntryProps>) {\n        super(props);\n        this.state = {\n            data: {}\n        }\n    }\n\n    componentDidMount() {\n        const {backendService, date} = this.props;\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                this.setState({\n                    data: {\n                        labels: Array.from(Array(24).keys()),\n                        datasets: consumptions.map((c) => ({\n                                label: c.type,\n                                data: c.data,\n                                fill: false,\n                                backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\n                            })\n                        )\n                    }\n                })\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        const {data} = this.state;\n        console.log(data)\n        return (\n            <Line data={data} options={options}/>\n        )\n    }\n}","import {Card, CardContent, Container, Typography} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\">\n                {dates.map((date) =>\n                    <Card variant=\"outlined\" key={date} sx={{marginTop: 2}}>\n                        <CardContent>\n                            <Typography variant=\"h6\">{date}</Typography>\n                            <PowerEntry date={date} backendService={backendService}/>\n                        </CardContent>\n                    </Card>\n                )}\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","import React from \"react\";\nimport {ListItem, ListItemAvatar, ListItemText} from \"@mui/material\";\nimport {useHistory} from \"react-router-dom\";\nimport {Done} from \"@mui/icons-material\";\n\nfunction ArchiveEntry(props: { date: string }) {\n    const {date} = props;\n    const history = useHistory();\n\n    return (\n        <ListItem button onClick={() => history.push(`/pastbehavior?date=${date}`)}>\n            <ListItemAvatar><Done/></ListItemAvatar>\n            <ListItemText>{date}</ListItemText>\n        </ListItem>\n    )\n}\n\nexport default ArchiveEntry;\n","import React, {useEffect, useState} from 'react';\nimport {Container, List} from \"@mui/material\";\nimport ArchiveEntry from \"./archive/ArchiveEntry\";\nimport {useTranslation} from \"react-i18next\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PrivateRouteProps} from \"./App\";\n\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Archive(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [dates, setDates] = useState(new Array<string>());\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({title: t('card_archive_title'), showBackButton: true, children: () => <></>})\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\">\n                <List>\n                    {dates.map((value) =>\n                        <ArchiveEntry date={value} key={value}/>)}\n                </List>\n            </Container>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Group from \"@mui/icons-material/Group\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {blue, green, orange, pink, purple, red, teal} from \"@mui/material/colors\";\nimport i18next from \"i18next\";\nimport {TranslatedString} from \"../service/Model\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst icons: any = {\n    laundry: <LocalLaundryService/>,\n    cooking: <Restaurant/>,\n    dishes: <FreeBreakfast/>,\n    hygiene: <Bathtub/>,\n    entertainment: <Movie/>,\n    wellness: <Spa/>,\n    homeoffice: <Computer/>,\n    misc: <Help/>,\n    temperature: <AcUnit/>,\n    guests: <Group/>,\n    emobility: <Power/>\n}\n\nfunction hashCode(s: string) {\n    let h = 0, l = s.length, i = 0;\n    if (l > 0) while (i < l) h = (h << 5) - h + s.charCodeAt(i++) | 0;\n    return h;\n}\n\nconst colors = [\n    pink[500],\n    purple[500],\n    orange[500],\n    teal[500],\n    green[500],\n    red[500],\n    blue[500],\n]\n\nexport function backgroundColor(id: string) {\n    return colors[hashCode(id) % colors.length | 0]\n}\n\nexport function iconLookup(name?: string): JSX.Element {\n    return name && name in icons ? icons[name] : <Help/>\n}\n","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {backgroundColor, iconLookup, translate} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation()\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\")\n    const consumerName = translate(consumer.name, consumer.customName)\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar style={{backgroundColor: backgroundColor(consumer.consumerId)}}>\n                    {iconLookup(consumer.type)}\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Box, Container, DialogContentText, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>([]);\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) =>\n            backendService.putConsumer({...consumer, active: !consumer.active})\n                .then(() => backendService.getConsumers())\n                .then(setConsumers, setError)\n                .catch(console.log),\n        [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const content = () => <DialogContentText>\n        {t('consumer_help').split('\\n').map((s) => <p>{s}</p>)}\n    </DialogContentText>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\">\n                <Box pb={10}>\n                    <Paper variant=\"outlined\">\n                        <List>\n                            {consumers && consumers.map((it) =>\n                                <ConsumerCard\n                                    key={it.consumerId}\n                                    consumer={it}\n                                    clickActive={applyChangeActive}\n                                />\n                            )}\n                        </List>\n                    </Paper>\n                </Box>\n            </Container>\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={content()} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\n\nexport interface Row {\n    header: JSX.Element;\n    cellStates: boolean[];\n}\n\ninterface Props {\n    maxRows: number\n    maxColumns: number\n    onSelectionStart: (location: { row: number, column: number }) => {}\n    onInput: () => void\n    onChange: (value: boolean[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps, State> {\n    static defaultProps = {\n        maxRows: Infinity,\n        maxColumns: Infinity,\n        onSelectionStart: () => {\n        },\n        onInput: () => {\n        },\n        onChange: (value: boolean[][]) => {\n        },\n        rows: [] as Row[]\n    };\n\n    constructor(props: Readonly<React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps> | React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        return this.props.rows.map((row, i) =>\n            <TableRow><TableCell\n                sx={{position: \"sticky\", left: 0, backgroundColor: \"background.paper\"}}>{row.header}</TableCell>\n                {row.cellStates.map((selected, j) =>\n                    <Cell\n                        disabled={false}\n                        beingSelected={this.isCellBeingSelected(i, j)}\n                        selected={selected}\n                        onTouchStart={this.handleTouchStartCell}\n                        onTouchMove={this.handleTouchMoveCell}\n                    />)}\n            </TableRow>\n        )\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const isLeftClick = e.button === 0;\n        const isTouch = e.type !== \"mousedown\";\n        if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n            e.preventDefault();\n            const {row, column} = eventToCellLocation(e);\n            if (row === undefined || column === undefined) return\n            this.props.onSelectionStart({row, column});\n            this.setState({\n                selectionStarted: true,\n                startRow: row,\n                startColumn: column,\n                endRow: row,\n                endColumn: column,\n                addMode: !this.props.rows[row].cellStates[column]\n            });\n        }\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        if (this.state.selectionStarted) {\n            e.preventDefault();\n            const {row, column} = eventToCellLocation(e);\n            if (row === undefined || column === undefined) return\n            const {startRow, startColumn, endRow, endColumn} = this.state;\n\n            if (endRow !== row || endColumn !== column) {\n                const nextRowCount = Math.abs(row - startRow) + 1;\n                const nextColumnCount = Math.abs(column - startColumn) + 1;\n\n                if (nextRowCount <= this.props.maxRows) {\n                    this.setState({endRow: row});\n                }\n                if (nextColumnCount <= this.props.maxColumns) {\n                    this.setState({endColumn: column});\n                }\n            }\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const isLeftClick = e.button === 0;\n        const isTouch = e.type !== \"mousedown\";\n        if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n            const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as boolean[][]\n            const minRow = Math.min(this.state.startRow, this.state.endRow);\n            const maxRow = Math.max(this.state.startRow, this.state.endRow);\n            for (let row = minRow; row <= maxRow; row++) {\n                const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n                const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = this.state.addMode;\n                }\n            }\n            this.setState({selectionStarted: false});\n            this.props.onChange(value);\n        }\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        if (!this.state.selectionStarted) return false;\n\n        const {startRow, endRow, startColumn, endColumn} = this.state;\n        const minRow = Math.min(startRow, endRow);\n        const maxRow = Math.max(startRow, endRow);\n        const minColumn = Math.min(startColumn, endColumn);\n        const maxColumn = Math.max(startColumn, endColumn);\n\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\ninterface CellProps {\n    disabled: boolean\n    beingSelected: boolean\n    selected: boolean\n    onTouchStart: any\n    onTouchMove: any\n}\n\nclass Cell extends React.Component<CellProps> {\n    td: any\n\n    shouldComponentUpdate(nextProps: Readonly<CellProps>, nextState: Readonly<{}>, nextContext: any): boolean {\n        return nextProps.selected !== this.props.selected || nextProps.beingSelected !== this.props.beingSelected\n    }\n\n    componentDidMount() {\n        // We need to call addEventListener ourselves so that we can pass\n        // {passive: false}\n        this.td.addEventListener(\"touchstart\", this.handleTouchStart, {passive: false});\n        this.td.addEventListener(\"touchmove\", this.handleTouchMove, {passive: false});\n    }\n\n    componentWillUnmount() {\n        this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n        this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n    }\n\n    render() {\n        const {disabled, beingSelected, selected, onTouchStart, onTouchMove, ...props} = this.props;\n        let className = \"\"\n        if (disabled) {\n            className += \" cell-disabled\";\n        } else {\n            className += \" cell-enabled\";\n            if (selected) {\n                className += \" cell-selected\";\n            }\n            if (beingSelected) {\n                className += \" cell-being-selected\";\n            }\n        }\n\n        return (\n            <TableCell\n                ref={td => (this.td = td)}\n                className={className}\n                onMouseDown={this.handleTouchStart}\n                onMouseMove={this.handleTouchMove}\n                {...props}\n            />\n        );\n    }\n\n    handleTouchStart = (e: any) => !this.props.disabled && this.props.onTouchStart(e);\n    handleTouchMove = (e: any) => !this.props.disabled && this.props.onTouchMove(e);\n}\n\nfunction eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport default BehaviorDragSelect;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {backgroundColor, iconLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date().toISOString().slice(0, 10)\n\nconst style = {\n    userSelect: \"none\",\n    borderCollapse: \"collapse\",\n    \"& thead th\": {\n        position: \"sticky\",\n        top: \"0px\",\n        zIndex: 1,\n    },\n    \"& thead>tr:nth-child(2) th\": {\n        top: \"37px\"\n    },\n    \"& td\": {\n        border: 1,\n        borderColor: 'divider'\n    },\n    \"& td.cell-selected\": {\n        backgroundColor: 'secondary.main'\n    },\n    \"& td.cell-being-selected\": {\n        backgroundColor: 'primary.main'\n    },\n    \"& td.cell-disabled\": {\n        backgroundColor: \"red\"\n    }\n} as const\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => ({\n                        header: (\n                            <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    style={{backgroundColor: backgroundColor(c.consumerId)}}\n                                    sx={{width: 30, height: 30}}\n                                >\n                                    {iconLookup(c.type)}\n                                </Avatar>\n                            </Tooltip>\n                        ),\n                        consumerId: c.consumerId,\n                        cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => false)\n                    }));\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError]);\n\n    const handleChange = useCallback((cells: boolean[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() =>\n            rows && backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n                .then(() => {\n                    setSuccess(t('changes_saved'));\n                    setModified(false);\n                }, setError)\n                .catch(console.log)\n        , [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<SaveAlt/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    if (!rows) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\">\n                <Box style={{display: \"grid\"}}>\n                    <TableContainer\n                        sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 120px)', sm: 'calc(100vh - 70px)'}}}>\n                        <Table stickyHeader size=\"small\" sx={style}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell variant=\"head\"/>\n                                    {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell/>\n                                    {energyAvailable.map((v) => <TableCell style={{backgroundColor: v}}/>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import {Box, Card, CardActionArea, CardContent, CardMedia, Container, Grid, SvgIcon, Typography,} from \"@mui/material\";\nimport React, {useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport {PrivateRouteProps} from \"./App\";\nimport {useHomeDestinations} from \"./common/Destinations\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface Item {\n    title: string\n    subtitle: string\n    icon: any\n    to: string\n}\n\ninterface CardProps {\n    item: Item\n}\n\nfunction HomeCard(props: CardProps) {\n    const {item} = props\n    const {t} = useTranslation()\n\n    return (\n        <Grid item xs={12} lg={4} key={item.title}>\n            <Card>\n                <CardActionArea component={RouterLink} to={item.to}>\n                    <Box display=\"flex\">\n                        <CardMedia sx={{\n                            backgroundColor: 'secondary.main',\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            padding: \"8px\"\n                        }}>\n                            <SvgIcon component={item.icon} sx={{color: 'background.paper'}}/>\n                        </CardMedia>\n                        <CardContent>\n                            <Typography variant=\"h6\">{t(item.title)}</Typography>\n                            <Typography color=\"textSecondary\" noWrap>{t(item.subtitle)}</Typography>\n                        </CardContent>\n                    </Box>\n                </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const homeDestinations = useHomeDestinations();\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"lg\">\n                <Grid container justifyContent=\"center\">\n                    {homeDestinations.map((item: Item, index: number) =>\n                        <HomeCard item={item} key={index}/>)}\n                </Grid>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import {createTime} from \"../common/Time\";\nimport {ThermostatModel} from \"../service/Model\";\n\nexport const data_ = {\n    useAdvanced: false,\n    simple: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ],\n    advanced: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ]\n} as ThermostatModel\n","import {StaticTimePicker} from \"@mui/lab\";\nimport {Button, DialogActions, DialogContent, InputAdornment, TextField} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"../common/ResponsiveDialog\";\n\ninterface Props {\n    title: string\n    open: boolean\n    showTimePicker: boolean\n    onClose: () => void\n    onOK: () => void\n    time: Date | null\n    setTime: (time: Date | null) => void\n    temperature: string | null\n    setTemperature: (temperature: string | null) => void\n}\n\nexport function ModifyTimeItemDialog(props: Props) {\n    const {t} = useTranslation();\n    return <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n        <DialogContent>\n            {props.showTimePicker &&\n            <StaticTimePicker\n                label={t('thermostat_select_time')}\n                ampm={false}\n                value={props.time}\n                onChange={(date) => props.setTime(date)}\n                renderInput={() => <></>}\n            />\n            }\n            <TextField\n                variant=\"filled\"\n                sx={{my: 2}}\n                fullWidth\n                label={t('thermostat_temperature')}\n                type=\"number\"\n                value={props.temperature}\n                onChange={(e) => props.setTemperature(e.target.value)}\n                InputProps={{endAdornment: <InputAdornment position=\"start\">°C</InputAdornment>}}/>\n        </DialogContent>\n        <DialogActions>\n            <Button color=\"primary\" onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n            <Button color=\"primary\" onClick={props.onOK}>{t('dialog_button_ok')}</Button>\n        </DialogActions>\n    </ResponsiveDialog>\n}\n","import {Palette} from '@mui/material/styles';\nimport {TimeItem} from \"../service/Model\";\n\nexport const chartOptions = {\n    plugins: {\n        legend: {display: false},\n        tooltip: {enabled: false}\n    },\n    scales: {\n        x: {\n            min: 0,\n            max: 24,\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + '⁰⁰'\n            }\n        },\n        y: {\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + ' °C'\n            }\n        }\n    }\n}\n\nexport const createData = (dataItems: TimeItem[], palette: Palette) => ({\n    datasets: [\n        {\n            data: dataItems.map((i) => ({x: (i.time.getHours() + i.time.getMinutes() / 60), y: i.temperature})),\n            showLine: true,\n            fill: true,\n            stepped: true,\n            borderColor: palette.primary.main,\n            backgroundColor: palette.secondary.main,\n        }\n    ],\n})\n","import Add from \"@mui/icons-material/Add\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    useTheme\n} from \"@mui/material\";\nimport React from \"react\";\nimport {Scatter} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {createTime} from \"../common/Time\";\nimport {TimeItem} from \"../service/Model\";\nimport {chartOptions, createData} from \"./ChartOptions\";\n\ninterface LabeledTimeItem extends TimeItem {\n    label: string\n}\n\ninterface Props {\n    title: string;\n    id: string;\n    items: TimeItem[];\n    onAddTime: (id: string) => void\n    onCopyFrom: (id: string) => void\n    onDelete: (id: string, index: number) => void\n    onEdit: (id: string, index: number) => void\n}\n\nconst printTime = (time: Date) => time.toLocaleTimeString('de-DE', {hour: '2-digit', minute: '2-digit'})\nconst labelTimeItems = (array: TimeItem[]): LabeledTimeItem[] => array.map((value, index) => ({\n    ...value, label: `${printTime(value.time)} - ${printTime(array[index + 1]?.time ?? createTime(23, 59))}`\n}))\n\nconst compareItem = (a: TimeItem, b: TimeItem) => a.time.getTime() === b.time.getTime() && a.temperature === b.temperature\nexport const compareProps = (a: Props, b: Props) =>\n    a.id === b.id && a.title === b.title && a.items.length === b.items.length &&\n    a.items.every((value, index) => compareItem(value, b.items[index]))\n\nexport const ThermostatDaySetting = React.memo((props: Props) => {\n    const {palette} = useTheme();\n    const {t} = useTranslation();\n    const {title, items} = props;\n\n    const labeledTimeItems = labelTimeItems(items);\n    const dataItems = [...items, {time: createTime(23, 59), temperature: items[items.length - 1].temperature}]\n    const data = createData(dataItems, palette);\n    return (\n        <Card>\n            <CardHeader title={title}/>\n            <CardContent>\n                <Scatter data={data} options={chartOptions} height={50}/>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{t('thermostat_timespan')}</TableCell>\n                            <TableCell colSpan={2}>{t('thermostat_temperature')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {labeledTimeItems.map((item, index) => (\n                            <TableRow key={index} hover={true}>\n                                <TableCell>{item.label}</TableCell>\n                                <TableCell>{item.temperature} °C</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => props.onEdit(props.id, index)}\n                                    ><Edit/></IconButton>\n                                    <IconButton\n                                        disabled={index < 1}\n                                        size=\"small\"\n                                        onClick={() => props.onDelete(props.id, index)}\n                                    ><Delete/></IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n            <CardActions>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.onCopyFrom(props.id)}\n                >{t('thermostat_copy_from')}</Button>\n                <Box mx=\"auto\"/>\n                <Tooltip title={t('thermostat_insert_timespan') as string}>\n                    <IconButton\n                        sx={{marginLeft: \"auto\"}}\n                        onClick={() => props.onAddTime(props.id)}\n                        disabled={items?.length > 4}\n                    ><Add/></IconButton>\n                </Tooltip>\n            </CardActions>\n        </Card>\n    )\n}, compareProps)\n","import CompareArrowsOutlined from \"@mui/icons-material/CompareArrowsOutlined\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport RotateLeft from \"@mui/icons-material/RotateLeft\"\nimport SaveAlt from \"@mui/icons-material/SaveAlt\"\nimport Container from \"@mui/material/Container\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport Divider from \"@mui/material/Divider\";\nimport Grid, {GridSize} from \"@mui/material/Grid\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Stack from \"@mui/material/Stack\"\nimport Switch from \"@mui/material/Switch\"\nimport Typography from \"@mui/material/Typography\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {createTime} from \"./common/Time\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ThermostatModel, TimeItem} from \"./service/Model\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {ThermostatDaySetting} from \"./thermostats/ThermostatDaySetting\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copySetting = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst copyData = (data: ThermostatModel): ThermostatModel => ({\n    ...data,\n    simple: copySetting(data.simple),\n    advanced: copySetting(data.advanced)\n})\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nconst compareDays = (a: TimeItem[][], b: TimeItem[][]) => a.length === b.length &&\n    a.every((day, dayIndex) =>\n        day.length === b[dayIndex].length && day.every((item, itemIndex) =>\n            item.time === b[dayIndex][itemIndex].time && item.temperature === b[dayIndex][itemIndex].temperature))\nconst compareData = (a: ThermostatModel, b: ThermostatModel) => a.useAdvanced === b.useAdvanced &&\n    compareDays(a.simple, b.simple) && compareDays(a.advanced, b.advanced)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<ThermostatModel>(data_)\n    const [initialData, setInitialData] = useState<ThermostatModel>(data_)\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [t('day_weekdays'), t('day_weekend')]\n    const dayLabels = [t('day_monday'), t('day_tuesday'), t('day_wednesday'), t('day_thursday'), t('day_friday'), t('day_saturday'), t('day_sunday')]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (!data) return;\n                data.simple = data.simple.map(day => sortDay(day));\n                data.advanced = data.advanced.map(day => sortDay(day));\n                setData(data);\n                setInitialData(data);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setInitialData(data))\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    const modified = !compareData(data, initialData);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton\n                    requiresAttention={modified}\n                    description={t('save')}\n                    icon={<SaveAlt/>}\n                    onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save, modified]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n    const onCopyFrom = useCallback((id: string) => {\n        setID(+id);\n        setCopyFromOpen(true);\n    }, []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => {\n            const intId = +id;\n            const state = copyData(prevState)\n            if (intId > 9) {\n                state.simple[intId - 10].splice(index, 1)\n            } else {\n                state.advanced[intId].splice(index, 1)\n            }\n            return state;\n        });\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10].push({time: time, temperature: +temperature})\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id].push({time: time, temperature: +temperature})\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10][index] = {time: time, temperature: +temperature};\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id][index] = {time: time, temperature: +temperature};\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    const copyFrom = useCallback((fromID: number) => {\n        if (id === undefined) return;\n        setData(prevState => {\n            const state = copyData(prevState);\n            const from = (fromID > 9 ? prevState.simple[fromID - 10] : prevState.advanced[fromID]).map(it => ({...it}));\n            if (id > 9) {\n                state.simple[id - 10] = from;\n            } else {\n                state.advanced[id] = from;\n            }\n            return state;\n        });\n    }, [id])\n\n    if (!data) return <></>\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.advanced.length < index ? empty : data.advanced[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: data.simple[index]\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 4}\n    ]\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\">\n                <Stack direction=\"row\" spacing={1} sx={{alignItems: \"center\", justifyContent: \"end\", pb: 1}}>\n                    <Typography variant=\"subtitle1\"\n                                sx={{textTransform: 'uppercase'}}\n                    >{t('thermostat_use_advanced_settings')}</Typography>\n                    <Switch\n                        checked={data.useAdvanced}\n                        onChange={(event, value) => setData(prevState => ({...prevState, useAdvanced: value}))}/>\n                </Stack>\n\n                {tabs.map((tab, index) => (\n                    <TabPanel index={index} value={data.useAdvanced ? 1 : 0} key={index}>\n                        <Grid container spacing={1}>\n                            {tab.days.map((day) => (\n                                <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                    <ThermostatDaySetting\n                                        id={day.id}\n                                        title={day.label}\n                                        items={day.data}\n                                        onAddTime={onAddTime}\n                                        onCopyFrom={onCopyFrom}\n                                        onEdit={(id, index) => {\n                                            setID(+id);\n                                            setIndex(index);\n                                            setTime(day.data[index].time);\n                                            setTemperature(String(day.data[index].temperature));\n                                            setShowTimePicker(index > 0);\n                                            setEditTimeOpen(true);\n                                        }}\n                                        onDelete={onDelete}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                ))}\n            </Container>\n            <ModifyTimeItemDialog\n                title={t('thermostat_add_entry')}\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title={t('thermostat_edit_entry')}\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ResponsiveDialog title={t('dialog_copy_from_title')} open={copyFromOpen}\n                              onClose={() => setCopyFromOpen(false)}>\n                <DialogContent sx={{minWidth: 300}}>\n                    <List>\n                        {dayLabels.map((day, index) =>\n                            <ListItem\n                                key={index}\n                                button\n                                disabled={index === id}\n                                onClick={() => {\n                                    copyFrom(index);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                        <Divider variant=\"middle\"/>\n                        {simpleDayLabels.map((day, index) =>\n                            <ListItem\n                                key={index + 10}\n                                button\n                                disabled={index + 10 === id}\n                                onClick={() => {\n                                    copyFrom(index + 10);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                    </List>\n                </DialogContent>\n            </ResponsiveDialog>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {Box, Card, CardContent, Container, Typography, useTheme} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {MoodModel} from \"./service/Model\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n}\n\nexport const compareProps = (a: GraphProps, b: GraphProps) => a.mood.x === b.mood.x && a.mood.y === b.mood.y\n\nconst DraggableGraph = React.memo(function (props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n    const commonScaleProps = {\n        alignToPixels: true,\n        max: 10,\n        min: 0,\n        ticks: {display: false},\n        grid: {display: false},\n    }\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            plugins: {\n                // @ts-ignore\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: (e: any, element: any) => null,\n                    onDrag: (e: any, datasetIndex: any, index: number, value: number) => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        }} height={100} width={100}/>\n}, compareProps)\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'MoodPage'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<MoodModel>({x: 5, y: 5});\n    const [modified, setModified] = useState(false);\n\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = useCallback(() => {\n        backendService.putMood(date, mood!)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t])\n\n    const onMoodChange = useCallback((mood: MoodModel) => {\n        setMood(mood);\n        setModified(true);\n    }, [])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      icon={<SaveAlt/>}\n                                      onClick={onSaveClick}\n                                      description={t('save')}/>\n            </>\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified])\n\n    return <Track>\n        <Container maxWidth=\"sm\">\n            <Box py={3}>\n                <Typography variant=\"h5\" align=\"center\">{t('mood_please_select_mood')}</Typography>\n                <Card>\n                    {mood &&\n                    <CardContent>\n                        <DraggableGraph mood={mood} onChange={onMoodChange}/>\n                    </CardContent>\n                    }\n                </Card>\n            </Box>\n        </Container>\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Box, Button, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport function Page404(props: { path: string }) {\n    return (\n        <Box m={16} textAlign='center'>\n            <Typography variant=\"h1\">404</Typography>\n            <Typography variant=\"h5\">Page not found</Typography>\n            <Box m={2}>\n                <Button color=\"primary\" variant=\"contained\" component={Link} to={props.path}>Go home</Button>\n            </Box>\n        </Box>\n    )\n}\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {backgroundColor, iconLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst style = {\n    userSelect: \"none\",\n    borderCollapse: \"collapse\",\n    \"& thead th\": {\n        position: \"sticky\",\n        top: \"0px\",\n        zIndex: 1,\n    },\n    \"& thead>tr:nth-child(2) th\": {\n        top: \"37px\"\n    },\n    \"& td\": {\n        border: 1,\n        borderColor: 'divider'\n    },\n    \"& td.cell-selected\": {\n        backgroundColor: 'secondary.main'\n    },\n    \"& td.cell-being-selected\": {\n        backgroundColor: 'primary.main'\n    },\n    \"& td.cell-disabled\": {\n        backgroundColor: \"red\"\n    }\n} as const\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\");\n\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        if (!date) return;\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => ({\n                        header: (\n                            <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    style={{backgroundColor: backgroundColor(c.consumerId)}}\n                                    sx={{width: 30, height: 30}}\n                                >\n                                    {iconLookup(c.type)}\n                                </Avatar>\n                            </Tooltip>\n                        ),\n                        consumerId: c.consumerId,\n                        cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => false)\n                    }));\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError, date]);\n\n    const handleChange = useCallback((cells: boolean[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!date) return;\n        rows && backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [date, rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_title') + \" \" + date,\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<SaveAlt/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified, date])\n\n    if (!rows) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\">\n                <Box style={{display: \"grid\"}}>\n                    <TableContainer\n                        sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 120px)', sm: 'calc(100vh - 70px)'}}}>\n                        <Table stickyHeader size=\"small\" sx={style}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell variant=\"head\"/>\n                                    {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell/>\n                                    {energyAvailable.map((v) => <TableCell style={{backgroundColor: v}}/>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Verify from \"./Verify\";\nimport Logout from \"./Logout\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Power from \"./Power\";\nimport Archive from \"./Archive\";\nimport Consumers from \"./Consumers\";\nimport Behavior from \"./Behavior\";\nimport React, {useContext} from \"react\";\nimport Home from \"./Home\";\nimport Thermostats from \"./Thermostats\";\nimport BackendService from \"./service/BackendService\";\nimport Mood from \"./Mood\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {Page404} from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    const {backendService} = props;\n    return <>\n        <Redirect to=\"/login\"/>\n        <Switch>\n            <Route path=\"/verify\"><Verify backendService={backendService}/></Route>\n            <Route path=\"/login\"><Login backendService={backendService}/></Route>\n            <Route><Page404 path=\"/login\"/></Route>\n        </Switch>\n    </>\n\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return null;\n\n    const paths = {\n        logout: <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: <Route path=\"/user\"><User {...props}/></Route>,\n        power: <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        mood: <Route path=\"/mood\"><Mood  {...props}/></Route>,\n        thermostats: <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        root: <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: <Route exact path={`${process.env.PUBLIC_URL}`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout, paths.user, paths.home, paths.root]\n    const managementPaths = [paths.upload];\n    const homeOwnerPaths = [paths.upload, paths.power, paths.consumers, paths.behavior, paths.thermostats, paths.mood];\n    const studentPaths = [paths.archive, paths.consumers, paths.behavior, paths.mood, paths.pastbehavior];\n\n    return (\n        <Switch>\n            {user.type === \"management\" && managementPaths}\n            {user.type === \"student\" && studentPaths}\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    ThermostatModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<ThermostatModel | null> {\n        return this.backend\n            .get<ThermostatModel>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => {\n                if (!data) return data;\n                data.simple = data.simple.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                data.advanced = data.advanced.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                return data;\n            })\n    }\n\n    putThermostats(data: ThermostatModel) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, StyledEngineProvider, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTracking} from \"react-tracking\";\nimport DefaultAppBar, {Content, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport Config from \"./Config\";\nimport {PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser)\n                .catch(console.error);\n        }\n    }, [isLoggedIn])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({\n        title: \"\",\n        showBackButton: false,\n        children: () => <></>\n    });\n    const setAppBarCb = useCallback((props: AppBarProps) => setAppBar(props), [])\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                {isLoggedIn !== undefined &&\n                <React.Suspense fallback={<LinearProgress/>}>\n                    <ColorModeContext.Provider value={colorMode}>\n                        <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                            {!isLoggedIn &&\n                            <PublicRouter backendService={backendService}/>\n                            }\n                            {isLoggedIn &&\n                            <UserContext.Provider value={user}>\n                                <Track>\n                                    <Root>\n                                        <DefaultAppBar title={appBar.title}\n                                                       hideBackButton={!appBar.showBackButton}\n                                                       children={appBar.children()}/>\n                                        <DefaultDrawer/>\n                                        <Content>\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                                <PrivateRouter\n                                                    backendService={backendService}\n                                                    setAppBar={setAppBarCb}\n                                                />\n                                            </LocalizationProvider>\n                                        </Content>\n                                    </Root>\n                                    <DefaultBottomNavigation/>\n                                </Track>\n                            </UserContext.Provider>\n                            }\n                            <UserConfirmationDialog {...userConfirmationProps}/>\n                        </Router>\n                    </ColorModeContext.Provider>\n                </React.Suspense>\n                }\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: mode ? mode : (prefersDarkMode ? 'dark' : 'light'),\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                        // When bottom bar is shown, raise FAB position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [prefersDarkMode, mode]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    .use(resourcesToBackend((language, namespace, callback) => {\n        import(`./locales/${language}/${namespace}.json`)\n            .then((resources) => {\n                callback(null, resources)\n            })\n            .catch((error) => {\n                callback(error, null)\n            })\n    }))\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}