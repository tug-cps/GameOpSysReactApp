{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","common/ResponsiveDialog.tsx","common/UserConfirmationDialog.tsx","common/UseSnackBar.tsx","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","common/DestinationCard.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","common/Tracking.ts","Archive.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","common/ConsumerTools.tsx","Behavior.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","Home.tsx","LoadingPage.tsx","Login.tsx","Logout.tsx","Mood.tsx","Page404.tsx","common/Date.ts","PastBehavior.tsx","power/PowerEntry.tsx","Power.tsx","common/Time.ts","thermostats/DummyData.ts","Thermostats.tsx","Upload.tsx","User.tsx","Verify.tsx","Routes.tsx","service/BackendService.ts","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","open","onClose","Alert","variant","message","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","ml","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","hideBackButton","IconButton","color","edge","marginRight","onClick","goBack","size","Typography","mx","DefaultBottomNavigation","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","ResponsiveDialog","fullScreen","Dialog","DialogTitle","UserConfirmationDialog","DialogContent","DialogContentText","DialogActions","Button","onAccept","useSnackBar","state","setState","prevState","useCallback","response","statusText","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","Math","random","predictions","token","setItem","parse","saveFakeDB","DefaultExecutor","reject","data","console","log","this","status","headers","config","request","FaultyExecutor","executor","ok","error","findInDict","dict","matcher","key","delayedPromise","promise","setTimeout","catch","reason","FakeBackend","backendConfig","url","Authorization","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","startsWith","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","DestinationCard","done","Card","borderColor","CardActionArea","CardMedia","backgroundColor","alignItems","padding","CardContent","noWrap","useInfoDialog","InfoDialog","content","AttentionIcon","Badge","invisible","requiresAttention","SmallIconButton","Tooltip","description","LargeIconButton","startIcon","ResponsiveIconButton","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Archive","page","infoProps","openInfo","setDates","setError","backendService","setAppBar","useEffect","getPredictions","showBackButton","InfoOutlined","Container","maxWidth","pt","Stack","spacing","parsedDate","CheckCircleOutlined","RadioButtonUncheckedOutlined","compareCellProps","a","b","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","ColorModeContext","prefersDarkMode","mode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","target","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","selectionStarted","preventDefault","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","translate","str","override","i18next","language","de","en","consumers","laundry","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","green","homeoffice","red","emobility","temperature","high","med","amber","low","unknown","consumerLookup","hours","from","formatTime","colors","energyAvailable","isoDate","Behavior","setRows","modified","setModified","success","setSuccess","all","getConsumers","getPrediction","filter","consumerType","enterTouchDelay","Avatar","height","find","p","handleChange","cells","handleSave","putPrediction","InfoContent","infoText","returnObjects","infoConsumers","text","paragraph","disableGutters","paddingTop","TableContainer","maxHeight","xs","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","compareProps","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","ListItemAvatar","ListItemSecondaryAction","Consumers","setConsumers","applyChangeActive","putConsumer","paddingBottom","consumerHelp","Home","interactions","userInteractionNeeded","results","item","justifyContent","LoadingPage","square","textAlign","mt","mr","retry","StyledGrid","styled","Grid","margin","flexDirection","ChangeLanguageDialog","i18n","changeLanguage","finally","ListItemButton","Login","langDialogProps","openLangDialog","progress","setProgress","handleSubmit","requestPin","container","md","onSubmit","TextField","autoFocus","autoComplete","disabled","required","fullWidth","InputProps","endAdornment","InputAdornment","LoadingButton","loading","Fab","LanguageOutlined","Logout","logout","DraggableGraph","defaults","palette","divider","commonScaleProps","alignToPixels","ticks","grid","labels","datasets","borderWidth","main","pointHitRadius","maintainAspectRatio","aspectRation","scales","onHover","chart","getElementsAtEventForMode","intersect","length","native","style","cursor","plugins","dragData","dragX","showTooltip","onDragStart","onDrag","onDragEnd","datasetIndex","legend","tooltip","enabled","setMood","panel","setPanel","getMood","onSaveClick","putMood","onMoodChange","infoContent","titleKey","TabContext","TabPanel","marginLeft","Page404","gutterBottom","Link","useParsedDate","useMemo","compareConsumerProps","ConsumerHeader","PastBehavior","URLSearchParams","useLocation","search","get","dateParsed","validDate","isValid","isPast","animation","PowerEntry","setData","getProcessedConsumption","consumptions","fill","CardHeader","Power","getProcessedConsumptions","now","createTime","minutes","getDay","getMonth","Thermostats","Input","operators","link","providers","Upload","href","ElectricalServicesOutlined","htmlFor","accept","file","files","postConsumption","UserInfo","items","Email","MyLocation","idx","ConsumersInfo","ArrowRight","LanguageInfo","resolvedLanguage","setLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","colorModeValue","Brightness4Outlined","toggleColorMode","User","setUser","getUser","ExitToApp","Form","StyledContainer","Verify","setPassword","login","PublicRouter","path","exact","LoadingRouter","PrivateRouter","paths","commonPaths","managementPaths","homeOwnerPaths","studentPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","addAuth","post","put","delete","simple","day","time","advanced","formData","FormData","append","Config","createContext","App","setMode","useDarkTheme","createTheme","lightGreen","contrastText","secondary","components","MuiAppBar","defaultProps","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","root","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","callback","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","setRetry","onRetry","isAuthenticated","subscribe","appBar","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","resources","resourcesToBackend","namespace","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"2IAAA,IAAIA,EAAM,CACT,wBAAyB,CACxB,IACA,GAED,wBAAyB,CACxB,IACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,IACzBI,EAAOC,QAAUhB,G,2KCjBV,SAASiB,EAAcC,GAAe,IAAD,IAClCC,EAAQ,UAAGD,EAAMC,gBAAT,QAAqB,QAC7BC,EAAgB,UAAGF,EAAME,wBAAT,QAA6B,IACnD,OACI,cAACC,EAAA,EAAD,CAAUC,aAAc,CAACC,WAAY,SAAUC,SAAU,UAC/CC,KAAMP,EAAMO,KACZL,iBAAkBA,EAClBM,QAASR,EAAMQ,QAHzB,SAII,cAACC,EAAA,EAAD,CAAOC,QAAQ,SAASF,QAASR,EAAMQ,QAASP,SAAUA,EAA1D,SAAqED,EAAMW,Y,qTCAjFC,EAAe,CACjBC,KAAM,CAACC,MAAO,YAAaC,SAAU,GAAIC,KAAMC,IAAcC,GAAI,KACjEC,OAAQ,CAACL,MAAO,oBAAqBC,SAAU,uBAAwBC,KAAMI,IAAqBF,GAAI,WACtGG,SAAU,CAACP,MAAO,sBAAuBC,SAAU,yBAA0BC,KAAMM,IAAcJ,GAAI,aACrGK,YACI,CAACT,MAAO,yBAA0BC,SAAU,4BAA6BC,KAAMQ,IAAQN,GAAI,gBAC/FO,KAAM,CAACX,MAAO,kBAAmBC,SAAU,qBAAsBC,KAAMU,IAAkBR,GAAI,SAC7FS,MAAO,CAACb,MAAO,mBAAoBC,SAAU,sBAAuBC,KAAMY,IAAWV,GAAI,UACzFW,QAAS,CAACf,MAAO,qBAAsBC,SAAU,wBAAyBC,KAAMc,IAASZ,GAAI,YAC7Fa,KAAM,CAACjB,MAAO,kBAAmBC,SAAU,qBAAsBC,KAAMgB,IAAMd,GAAI,UCJrF,IAAMe,EAAc,IAOPC,GAAgBC,IAAMC,MAAK,WACpC,IAAO1C,EAAK2C,cAAL3C,EACDkB,EDYH,WACH,IAAMa,EAAOa,qBAAWC,IACxB,cAAQd,QAAR,IAAQA,OAAR,EAAQA,EAAMe,MACV,IAAK,aACD,MAAO,CAAC5B,EAAaC,KAAMD,EAAaO,OAAQP,EAAaa,MACjE,IAAK,UACD,MAAO,CAACb,EAAaC,KAAMD,EAAaS,SAAUT,EAAaa,MACnE,IAAK,YACD,MAAO,CAACb,EAAaC,KAAMD,EAAaO,OAAQP,EAAaS,SAAUT,EAAaa,MACxF,QACI,MAAO,ICtBMgB,GAErB,OACI,cAACC,EAAA,EAAD,CAAKC,UAAU,MAAMC,GAAI,CAACC,WAAY,CAACC,GAAI,GAAIC,MAAO,CAACD,GAAIb,IAA3D,SACI,cAACe,EAAA,EAAD,CAAQC,QAAM,EAAd,SACI,cAACC,EAAA,EAAD,CAAQ3C,MAAI,EAACG,QAAQ,aAArB,SACI,eAACgC,EAAA,EAAD,CAAKS,KAAK,eAAeP,GAAI,CAACG,MAAOd,GAArC,UACI,cAACmB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,gBAAc,EAApB,SACK3C,EAAa/B,KAAI,SAAC2E,GAAD,OACd,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAef,UAAWgB,IAAYzC,GAAIsC,EAAEtC,GAA5D,UACI,cAAC0C,EAAA,EAAD,UAAc,cAACC,EAAA,EAAD,CAASlB,UAAWa,EAAExC,SACpC,cAAC8C,EAAA,EAAD,CAAcC,QAASrE,EAAE8D,EAAE1C,WAFT0C,EAAE1C,wBAWrD,kBAAM,KAEF,SAASkD,GAAQhE,GACpB,OAAO,eAAC0C,EAAA,EAAD,CAAKE,GAAI,CAACqB,SAAU,GAApB,UACH,cAACb,EAAA,EAAD,IACA,cAAC,IAAMc,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAAmBC,SAAUrE,EAAMqE,cAI9D,SAASC,GAAKtE,GACjB,OAAO,cAAC0C,EAAA,EAAD,CAAKE,GAAI,CAAC2B,QAAS,QAASF,SAAUrE,EAAMqE,WAGvD,IAAMzB,GAAK,CAAC4B,GAAI,CAAC1B,GAAG,GAAD,OAAKb,EAAL,OAAuBc,MAAO,CAACD,GAAG,eAAD,OAAiBb,EAAjB,SAE7C,SAASwC,GAAczE,GAC1B,IAAOc,EAASd,EAATc,MACD4D,EAAUC,cAEVC,EAAUC,cAChB,OACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKP,EAA5C,SACI,cAACQ,EAAA,EAAD,CAAQtC,GAAIA,GAAZ,SACI,eAACQ,EAAA,EAAD,YACMpD,EAAMmF,gBACR,cAACC,EAAA,EAAD,CACIC,MAAM,UACNC,KAAK,QACL1C,GAAI,CAAC2C,YAAa,GAClBC,QAASZ,EAAQa,OACjBC,KAAK,QACLrB,SAAU,cAAC,IAAD,MAGd,cAACsB,EAAA,EAAD,CAAYN,MAAM,UAAU3E,QAAQ,KAApC,SAA0CI,IAC1C,cAAC4B,EAAA,EAAD,CAAKkD,GAAG,SACP5F,EAAMqE,gB,qDC3CZwB,OAxCf,WAEI,IAAMjB,EAAUC,cACTnF,EAAK2C,cAAL3C,EACP,EAA0ByC,IAAM2D,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAQC,eACRC,EAAUC,aAAcH,EAAMI,YAAYC,KAAK,OAC/C1F,EFgBH,WACH,IAAMa,EAAOa,qBAAWC,IACxB,cAAQd,QAAR,IAAQA,OAAR,EAAQA,EAAMe,MACV,IAAK,aACD,MAAO,CAAC5B,EAAaC,KAAMD,EAAaO,OAAQP,EAAaa,MACjE,IAAK,UACD,MAAO,CAACb,EAAaC,KAAMD,EAAaS,SAAUT,EAAaa,MACnE,IAAK,YACD,MAAO,CAACb,EAAaC,KAAMD,EAAaO,OAAQP,EAAaS,SAAUT,EAAaa,MACxF,QACI,MAAO,IE1BM8E,GAErB,OAAKJ,EAEA,qCACG,cAACzD,EAAA,EAAD,CAAKE,GAAI,CAAC4D,UAAW,UACrB,cAACC,GAAA,EAAD,CAAO7D,GAAI,CACPG,MAAO,OACP2D,SAAU,QACVC,OAAQ,EACRC,SAAU,SACVC,OAAQ,KACTC,UAAW,EANd,SAOI,cAACC,GAAA,EAAD,CACIhB,MAAOA,EACPiB,SAAU,SAACC,EAAOC,GACdlB,EAASkB,GACT,IAAMC,EAAcvG,EAAasG,GACd,MAAfC,GACAvC,EAAQwC,KAAKD,EAAYjG,KAGjCmG,YAAU,EATd,SAWKzG,EAAa/B,KAAI,SAAC2E,GAAD,OACd,cAAC8D,GAAA,EAAD,CAAwB7H,GAAI+D,EAAE1C,MAAOyG,MAAO7H,EAAE8D,EAAE1C,OAAQE,KAAM,cAAC6C,EAAA,EAAD,CAASlB,UAAWa,EAAExC,mBAvBnF,M,oBCPlB,SAASwG,GAAiBxH,GAC7B,IAAMiG,EAAQC,eACRuB,EAAarB,aAAcH,EAAMI,YAAYC,KAAK,OAExD,OACI,eAACoB,GAAA,EAAD,CACInH,KAAMP,EAAMO,KACZC,QAASR,EAAMQ,QACfiH,WAAYA,EAHhB,UAKKA,GACD,cAACvC,EAAA,EAAD,UACI,eAAC9B,EAAA,EAAD,WACI,cAACgC,EAAA,EAAD,CACIC,MAAM,UACNC,KAAK,QACLE,QAASxF,EAAMQ,QACfoC,GAAI,CAAC2C,YAAa,GAClBG,KAAK,QACLrB,SAAU,cAAC,IAAD,MAEd,cAACsB,EAAA,EAAD,CAAYjF,QAAQ,KAApB,SAA0BV,EAAMc,aAIxC,cAAC6G,GAAA,EAAD,CAAatD,SAAUrE,EAAMc,QAC5Bd,EAAMqE,Y,4CC/BNuD,GAAyB,SAAC5H,GACnC,IAAON,EAAK2C,cAAL3C,EAEP,OACI,eAAC8H,GAAD,CAAkB1G,MAAOpB,EAAE,iBACTa,KAAMP,EAAMO,KACZC,QAASR,EAAMQ,QAFjC,UAGI,cAACqH,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UAAoB9H,EAAMW,YAE9B,eAACoH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAQxC,QAASxF,EAAMQ,QAAvB,SAAiCd,EAAE,0BACnC,cAACsI,GAAA,EAAD,CAAQxC,QAASxF,EAAMiI,SAAvB,SAAkCvI,EAAE,6BCV7C,SAASwI,KACZ,MAA0BpC,mBAAgB,CAACvF,MAAM,IAAjD,mBAAO4H,EAAP,KAAcC,EAAd,KAOA,MAAO,CALO,CAAC7H,KAAM4H,EAAM5H,KAAMC,QADnB,kBAAM4H,GAAS,SAAAC,GAAS,kCAASA,GAAT,IAAoB9H,MAAM,QACfI,QAASwH,EAAMxH,SAC5C2H,uBAAY,SAAC3H,GAAD,aAAkByH,EAAS,CACvD7H,MAAM,EACNI,QAA4B,kBAAZA,EAAuBA,EAA9B,OAAwCA,QAAxC,IAAwCA,GAAxC,UAAwCA,EAAS4H,gBAAjD,aAAwC,EAAmBC,eACpE,K,gFCZD,SAASC,KACZ,IAAIC,EAAKC,aAAaC,QAAQ,WAC9B,GAAU,MAANF,EAAY,CACZ,IAAMG,EAAQ,CACV,gBACA,kBACA,sBAEEC,EAAQ,CAAC,GAAI,GAAI,GAAI,GAAI,GAAGjK,KAAI,SAAAI,GAClC,IAAM8J,EAAQ,IAAIC,KAElB,OADAD,EAAME,QAAQF,EAAMG,UAAYjK,GACzB8J,EAAMI,cAAcC,MAAM,EAAG,OAExCV,EAAKW,KAAKC,UAAU,CACZC,SAAU,CACN,WAAc,CACVC,KAAM,sBAGd/H,KAAM,CACF,gBAAiB,CACbgI,OAAQ,QACRC,MAAO,gBACPH,SAAU,oBACV/G,KAAM,WAEV,kBAAmB,CACfiH,OAAQ,SACRC,MAAO,kBACPH,SAAU,oBACV/G,KAAM,WAEV,sBAAuB,CACnBiH,OAAQ,QACRC,MAAO,sBACPH,SAAU,aACV/G,KAAM,cAEV,qBAAsB,CAClBiH,OAAQ,QACRC,MAAO,qBACPH,SAAU,aACV/G,KAAM,cAGdmH,SAAU/J,OAAOgK,OAAP,MAAAhK,OAAM,CAAQ,IAAR,oBAAeiJ,EAAMhK,KAAI,SAACgL,GAAD,uBACpCA,EAAI,CACD,CAACL,KAAM,CAAC,GAAM,YAAU,GAAM,WAAYhH,KAAM,WAChD,CAACgH,KAAM,CAAC,GAAM,SAAU,GAAM,WAAYhH,KAAM,WAChD,CAACgH,KAAM,CAAC,GAAM,YAAU,GAAM,UAAWhH,KAAM,UAC/C,CAACgH,KAAM,CAAC,GAAM,UAAW,GAAM,WAAYhH,KAAM,WACjD,CAACgH,KAAM,CAAC,GAAM,gBAAiB,GAAM,iBAAkBhH,KAAM,iBAC7D,CAACgH,KAAM,CAAC,GAAM,WAAY,GAAM,YAAahH,KAAM,YACnD,CAACgH,KAAM,CAAC,GAAM,cAAe,GAAM,eAAgBhH,KAAM,cACzD,CAACgH,KAAM,CAAC,GAAM,iBAAe,GAAM,cAAehH,KAAM,aACxD,CAACgH,KAAM,CAAC,GAAM,2BAAyB,GAAM,oBAAqBhH,KAAM,eACxE,CAACgH,KAAM,CAAC,GAAM,8BAA+B,GAAM,sBAAuBhH,KAAM,QAChF,CAACgH,KAAM,CAAC,GAAM,kCAAmC,GAAM,qBAAsBhH,KAAM,OACnF,CAACgH,KAAM,CAAC,GAAM,kCAAmC,GAAM,qBAAsBhH,KAAM,QACrF3D,KAAI,SAACgL,EAAGC,GAAJ,MAAW,CACbC,WAAYD,EAAEE,WACdC,MAAO,IACPT,KAAMK,EAAEL,KACRU,gBAAYC,EACZ3H,KAAMqH,EAAErH,KACR4H,QAAQ,aAGhBC,qBAAsBzK,OAAOgK,OAAP,MAAAhK,OAAM,CAAQ,IAAR,oBAAeiJ,EAAMhK,KAAI,SAACgL,GAAD,uBAChDA,EAAIf,EAAMwB,QAAO,SAACzL,EAAU0L,GAKzB,OAJA1L,EAAI0L,GAAO,CAAC,SAAU,aAAa1L,KAAI,SAAC2D,GAAD,MAAW,CAC9C,KAAQA,EACR,KAAQ,aAAIgI,MAAM,KAAK3L,KAAI,kBAAsB,GAAhB4L,KAAKC,gBAEnC7L,IACR,WAEP8L,YAAa/K,OAAOgK,OAAP,MAAAhK,OAAM,CAAQ,IAAR,oBAAeiJ,EAAMhK,KAAI,SAACgL,GAAD,uBACvCA,EAAIf,EAAMwB,QAAO,SAACzL,EAAU0L,GAKzB,OAJA1L,EAAI0L,GAAO,aAAIC,MAAM,KAAK3L,KAAI,SAACgL,EAAGpK,GAAJ,MAAY,CACtC,WAAcA,EAAGuK,WACjB,KAAQ,aAAIQ,MAAM,KAAK3L,KAAI,kBAAM,SAE9BA,IACR,WAEP0C,YAAa3B,OAAOgK,OAAP,MAAAhK,OAAM,CAAQ,IAAR,oBAAeiJ,EAAMhK,KAAI,SAACgL,GAAD,uBAAUA,EAAI,YAC1D9H,KAAMnC,OAAOgK,OAAP,MAAAhK,OAAM,CAAQ,IAAR,oBAAeiJ,EAAMhK,KAAI,SAACgL,GAAD,uBAAUA,EAAI,UACnDe,MAAO,CACH,4BAA6B,gBAC7B,6BAA8B,sBAC9B,6BAA8B,qBAC9B,6BAA8B,qBAI1CjC,aAAakC,QAAQ,UAAWnC,GAGpC,OAAOW,KAAKyB,MAAMpC,GAOf,SAASqC,GAAWrC,GACvBC,aAAakC,QAAQ,UAAWxB,KAAKC,UAAUZ,ICvG5C,IAAMsC,GAAb,WACI,WAAoB7L,EAAwD8L,GAAiC,0BAAzF9L,UAAwF,KAAhC8L,SADhF,uCAII,SAAGC,GACCC,QAAQC,IAAI,qCAAsCF,GAClDG,KAAKlM,QAAQ,CACT+L,KAAMA,EACNI,OAAQ,IACR9C,WAAY,KACZ+C,QAAS,GACTC,OAAQ,GACRC,QAAS,OAZrB,mBAgBI,WACIN,QAAQC,IAAI,yCACZC,KAAKJ,OAAO,CACR1C,SAAU,CACN2C,KAAM,GACNI,OAAQ,IACR9C,WAAY,cACZ+C,QAAS,GACTC,OAAQ,GACRC,QAAS,UAzBzB,KA+BaC,GAAb,WACI,WAAoBC,GAAqB,0BAArBA,WADxB,uCAII,SAAGT,GACKT,KAAKC,SAAW,GAAKW,KAAKM,SAASC,GAAGV,GAAYG,KAAKM,SAASE,UAL5E,mBAQI,WACIR,KAAKM,SAASE,YATtB,K,UC9BA,SAASC,GAAWC,EAAWC,GAC3B,IAAK,IAAIC,KAAOF,EACZ,GAAIC,EAAQD,EAAKE,IACb,OAAOA,EAGf,OAAO,KAIX,SAASC,GAAkBC,GACvB,OAAOA,EACF/M,MAAK,SAAA2G,GAAK,OAAI,IAAI7G,SAAW,SAAAC,GAAO,OAAIiN,YAAW,kBAAMjN,EAAQ4G,KAH5D,UAILsG,OAAM,SAAAC,GAAM,OAAI,IAAIpN,SAAW,SAACC,EAAS8L,GAAV,OAAqBmB,YAAW,kBAAMnB,EAAOqB,KAJvE,UAqLCC,ICzKXC,GDyKWD,G,wFA7KX,SAAsCE,EAAajB,GAwB/C,OAAOU,GAvBS,IAAIhN,SAAW,SAACC,EAAS8L,GACrC,IAAI5L,EAAc,IAAI2L,GAAgB7L,EAAS8L,GAG/C,GADAE,QAAQC,IAAR,kDAAuDqB,GAAOjB,KAC1D,OAACA,QAAD,IAACA,OAAD,EAACA,EAAQD,SAAS,OAAOlM,EAAEwM,QAC/B,IAAMnD,EAAKD,KAELmC,EAAQY,EAAOD,QAAQmB,cACvBjL,EAAOiH,EAAGkC,MAAMA,GACtB,GAAY,MAARnJ,EAAc,OAAOpC,EAAEwM,QAG3B,GAF6B,WAAzBnD,EAAGjH,KAAKA,GAAMgI,SAAqBpK,EAAI,IAAIqM,GAAerM,IAE1DoN,EAAIE,SAAS,cAAe,CAC5B,IAAMlN,EAAKgN,EAAIG,UAAUH,EAAII,YAAY,KAAO,GAC1CC,EAAQpE,EAAGiB,SAASlI,GAAMsL,WAAU,SAACC,GAAD,OAAaA,EAAGjD,WAAWC,aAAevK,EAAGuK,cACvF,OAAI8C,EAAQ,EAAUzN,EAAEwM,SACxBnD,EAAGiB,SAASlI,GAAMwL,OAAOH,EAAO,GAEhC/B,GAAWrC,GACJrJ,EAAEuM,GAAG,KAEhB,OAAOvM,EAAEwM,c,iBAKjB,SAAmCY,EAAajB,GAsD5C,OAAOU,GArDS,IAAIhN,SAAW,SAACC,EAAS8L,GACrC,IAAI5L,EAAc,IAAI2L,GAAgB7L,EAAS8L,GAG/C,GADAE,QAAQC,IAAR,+CAAoDqB,GAAOjB,IACtDA,EAAQ,OAAOnM,EAAEwM,QACtB,IAAMnD,EAAKD,KAEX,GAAIgE,EAAIS,SAAS,gBAAiB,CAC9B,MAAiC1B,EAAO2B,OAAjCC,EAAP,EAAOA,gBAAiB1D,EAAxB,EAAwBA,MACxB,MAAwB,SAApB0D,GAAgD,MAAlB1E,EAAGjH,KAAKiI,GAC/BrK,EAAEuM,GAAG,IAETvM,EAAEwM,QACN,GAAIY,EAAIS,SAAS,UAAW,CAC/B,MAA0B1B,EAAO2B,OAA1BzD,EAAP,EAAOA,MAAO2D,EAAd,EAAcA,SAEd,OAAY,MADC3E,EAAGjH,KAAKiI,IACY,WAAb2D,EACThO,EAAEuM,GAAG,CAAChB,MAAOkB,GAAWpD,EAAGkC,OAAO,SAACf,GAAD,OAAeA,IAAMH,OAE3DrK,EAAEwM,QAEb,IAAKL,EAAOD,QAAS,OAAOlM,EAAEwM,QAC9B,IAAMjB,EAAQY,EAAOD,QAAQmB,cACvBjL,EAAOiH,EAAGkC,MAAMA,GACtB,GAAY,MAARnJ,EAAc,OAAOpC,EAAEwM,QAG3B,GAF6B,WAAzBnD,EAAGjH,KAAKA,GAAMgI,SAAqBpK,EAAI,IAAIqM,GAAerM,IAE1DoN,EAAIS,SAAS,WF0BzBvE,aAAa2E,WAAW,WExBZjO,EAAEuM,GAAG,SACF,GAAIa,EAAIS,SAAS,SACpB7N,EAAEuM,GAAGlD,EAAGjH,KAAKA,SACV,GAAIgL,EAAIS,SAAS,aACpB7N,EAAEuM,GAAGlD,EAAGiB,SAASlI,SACd,GAAIgL,EAAIS,SAAS,yBACpB7N,EAAEuM,GAAGhM,OAAOD,KAAK+I,EAAG2B,qBAAqB5I,UACtC,GAAIgL,EAAIE,SAAS,0BAA2B,CAC/C,IAAMG,EAAQL,EAAIG,UAAUH,EAAII,YAAY,KAAO,GACnDxN,EAAEuM,GAAGlD,EAAG2B,qBAAqB5I,GAAMqL,SAChC,GAAIL,EAAIS,SAAS,gBACpB7N,EAAEuM,GAAGhM,OAAOD,KAAK+I,EAAGiC,YAAYlJ,UAC7B,GAAIgL,EAAIE,SAAS,iBAAkB,CAAC,IAAD,EAChCG,EAAQL,EAAIG,UAAUH,EAAII,YAAY,KAAO,GACnDxN,EAAEuM,GAAF,UAAKlD,EAAGiC,YAAYlJ,GAAMqL,UAA1B,QAAoC,SACjC,GAAIL,EAAIE,SAAS,eACpBtN,EAAEuM,GAAGlD,EAAGnH,YAAYE,SACjB,GAAIgL,EAAIE,SAAS,UAAW,CAAC,IAAD,EACzBG,EAAQL,EAAIG,UAAUH,EAAII,YAAY,KAAO,GACnDxN,EAAEuM,GAAF,UAAKlD,EAAG3G,KAAKN,GAAMqL,UAAnB,QAA6B,CAACS,EAAG,EAAGC,EAAG,SAEvCnO,EAAEwM,c,kBAMd,SAAoCY,EAAavB,EAAYM,GACzD,OAAO,IAAItM,SAAW,SAACC,EAAS8L,GAC5B,IAAI5L,EAAc,IAAI2L,GAAgB7L,EAAS8L,GAG/C,GADAE,QAAQC,IAAR,gDAAqDqB,GAAOjB,IACvDA,EAAQ,OAAOnM,EAAEwM,QACtB,IAAMnD,EAAKD,KAEX,GAAIgE,EAAIS,SAAS,aAEb,OADA/B,QAAQC,IAAI,6BAA8BF,GACnC7L,EAAEuM,GAAG,IAGhB,IAAKJ,EAAOD,QAAS,OAAOlM,EAAEwM,QAC9B,IAAMjB,EAAQY,EAAOD,QAAQmB,cACvBjL,EAAOiH,EAAGkC,MAAMA,GACtB,GAAY,MAARnJ,EAAc,OAAOpC,EAAEwM,QAG3B,GAF6B,WAAzBnD,EAAGjH,KAAKA,GAAMgI,SAAqBpK,EAAI,IAAIqM,GAAerM,IAE1DoN,EAAIS,SAAS,aAAc,CAC3B,IAAOO,EAAiBjC,EAAO2B,OAAxBM,cACP,OAAqB,MAAjBA,EAA8BpO,EAAEwM,SACpCnD,EAAGiB,SAASlI,GAAM2F,KAAK,CACnB2C,WAAY2D,eACZzD,MAAO,IACPC,WAAYuD,EACZjL,KAAM,OACN4H,QAAQ,IAEZW,GAAWrC,GACJrJ,EAAEuM,GAAG,KAGhB,OAAOvM,EAAEwM,a,iBAIjB,SAAmCY,EAAavB,EAAYM,GACxD,OAAO,IAAItM,SAAW,SAACC,EAAS8L,GAC5B,IAAI5L,EAAc,IAAI2L,GAAgB7L,EAAS8L,GAE/C,GADAE,QAAQC,IAAR,+CAAoDqB,GAAO,UAAWjB,EAAQ,QAASN,KACnF,OAACM,QAAD,IAACA,OAAD,EAACA,EAAQD,SAAS,OAAOlM,EAAEwM,QAC/B,IAAMnD,EAAKD,KACLmC,EAAQY,EAAOD,QAAQmB,cACvBjL,EAAOiH,EAAGkC,MAAMA,GACtB,GAAY,MAARnJ,EAAc,OAAOpC,EAAEwM,QACE,WAAzBnD,EAAGjH,KAAKA,GAAMgI,SAAqBpK,EAAI,IAAIqM,GAAerM,IAE9D,IAAMI,EAAKgN,EAAIkB,MAAM,KAAKC,MAC1B,GAAU,MAANnO,EAAY,OAAOJ,EAAEwM,QAEzB,GAAIY,EAAIoB,WAAW,aAAc,CAC7B,MAAyCrC,EAAO2B,OAAzCM,EAAP,EAAOA,cAAeK,EAAtB,EAAsBA,gBAOtB,OAyBhB,SAA0BC,EAAYC,EAAqBC,GACvD,IAAMC,EAAgBH,EAAMhB,UAAUiB,GACtCD,EAAMG,GAAN,2BAA2BH,EAAMG,IAAmBD,GAjCxCE,CAAiBzF,EAAGiB,SAASlI,IACzB,SAAC2M,GAAD,OAAsBA,EAAErE,WAAWC,aAAevK,EAAGuK,aACrD,CAACE,WAAYuD,EAAerD,OAAQ0D,IAExC/C,GAAWrC,GAEJrJ,EAAEuM,GAAG,IACT,GAAIa,EAAIoB,WAAW,gBAAiB,CACvC,IAAMQ,EAAO5B,EAAIG,UAAUH,EAAII,YAAY,KAAO,GAIlD,OAHAnE,EAAGiC,YAAYlJ,GAAM4M,GAAQnD,EAAI,YACjCH,GAAWrC,GAEJrJ,EAAEuM,GAAG,IACT,GAAIa,EAAIoB,WAAW,SAAU,CAChC,IAAMQ,EAAO5B,EAAIG,UAAUH,EAAII,YAAY,KAAO,GAIlD,OAHAnE,EAAG3G,KAAKN,GAAM4M,GAAQnD,EAAI,KAC1BH,GAAWrC,GAEJrJ,EAAEuM,GAAG,IACT,GAAIa,EAAIoB,WAAW,eAItB,OAHAnF,EAAGnH,YAAYE,GAAQyJ,EAAI,KAC3BH,GAAWrC,GAEJrJ,EAAEuM,GAAG,IAGhBvM,EAAEwM,e,KChLDyC,KAAMC,OAAO,CAACC,QAASC,yCAMvBH,KAAMC,OAAO,CAACC,QAASC,yCAehCjC,GAVU,CACVkC,QAAS,IAAInC,GACb/J,KAAM,QACNmM,eAAgB,WAYpB,IAGenD,GAHH,eACLgB,I,oGC1BA,SAASoC,GAAgB5O,GAC5B,IAAOkB,EAAmClB,EAAnCkB,GAAIF,EAA+BhB,EAA/BgB,KAAMF,EAAyBd,EAAzBc,MAAOC,EAAkBf,EAAlBe,SAAU8N,EAAQ7O,EAAR6O,KAClC,OACI,cAACC,GAAA,EAAD,CAAMlM,GAAI,CAACmM,YAAaF,OAAO1E,EAAY,gBAA3C,SACI,cAAC6E,GAAA,EAAD,CAAgBrM,UAAWgB,IAAYzC,GAAIA,EAA3C,SACI,eAACwB,EAAA,EAAD,CAAK6B,QAAQ,OAAb,UACI,cAAC0K,GAAA,EAAD,CAAWrM,GAAI,CACXsM,gBAAiBL,EAAO,iBAAmB,eAC3CtK,QAAS,OACT4K,WAAY,SACZC,QAAS,OAJb,SAMI,cAACvL,EAAA,EAAD,CAASlB,UAAW3B,EAAM4B,GAAI,CAACyC,MAAO,wBAE1C,eAACgK,GAAA,EAAD,WACI,cAAC1J,EAAA,EAAD,CAAYjF,QAAQ,KAApB,SAA0BI,IAC1B,cAAC6E,EAAA,EAAD,CAAYN,MAAM,gBAAgBiK,QAAM,EAAxC,SAA0CvO,cCxB3D,SAASwO,KACZ,MAA0BzJ,oBAAS,GAAnC,mBAAOqC,EAAP,KAAcC,EAAd,KACA,MAAO,CAAC,CAAC7H,KAAM4H,EAAO3H,QAAS,kBAAM4H,GAAS,KAASE,uBAAY,kBAAMF,GAAS,KAAO,KAkCtF,SAASoH,GAAWxP,GACvB,OACI,eAACwH,GAAD,CAAkB1G,MAAOd,EAAMc,MAAOP,KAAMP,EAAMO,KAAMC,QAASR,EAAMQ,QAAvE,UACI,cAACqH,GAAA,EAAD,UAAgB7H,EAAMyP,UACtB,cAAC1H,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAQxC,QAASxF,EAAMQ,QAAvB,qB,wBCnChB,SAASkP,GAAc1P,GACnB,OAAO,cAAC2P,GAAA,EAAD,CAAOC,WAAY5P,EAAM6P,kBAAmBnP,QAAQ,MAAM2E,MAAM,OAAhE,SAAwErF,EAAMgB,OAGzF,SAAS8O,GAAgB9P,GACrB,OACI,cAAC+P,GAAA,EAAD,CAASjP,MAAOd,EAAMgQ,YAAtB,SACI,cAAC5K,EAAA,EAAD,CACIC,MAAM,UACNG,QAASxF,EAAMwF,QACfE,KAAK,QACLrB,SAAU,cAACqL,GAAD,eAAmB1P,QAM7C,SAASiQ,GAAgBjQ,GACrB,OACI,cAACgI,GAAA,EAAD,CAAQkI,UAAW,cAACR,GAAD,eAAmB1P,IAC9BqF,MAAM,UACNG,QAASxF,EAAMwF,QACfnB,SAAUrE,EAAMgQ,cAKzB,SAASG,GAAqBnQ,GACjC,IAAMiG,EAAQC,eAEd,OADmBE,aAAcH,EAAMI,YAAYC,KAAK,OACjC,cAACwJ,GAAD,eAAqB9P,IACrC,cAACiQ,GAAD,eAAqBjQ,ICrCjB,SAASoQ,GAA2BC,EAAoBC,GACnE,IAAM7O,EAAOa,qBAAWC,IAClBgO,EAAa,SAACrF,GAAD,yBAAC,eAA0BA,GAA3B,IAAiCmD,MAAO,IAAIrF,KAAQvH,KAAI,iBAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMgI,cAAR,QAAkB,aAE7F,EAA6C+G,sBAAeD,EAAWF,GADjD,SAACC,GAAD,mBAAC,eAAuCA,GAAxC,IAAiDG,iBAAiB,IACFC,CAAcJ,IAA7FK,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WACd,MAAO,CAACD,MAAOA,EAAOC,WAAY,SAAC1F,GAAD,OAAU0F,EAAWL,EAAWrF,KAAQ2F,gBAD1E,EAA0BA,iBCwDfC,OAnDf,SAAiB9Q,GACb,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,YAAnCJ,MACP,EAA8BpB,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAA0BnL,qBAA1B,mBAAOgD,EAAP,KAAcoI,EAAd,KACOxR,EAAK2C,cAAL3C,EACP,EAA0BwI,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACOC,EAA6BpR,EAA7BoR,eAAgBC,EAAarR,EAAbqR,UAoBvB,OAlBAC,qBAAU,WACNF,EAAeG,iBACVnS,KAAK8R,EAAUC,GACf9E,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBD,IAEpBG,qBAAU,WACND,EAAU,CACNvQ,MAAOpB,EAAE,sBACT8R,gBAAgB,EAChBnN,SAAU,kBAAM,cAAC8L,GAAD,CACZH,YAAatQ,EAAE,QACfsB,KAAM,cAACyQ,GAAA,EAAD,IACNjM,QAASyL,SAGlB,CAACvR,EAAG2R,EAAWJ,IAEbnI,EAGD,eAAC6H,EAAD,WACI,cAACe,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAACgP,GAAI,GAAlC,SACI,cAACC,GAAA,EAAD,CAAOC,QAAS,EAAhB,SACKhJ,EAAMjK,KAAI,SAACwP,EAAMvB,GACV,IAAMiF,EAAajH,aAAMuD,EAAM,aAAc,IAAIrF,MACjD,OAAO,cAAC4F,GAAD,CACH1N,GAAE,6BAAwBmN,GAC1BrN,KAAM8L,EAAQkF,KAAsBC,KACpCnR,MAAOpB,EAAE,qBAAsB,CAAC2O,KAAM0D,IACtChR,SAAU+L,EAAQ,mBAAqB,wBACvC+B,OAAQ/B,WAM5B,cAAC0C,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAAS,cAAC3H,GAAA,EAAD,CAAmBzD,SAAU3E,EAAE,mBAAwBsR,IAC9F,cAACjR,EAAD,eAAmB8L,OApBR,cAACzH,EAAA,EAAD,K,4GCnBjB8N,GAAmB,SAACC,EAAcC,GAAf,OAAgCD,EAAEE,WAAaD,EAAEC,UAAYF,EAAEG,gBAAkBF,EAAEE,eAC/FC,GAAOpQ,IAAMC,MAAK,SAAUpC,GACrC,IAAOsS,EAAyFtS,EAAzFsS,cAAeD,EAA0ErS,EAA1EqS,SAAUG,EAAgExS,EAAhEwS,aAAcC,EAAkDzS,EAAlDyS,YAAaC,EAAqC1S,EAArC0S,cAAeC,EAAsB3S,EAAtB2S,mBACpEC,EAAQC,mBACR9D,EAXU,WAChB,IAAM+D,EAAexQ,qBAAWyQ,IAC1BC,EAAkB5M,aAAc,gCACtC,OAAK0M,EAAaG,KACW,SAAtBH,EAAaG,KADWD,EAQXE,GAAgB,WAAa,WAajD,GAXA5B,qBAAU,WACN,IAAM6B,EAAKP,EAAMQ,QACjB,GAAKD,EAGL,OAFAA,EAAGE,iBAAiB,aAAcb,EAAc,CAACc,SAAS,IAC1DH,EAAGE,iBAAiB,YAAaZ,EAAa,CAACa,SAAS,IACjD,WACHH,EAAGI,oBAAoB,aAAcf,GACrCW,EAAGI,oBAAoB,YAAad,MAEzC,CAACA,EAAaD,EAAcI,IAE3BN,EACA,OAAO,cAACkB,GAAA,EAAD,CACHC,IAAKb,EACLhQ,GAAI,CACA8Q,OAAQ,EACR3E,YAAaA,EACbG,gBAAe,OAAEyD,QAAF,IAAEA,IAAsB,gBAE3CgB,YAAanB,EACboB,YAAanB,IAGrB,GAAiB,IAAbJ,EACA,OAAO,cAACmB,GAAA,EAAD,CACHC,IAAKb,EACLhQ,GAAI,CACA8Q,OAAQ,EACR3E,YAAaA,GAEjB4E,YAAanB,EACboB,YAAanB,IAGrB,GAAiB,IAAbJ,EACA,OAAO,cAACmB,GAAA,EAAD,CACHC,IAAKb,EACLhQ,GAAI,CACA8Q,OAAQ,EACR3E,YAAaA,EACbG,gBAAe,OAAEwD,QAAF,IAAEA,IAAiB,kBAEtCiB,YAAanB,EACboB,YAAanB,IAGrB,IAAMoB,EAAU,IAAM,GAAKxB,EAC3B,OACI,cAACmB,GAAA,EAAD,CACIC,IAAKb,EACLhQ,GAAI,CACA8Q,OAAQ,EACR3E,YAAaA,EACb+E,gBAAgB,+BAAD,OAAiCD,EAAjC,qBAA8CnB,QAA9C,IAA8CA,IAAiB,UAA/D,YAA4EmB,EAA5E,QAEnBF,YAAanB,EACboB,YAAanB,MAGtBP,ICrFI,SAAS6B,GAAoB1U,GAA0C,IAAD,MACrE2U,EAIJ,GAAI3U,EAAE4U,QAAS,CACX,IAAMC,EAAQ7U,EAAE4U,QAAQ,GACxBD,EAASG,SAASC,iBAAiBF,EAAMG,QAASH,EAAMI,cAGxD,IADAN,EAAS3U,EAAE2U,OACe,OAAnBA,EAAOO,SAAkBP,EAASA,EAAOQ,WAEpD,MAAO,CACHC,KAAW,QAAN,EAAAT,SAAA,mBAAQQ,kBAAR,eAAoBE,UAAW,EACpCC,QAAc,QAAN,EAAAX,SAAA,eAAQY,WAAY,GAI7B,IAAMC,GAAS,SAAC1C,EAAWC,GAAZ,MAA0B,CAAC3H,KAAKqK,IAAI3C,EAAGC,GAAI3H,KAAKsK,IAAI5C,EAAGC,KAChE4C,GAAe,SAAC3V,GAAD,OAAyB,IAAbA,EAAEqE,QAA2B,cAAXrE,EAAEmD,MCwH7CyS,G,oDA5GX,WAAYjV,GAAe,IAAD,+BACtB,cAAMA,IA8CVkV,qBAAuB,SAAC7V,GAEpB,IAD2B,EAAK8I,MAAzBgN,kBACkBH,GAAa3V,GAAtC,CAEAA,EAAE+V,iBACF,MAAsBrB,GAAoB1U,GAAnCoV,EAAP,EAAOA,IAAKE,EAAZ,EAAYA,YACAxK,IAARsK,QAAgCtK,IAAXwK,GACzB,EAAKvM,SAAS,CACV+M,kBAAkB,EAClBE,SAAUZ,EACVa,YAAaX,EACbY,OAAQd,EACRe,UAAWb,EACXc,SAAU,EAAKzV,MAAM0V,KAAKjB,GAAKkB,WAAWhB,OA5DxB,EAgE1BiB,oBAAsB,SAACvW,GACnB,MAA8C,EAAK8I,MAA5CgN,EAAP,EAAOA,iBAAkBI,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,UACjC,GAAKL,EAAL,CAEA9V,EAAE+V,iBACF,MAAsBrB,GAAoB1U,GAAnCoV,EAAP,EAAOA,IAAKE,EAAZ,EAAYA,YACAxK,IAARsK,QAAgCtK,IAAXwK,IACrBY,IAAWd,GAAOe,IAAcb,GAChC,EAAKvM,SAAS,CAACmN,OAAQd,EAAKe,UAAWb,OAxErB,EA4E1BkB,qBAAuB,SAACxW,GACpB,MAA8E,EAAK8I,MAA5EgN,EAAP,EAAOA,iBAAkBE,EAAzB,EAAyBA,SAAUE,EAAnC,EAAmCA,OAAQD,EAA3C,EAA2CA,YAAaE,EAAxD,EAAwDA,UAAWC,EAAnE,EAAmEA,QACnE,GAAKN,GAAqBH,GAAa3V,GAAvC,CAEA,IAAM0G,EAAQ,EAAK/F,MAAM0V,KAAK7W,KAAI,SAACiX,GAAD,OAAOlW,OAAOgK,OAAO,GAAIkM,EAAEH,eAC7D,EAAyBd,GAAOQ,EAAUE,GAA1C,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA+BnB,GAAOS,EAAaE,GAAnD,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,GAAIH,IAAWC,GAAUC,IAAcC,EACnCnQ,EAAMgQ,GAAQG,IAAcnQ,EAAMgQ,GAAQG,GAAa,GAAK,OAE5D,IAAK,IAAIzB,EAAMsB,EAAQtB,GAAOuB,EAAQvB,IAClC,IAAK,IAAIE,EAASsB,EAAWtB,GAAUuB,EAAWvB,IAC9C5O,EAAM0O,GAAKE,GAAUc,EAAU,EAAI,EAK/C,EAAKrN,SAAS,CAAC+M,kBAAkB,IACjC,EAAKnV,MAAMgH,SAASjB,KA9FE,EAiG1BoQ,oBAAsB,SAAC1B,EAAaE,GAChC,MAAqE,EAAKxM,MAAnEgN,EAAP,EAAOA,iBAAkBE,EAAzB,EAAyBA,SAAUE,EAAnC,EAAmCA,OAAQD,EAA3C,EAA2CA,YAAaE,EAAxD,EAAwDA,UAExD,IAAKL,EAAkB,OAAO,EAC9B,MAAyBN,GAAOQ,EAAUE,GAA1C,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA+BnB,GAAOS,EAAaE,GAAnD,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,OAAOzB,GAAOsB,GAAUtB,GAAOuB,GAAUrB,GAAUsB,GAAatB,GAAUuB,GArG1E,EAAK/N,MAAQ,CACTgN,kBAAkB,EAClBE,SAAU,EACVC,YAAa,EACbC,OAAQ,EACRC,UAAW,EACXC,SAAS,GARS,E,sDAY1B,WACIW,OAAO/C,iBAAiB,UAAWhI,KAAKwK,sBACxCO,OAAO/C,iBAAiB,WAAYhI,KAAKwK,wB,kCAG7C,WACIO,OAAO7C,oBAAoB,UAAWlI,KAAKwK,sBAC3CO,OAAO7C,oBAAoB,WAAYlI,KAAKwK,wB,oBAGhD,WAAU,IAAD,OACEH,EAAQrK,KAAKrL,MAAb0V,KACP,OAAO,mCACFA,EAAK7W,KAAI,SAAC4V,EAAK3K,GAAN,OACN,eAACuM,GAAA,EAAD,WACI,cAAC7C,GAAA,EAAD,CAAWnP,SAAUoQ,EAAI6B,OAAQ1T,GAAI,CACjC8D,SAAU,SACV6P,KAAM,EACNrH,gBAAiB,mBACjBwE,OAAQ,KAEXe,EAAIkB,WAAW9W,KAAI,SAACwT,EAAUmE,GAAX,OAChB,cAACjE,GAAD,CACID,cAAe,EAAK6D,oBAAoBrM,EAAG0M,GAC3CnE,SAAUA,EACVG,aAAc,EAAK0C,qBACnBzC,YAAa,EAAKmD,oBAClBlD,cAAe+B,EAAI/B,cACnBC,mBAAoB8B,EAAI9B,oC,GAzCnBxQ,IAAMsU,W,0QChBhC,SAASC,GAAUC,EAAmCC,GACzD,OAAIA,GAAyB,KAAbA,EAAwBA,EACnCD,EAGQ,OADAE,KAAQC,SACKH,EAAII,GACvBJ,EAAIK,GAJM,GAOrB,IAGMC,GAAiB,CACnBC,QAAS,CAAClW,KAAM,cAAC,KAAD,IAAwBqE,MAAO8R,KAAKC,KAAeC,SAAUF,KAAKG,MAClFC,QAAS,CAACvW,KAAM,cAAC,KAAD,IAAeqE,MAAOmS,KAAKJ,KAAeC,SAAUG,KAAKF,MACzEG,OAAQ,CAACzW,KAAM,cAAC,KAAD,IAAkBqE,MAAOqS,KAAON,KAAeC,SAAUK,KAAOJ,MAC/EK,QAAS,CAAC3W,KAAM,cAAC,KAAD,IAAYqE,MAAO8R,KAAKC,KAAeC,SAAUF,KAAKG,MACtEM,cAAe,CAAC5W,KAAM,cAAC,KAAD,IAAUqE,MAAOwS,KAAKT,KAAeC,SAAUQ,KAAKP,MAC1EQ,SAAU,CAAC9W,KAAM,cAAC,KAAD,IAAQqE,MAAO0S,KAAMX,KAAeC,SAAUU,KAAMT,MACrEU,WAAY,CAAChX,KAAM,cAAC,KAAD,IAAaqE,MAAO4S,KAAIb,KAAeC,SAAUY,KAAIX,MACxEY,UAAW,CAAClX,KAAM,cAAC,KAAD,IAAUqE,MAAO8R,KAAKC,KAAeC,SAAUF,KAAKG,MACtEa,YAAa,CAACnX,KAAM,cAAC,IAAD,IAAWqE,MAAOmS,KAAKJ,KAAeC,SAAUG,KAAKF,MACzEc,KAAM,CAACpX,KAAM,cAAC,KAAD,IAASqE,MAAO4S,KAAIb,KAAeC,SAAUY,KAAIX,MAC9De,IAAK,CAACrX,KAAM,cAAC,KAAD,IAASqE,MAAOiT,KAAMlB,KAAeC,SAAUiB,KAAMhB,MACjEiB,IAAK,CAACvX,KAAM,cAAC,KAAD,IAASqE,MAAO0S,KAAMX,KAAeC,SAAUU,KAAMT,MACjEkB,QAAS,CAACxX,KAAM,cAAC,KAAD,IAASqE,MAAOqS,KAAON,KAAeC,SAAUK,KAAOJ,OAG9DmB,GAAiB,SAACjW,GAAD,OAAkBA,KAAQyU,GAAYA,GAAUzU,GAAQyU,GAAUuB,SCfhG,IACME,GAAQlO,MAAMmO,KAAKnO,MAAM,IAAI7K,QAAQd,KAAI,SAAAgL,GAAC,OAD7B,SAACA,GAAD,OAAeA,EAAI,GAAK,IAAMA,EAAI,GAAKA,EACN+O,CAAW/O,MACzDgP,GAAS,CAAC,aAAc,SAAU,OAClCC,GAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGja,KAAI,SAAAgL,GAAC,OAAIgP,GAAOhP,MAE3GwE,GAAO,IAAIrF,KACX+P,IAAU,IAAI/P,MAAOG,cAAcC,MAAM,EAAG,IAsHnC4P,OA7Gf,SAAkBhZ,GACd,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,aAAnCJ,MACP,EAAwB7K,qBAAxB,mBAAO4P,EAAP,KAAauD,EAAb,KACA,EAAgCnT,oBAAS,GAAzC,mBAAOoT,EAAP,KAAiBC,EAAjB,KACA,EAA0BjR,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACA,EAA8BjJ,KAA9B,mBAAOkR,EAAP,KAAgBC,EAAhB,KACO3Z,EAAK2C,cAAL3C,EACP,EAA8B6P,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KACOI,EAA6BrR,EAA7BqR,UAAWD,EAAkBpR,EAAlBoR,eAElBE,qBAAU,WACNpS,QAAQoa,IAAI,CAAClI,EAAemI,eAAgBnI,EAAeoI,cAAcT,MACpE3Z,MAAK,YAA+B,IAAD,mBAA5B6X,EAA4B,KAAjBtM,EAAiB,KAC1BgL,EAAasB,EACdwC,QAAO,SAACrL,GAAD,OAAOA,EAAEhE,UAChBvL,KAAI,SAACuP,GAAO,IAAD,IACFsL,EAAejB,GAAerK,EAAE5L,MACtC,MAAO,CACH8T,OACI,cAACvG,GAAA,EAAD,CAASjP,MAAO4V,GAAUtI,EAAE5E,KAAM4E,EAAElE,YAAayP,gBAAiB,EAAlE,SACI,cAACC,GAAA,EAAD,CACIlZ,QAAQ,UACRkC,GAAI,CAACG,MAAO,GAAI8W,OAAQ,GAAI3K,gBAAiBwK,EAAarU,OAF9D,SAIKqU,EAAa1Y,SAI1B+I,WAAYqE,EAAErE,WACd4L,WAAU,oBAAEhL,EAAYmP,MAAK,SAACC,GAAD,OAAOA,EAAEhQ,aAAeqE,EAAErE,qBAA7C,aAAE,EAAwDmB,YAA1D,QAAkEwN,GAAM7Z,KAAI,kBAAM,KAC5F6T,cAAegH,EAAarU,MAC5BsN,mBAAoB+G,EAAarC,aAG7C4B,EAAQtD,GACRwD,GAAY,KACbhI,GACF9E,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBD,IAEpB,IAAM6I,EAAe1R,uBAAY,SAAC2R,GAC9BhB,GAAQ,SAAA5Q,GAAS,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWxJ,KAAI,SAAC4V,EAAK3K,GAAN,mBAAC,eAAgB2K,GAAjB,IAAsBkB,WAAYsE,EAAMnQ,WAC5EqP,GAAY,KACb,IAEGe,EAAa5R,uBAAY,WAC3BoN,GAAQtE,EAAe+I,cAAcpB,GAASrD,EAAK7W,KAAI,SAACiX,GAAD,MAAQ,CAAC/L,WAAY+L,EAAE/L,WAAYmB,KAAM4K,EAAEH,gBAC7FvW,MAAK,WACFia,EAAW3Z,EAAE,kBACbyZ,GAAY,KACbhI,GACF9E,MAAMlB,QAAQC,OACpB,CAACsK,EAAMtE,EAAgBD,EAAUkI,EAAY3Z,IAgBhD,GAdA4R,qBAAU,WACND,EAAU,CACNvQ,MAAOpB,EAAE,2BAA4B,CAAC2O,KAAMA,KAC5CmD,gBAAgB,EAChBnN,SAAU,kBAAM,qCACZ,cAAC8L,GAAD,CAAsBH,YAAatQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBwE,QAASyL,IAC9E,cAACd,GAAD,CAAsBN,kBAAmBqJ,EACnBlJ,YAAatQ,EAAE,QACfsB,KAAM,cAACgR,GAAA,EAAD,IACNxM,QAAS0U,YAGxC,CAACxa,EAAG2R,EAAW6I,EAAYjJ,EAAUiI,KAEnCxD,EAAM,OAAO,cAACtR,EAAA,EAAD,IAElB,IAAMgW,EAAc,WAChB,IAAMC,EAAW3a,EAAE,gBAAiB,CAAC4a,eAAe,IAC9CC,EAAgB7a,EAAE,gBAAiB,CAAC4a,eAAe,IACzD,OAAO,qCACFD,EAASxb,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmB2S,WAAS,EAACpW,SAAUmW,OAC5DD,EAAc1b,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmBzD,SAAUmW,WAIhE,OACI,eAAC7J,EAAD,WACI,cAACe,GAAA,EAAD,CAAWgJ,gBAAc,EAAC/I,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,EAAGpW,QAAS,QAArE,SACI,cAACqW,GAAA,EAAD,CACIhY,GAAI,CAACgE,SAAU,OAAQiU,UAAW,CAACC,GAAI,sBAAuBhY,GAAI,uBADtE,SAEI,eAACiY,GAAA,EAAD,CAAOC,cAAY,EAACtV,KAAK,QAAQ9C,GAAI,CAACqY,WAAY,OAAQC,eAAgB,YAA1E,UACI,eAACC,GAAA,EAAD,WACI,eAAC9E,GAAA,EAAD,WACI,cAAC7C,GAAA,EAAD,CAAW9S,QAAQ,OAAOkC,GAAI,CAAC8Q,OAAQ,KACtCgF,GAAM7Z,KAAI,SAACkH,GAAD,OAAW,eAACyN,GAAA,EAAD,CAAW4H,MAAM,SAAjB,UAA2BC,OAAOtV,GAAlC,wBAE1B,eAACsQ,GAAA,EAAD,WACI,cAAC7C,GAAA,EAAD,CAAW5Q,GAAI,CAAC8Q,OAAQ,KACvBoF,GAAgBja,KAAI,SAACgL,GAAD,OAAO,cAAC2J,GAAA,EAAD,CACxB5Q,GAAI,CAAC8Q,OAAQ,EAAGxE,gBAAiBrF,EAAGyR,IAAK,mBAGrD,cAACC,GAAA,EAAD,UACI,cAAC,GAAD,CAAoB7F,KAAMA,EAAM1O,SAAUgT,aAK1D,cAAC,IAAD,CAAQwB,KAAMtC,EAAUvY,QAASjB,EAAE,qBACnC,cAAC8P,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAAS,cAAC2K,EAAD,KAAoBpJ,IAC3D,cAACjR,EAAD,2BAAmBqZ,GAAnB,IAA4BnZ,SAAS,aACrC,cAACF,EAAD,eAAmB8L,Q,mFC3HlB4P,GAAe,SAACtJ,EAAUC,GAAX,OAAwBsJ,GAAiBvJ,EAAExI,SAAUyI,EAAEzI,WACtE+R,GAAmB,SAACvJ,EAAkBC,GAAnB,OAC5BD,EAAE3P,OAAS4P,EAAE5P,MACb2P,EAAEpI,aAAeqI,EAAErI,YACnBoI,EAAE/H,SAAWgI,EAAEhI,QA4CJuR,GA1CMxZ,IAAMC,MAAK,SAACpC,GAC7B,IAAON,EAAK2C,cAAL3C,EACAiK,EAAiD3J,EAAjD2J,SAAUiS,EAAuC5b,EAAvC4b,UAAWC,EAA4B7b,EAA5B6b,YAAaC,EAAe9b,EAAf8b,YACnCpY,IAAWkY,EACXG,EAAoBpS,EAASS,OAAS1K,EAAE,iBAAmBA,EAAE,iBAC7Dsc,EAAetF,GAAU/M,EAASH,KAAMG,EAASO,YACjDwP,EAAejB,GAAe9O,EAASnH,MAC7C,OACI,eAACiB,EAAA,EAAD,CACUN,UAAMgH,EACNzG,OAAQA,EACR8B,QAAS,kBAAMoW,GAAaA,EAAUjS,IAHhD,UAII,cAACsS,GAAA,EAAD,UACI,cAACrC,GAAA,EAAD,CAAQhX,GAAI,CAACsM,gBAAiBwK,EAAarU,OAAQhB,SAAUqV,EAAa1Y,SAE9E,cAAC8C,EAAA,EAAD,CAAcC,QAASiY,IACvB,eAACE,GAAA,EAAD,WACKL,GACD,cAAC9L,GAAA,EAAD,CAASjP,MAAOib,EAAhB,SACI,cAAC3W,EAAA,EAAD,CACIE,KAAK,MACL,cAAayW,EACbvW,QAAS,kBAAMqW,EAAYlS,IAC3BjE,KAAK,QAJT,SAKKiE,EAASS,OAAS,cAAC,KAAD,IAAgB,cAAC,KAAD,QAI1C0R,GACD,cAAC1W,EAAA,EAAD,CACIE,KAAK,MACL,cAAY,SACZE,QAAS,kBAAMsW,EAAYnS,IAC3BjE,KAAK,QAJT,SAKI,cAAC,KAAD,WA1BGiE,EAASI,cAgC7B0R,ICKYU,OA3Df,SAAmBnc,GACf,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,cAAnCJ,MACP,EAAkC7K,qBAAlC,mBAAOmR,EAAP,KAAkBmF,EAAlB,KACA,EAA0BlU,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACA,EAA8B5B,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KACOvR,EAAK2C,cAAL3C,EACA0R,EAA6BpR,EAA7BoR,eAAgBC,EAAarR,EAAbqR,UAEvBC,qBAAU,WACNF,EAAemI,eACVna,KAAKgd,EAAcjL,GACnB9E,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBD,IAEpB,IAAMkL,EAAoB/T,uBAAY,SAACqB,GACnC,OAAOyH,EAAekL,YAAf,2BAA+B3S,GAA/B,IAAyCS,QAAST,EAASS,UAC7DhL,MAAK,kBAAMgS,EAAemI,kBAC1Bna,KAAKgd,EAAcjL,GACnB9E,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBD,IAiBpB,OAfAG,qBAAU,kBAAMD,EAAU,CACtBvQ,MAAOpB,EAAE,kBACT8R,gBAAgB,EAChBnN,SAAU,kBAAM,cAAC8L,GAAD,CAAsBH,YAAatQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBwE,QAASyL,SAC9F,CAACvR,EAAG2R,EAAWJ,IAWdgG,EAGD,eAACtG,EAAD,WACI,cAACe,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,EAAG4B,cAAe,IAA5D,SACI,cAAC9V,GAAA,EAAD,CAAO/F,QAAQ,WAAf,SACI,cAAC4C,EAAA,EAAD,UACK2T,GAAaA,EAAUpY,KAAI,SAACmO,GAAD,OACxB,cAAC,GAAD,CAEIrD,SAAUqD,EACV6O,YAAaQ,GAFRrP,EAAGjD,qBAQ5B,cAAChK,EAAD,eAAmB8L,IACnB,cAAC2D,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QA3BtB,WACZ,IAAM4K,EAAW3a,EAAE,iBAAkB,CAAC4a,eAAe,IAC/CkC,EAAe9c,EAAE,gBAAiB,CAAC4a,eAAe,IACxD,OAAO,qCACFD,EAASxb,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmB2S,WAAS,EAACpW,SAAUmW,OAC5DgC,EAAa3d,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmBzD,SAAUmW,UAsBhB/K,IAAeuB,OAlBvC,cAAC5M,EAAA,EAAD,KCxCrBxD,GAAwD,CAC1DO,OAAQ,CAACL,MAAO,oBAAqBC,SAAU,uBAAwBC,KAAMI,IAAqBF,GAAI,WACtGG,SAAU,CAACP,MAAO,sBAAuBC,SAAU,yBAA0BC,KAAMM,IAAcJ,GAAI,aACrGS,MAAO,CAACb,MAAO,mBAAoBC,SAAU,sBAAuBC,KAAMY,IAAWV,GAAI,UACzFW,QAAS,CAACf,MAAO,qBAAsBC,SAAU,wBAAyBC,KAAMc,IAASZ,GAAI,YAC7Fa,KAAM,CAACjB,MAAO,kBAAmBC,SAAU,qBAAsBC,KAAMgB,IAAMd,GAAI,UA8EtEub,OArDf,SAAczc,GACV,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,SAAnCJ,MACAjR,EAAK2C,cAAL3C,EACA2R,EAAarR,EAAbqR,UACD5P,EAAOa,qBAAWC,IAClBma,EA3BoB,SAACla,GAC3B,OAAQA,GACJ,IAAK,aACD,MAAO,CAAC5B,GAAaO,QACzB,IAAK,UACD,MAAO,CAACP,GAAaiB,QAASjB,GAAamB,MAC/C,IAAK,YACD,MAAO,CAACnB,GAAaO,OAAQP,GAAamB,MAC9C,QACI,OAAO,MAkBM4a,CAAqB,OAAClb,QAAD,IAACA,OAAD,EAACA,EAAMe,MAC3Coa,EAbG,eAaiB,OAACnb,QAAD,IAACA,OAAD,EAACA,EAAMe,MAZlB,CAAC5B,GAAae,OAEd,KAoBf,OARA2P,qBAAU,WACND,EAAU,CACNvQ,MAAOpB,EAAE,cACT8R,gBAAgB,EAChBnN,SAAU,kBAAM,kCAErB,CAAC3E,EAAG2R,IAGH,cAACV,EAAD,UACI,cAACe,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,GAA1C,SACI,eAAC9I,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACK4K,GACD,eAAC7K,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAACnM,EAAA,EAAD,CAAYjF,QAAQ,KAApB,SAA0BhB,EAAE,qBAC3Bgd,EAAa7d,KAAI,SAACge,EAAM/P,GAAP,OACd,wBAAC8B,GAAD,2BACQiO,GADR,IAEI/b,MAAOpB,EAAEmd,EAAK/b,OACdC,SAAUrB,EAAEmd,EAAK9b,UACjBkL,IAAKa,WAKhB8P,GACD,eAAC/K,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAACnM,EAAA,EAAD,CAAYjF,QAAQ,KAApB,SAA0BhB,EAAE,uBAC3Bkd,EAAQ/d,KAAI,SAACge,EAAM/P,GAAP,OACT,wBAAC8B,GAAD,2BACQiO,GADR,IAEI/b,MAAOpB,EAAEmd,EAAK/b,OACdC,SAAUrB,EAAEmd,EAAK9b,UACjB8N,MAAI,EACJ5C,IAAKa,mBC/E/BlK,GAAK,CAAC2B,QAAS,OAAQuY,eAAgB,SAAU3N,WAAY,SAAU0K,OAAQ,SAmBtEkD,OAjBR,SAAqB/c,GACxB,IAAON,EAAK2C,cAAL3C,EACP,OACI,cAACgS,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAIA,GAA7B,SACI,eAAC6D,GAAA,EAAD,CAAOuW,QAAM,EAACtc,QAAQ,WAAWkC,GAAI,CAACG,MAAO,OAAQgX,EAAG,GAAxD,UACI,cAACpU,EAAA,EAAD,CAAYjF,QAAQ,KAAKuc,UAAU,SAAS5Y,SAAU3E,EAAE,gBACxD,cAACgD,EAAA,EAAD,CAAKwa,GAAI,IACT,cAAC9Y,EAAA,EAAD,IACA,eAACyN,GAAA,EAAD,CAAO7M,UAAU,MAAMpC,GAAI,CAACka,eAAgB,WAAYlL,GAAI,GAA5D,UACI,cAAC5J,GAAA,EAAD,CAAQrF,UAAWgB,IAAYzC,GAAG,UAAU0B,GAAI,CAACua,GAAI,GAAI9Y,SAAU3E,EAAE,YACrE,cAACsI,GAAA,EAAD,CAAQxC,QAASxF,EAAMod,MAAO/Y,SAAU3E,EAAE,oB,gFCmBxD2d,GAAaC,aAAOC,KAAPD,CAAa,CAC5BE,OAAQ,EACRpO,QAAS,EACT7K,QAAS,OACTkZ,cAAe,SACftO,WAAY,WAGhB,SAASuO,GAAqB1d,GAI1B,MAAkBqC,cAAX3C,EAAP,EAAOA,EAAGie,EAAV,EAAUA,KACJC,EAAiBzb,IAAMmG,aAAY,SAACwO,GAAD,OACjC6G,EAAKC,eAAe9G,GACfzK,MAAMlB,QAAQC,KACdyS,SAAQ,kBAAM7d,EAAMQ,eAC3B,CAACmd,EAAM3d,IACb,OAAO,cAACwH,GAAD,yBAAkB1G,MAAOpB,EAAE,oBAAwBM,GAAnD,aACH,eAACsD,EAAA,EAAD,CAAMV,GAAI,CAACgP,GAAI,GAAf,UACI,cAACkM,GAAA,EAAD,CAAgBtY,QAAS,kBAAMoY,EAAe,OAA9C,SACI,cAAC9Z,EAAA,EAAD,CAAcC,QAASrE,EAAE,oBAE7B,cAACoe,GAAA,EAAD,CAAgBtY,QAAS,kBAAMoY,EAAe,OAA9C,SACI,cAAC9Z,EAAA,EAAD,CAAcC,QAASrE,EAAE,yBAsG1Bqe,OAhGf,SAAe/d,GACX,MAA0B8F,mBAAgB,CAACsH,gBAAiB,GAAI1D,MAAO,KAAvE,mBAAOvB,EAAP,KAAcC,EAAd,KACA,EAA0BF,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACOzR,EAAK2C,cAAL3C,EACDkF,EAAUC,cACTuM,EAAkBpR,EAAlBoR,eACP,EAA0C7B,KAA1C,mBAAOyO,EAAP,KAAwBC,EAAxB,KACA,EAA8B1O,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAAgCnL,oBAAS,GAAzC,mBAAOoY,EAAP,KAAiBC,EAAjB,KAEMC,EAAe9V,uBAAY,SAACjJ,GAC9BA,EAAE+V,iBACF+I,GAAY,GACZ/M,EAAeiN,WAAWlW,EAAMiF,gBAAiBjF,EAAMuB,OAClDtK,MAAK,kBAAMwF,EAAQwC,KAAK,UAAW,CAACsC,MAAOvB,EAAMuB,WACjD2C,MAAM8E,GACN0M,SAAQ,kBAAMM,GAAY,QAChC,CAAC/M,EAAgBxM,EAASuM,EAAUhJ,EAAMuB,MAAOvB,EAAMiF,kBAEpDgN,EAAc,WAChB,IAAMC,EAAW3a,EAAE,qBAAsB,CAAC4a,eAAe,IACzD,OAAO,mCAAGD,EAASxb,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmBzD,SAAUmW,UAGhE,OACK,qCACG,cAAC9I,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,cAACjP,EAAA,EAAD,CAAKE,GAAI,CAAC2B,QAAS,OAAQ4K,WAAY,SAAU0K,OAAQ,SAAzD,SACI,eAAC0D,GAAA,EAAD,CAAMe,WAAS,EAACxM,QAAS,EAAzB,UACI,eAACuL,GAAD,CAAYR,MAAI,EAAC/B,GAAI,GAAIyD,IAAE,EAA3B,UACI,cAAC5Y,EAAA,EAAD,CAAY8U,WAAS,EAAC9X,UAAU,KAAKjC,QAAQ,KAA7C,oBACA,cAACiF,EAAA,EAAD,CAAYhD,UAAU,KAAKjC,QAAQ,KAAnC,SAAyChB,EAAE,sBAE/C,eAAC2d,GAAD,CAAYR,MAAI,EAAC/B,GAAI,GAAIyD,IAAE,EAA3B,UACI,cAAC3E,GAAA,EAAD,CAAQhX,GAAI,CAAC4a,OAAQ,MAAOtO,gBAAiB,oBAC7C,cAACvJ,EAAA,EAAD,CAAYhD,UAAU,KAAKjC,QAAQ,KAAnC,SAAyChB,EAAE,mBAC3C,uBAAM8e,SAAUJ,EAAhB,UACI,cAACK,GAAA,EAAD,CACIC,WAAS,EACTC,aAAa,QACbC,SAAUV,EACVze,GAAG,QACH8H,MAAO7H,EAAE,uBACTgB,QAAQ,WACR8c,OAAO,SACPzX,MAAOoC,EAAMuB,MACb1C,SAAU,SAAC3H,GAAD,OAAO+I,EAAS,2BAAID,GAAL,IAAYuB,MAAOrK,EAAE2U,OAAOjO,UACrD8Y,UAAQ,EACRC,WAAS,IAEb,cAACL,GAAA,EAAD,CACIhf,GAAG,kBACHmf,SAAUV,EACV3W,MAAO7H,EAAE,yBACTgB,QAAQ,WACR8c,OAAO,SACPzX,MAAOoC,EAAMiF,gBACbpG,SAAU,SAAC3H,GAAD,OAAO+I,EAAS,2BAAID,GAAL,IAAYiF,gBAAiB/N,EAAE2U,OAAOjO,UAC/D8Y,UAAQ,EACRC,WAAS,EACTC,WAAY,CACRC,aACI,cAACC,GAAA,EAAD,CAAgBvY,SAAS,MAAzB,SACI,cAACtB,EAAA,EAAD,CAAYI,QAASyL,EAArB,SACI,cAACQ,GAAA,EAAD,CAAcpM,MAAM,mBAKxC,cAAC6Z,GAAA,EAAD,CACI1c,KAAK,SACLsc,WAAS,EACTpe,QAAQ,YACR2E,MAAM,UACNzC,GAAI,CAAC4D,UAAW,GAChB2Y,QAASjB,EANb,SAQKxe,EAAE,+BAO3B,cAAC0f,GAAA,EAAD,CAAKte,MAAOpB,EAAE,mBACT2F,MAAM,UACNK,KAAK,SACLF,QAASyY,EACT5Z,SAAU,cAACgb,GAAA,EAAD,MACf,cAAC3B,GAAD,eAA0BM,IAC1B,cAACxO,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAAS,cAAC2K,EAAD,KAAoBpJ,IAC3D,cAACjR,EAAD,eAAmB8L,QCxIhByT,OAff,SAAgBtf,GACZ,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,WAAnCJ,MACAvJ,EAAQvC,cAARuC,KACAgK,EAAkBpR,EAAlBoR,eASP,OAPAE,qBAAU,WACNF,EACKmO,SACAlT,MAAMlB,QAAQC,KACdhM,MAAK,kBAAMgI,EAAK,UACtB,CAACgK,EAAgBhK,IAEb,cAACuJ,EAAD,UAAO,cAACvM,EAAA,EAAD,O,sCCcLqX,GAAe,SAACtJ,EAAeC,GAAhB,OAAkCD,EAAEpQ,KAAKwL,IAAM6E,EAAErQ,KAAKwL,GAAK4E,EAAEpQ,KAAKyL,IAAM4E,EAAErQ,KAAKyL,GAErGgS,GAAiBrd,IAAMC,MAAK,SAAUpC,GACxC,IAAMiG,EAAQC,eACPxG,EAAK2C,cAAL3C,EAEP+f,KAAS1Q,YAAc9I,EAAMyZ,QAAQC,QACrCF,KAASpa,MAAQY,EAAMyZ,QAAQlF,KAAKzW,QACpC,IAAM6b,EAAmB,CACrBC,eAAe,EACf9K,IAAK,GACLD,IAAK,EACLgL,MAAO,CAACvb,SAAS,GACjBwb,KAAM,CAACxb,SAAS,IAGpB,OAAO,cAAC,KAAD,CACH2G,KAAM,CACF8U,OAAQ,CAAC,OACTC,SAAU,CAAC,CACP/U,KAAM,CAAC,2BAAIlL,EAAM+B,MAAX,IAAiB+T,EAAG,MAC1BoK,YAAa,EACbhR,gBAAiBjJ,EAAMyZ,QAAQ3b,QAAQoc,KACvCC,eAAgB,MAGxB9P,QAAS,CACL+P,qBAAqB,EACrBC,aAAc,EACdC,OAAQ,CACJ/S,EAAE,2BACKoS,GADN,IAEG9e,MAAO,CACHyD,SAAS,EACTiW,KAAM,CAAC9a,EAAE,2BAA6B,+DAAeA,EAAE,6BAG/D6N,EAAE,2BACKqS,GADN,IAEG9e,MAAO,CACHyD,SAAS,EACTiW,KAAM9a,EAAE,kBAAoB,+DAAeA,EAAE,qBAIzD8gB,QAAS,SAAUnhB,GACDA,EAAEohB,MAAMC,0BAA0BrhB,EAAG,UAAW,CAACshB,WAAW,IAAO,GACvEC,OAAQvhB,EAAEwhB,OAAO7M,OAAO8M,MAAMC,OAAS,OAC5C1hB,EAAEwhB,OAAO7M,OAAO8M,MAAMC,OAAS,WAExCC,QAAS,CAELC,SAAU,CACNC,OAAO,EACPC,aAAa,EACbC,YAAa,kBAAM,MACnBC,OAAQ,kBAAM,MACdC,UAAW,SAACjiB,EAAQkiB,EAAmBzU,EAAe/G,GAClD1G,EAAE2U,OAAO8M,MAAMC,OAAS,UACxB/gB,EAAMgH,SAASjB,KAGvByb,OAAQ,CAACjd,SAAS,GAClBkd,QAAS,CAACC,SAAS,KAExB7H,OAAQ,IAAK9W,MAAO,QAC5B0Y,IAEGpN,IAAO,IAAIrF,MAAOG,cAAcC,MAAM,EAAG,IAsGhCpH,OApGf,SAAchC,GACV,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,SAAnCJ,MACAjR,EAAK2C,cAAL3C,EACP,EAA8B6P,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAA8B/I,KAA9B,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAA0BnR,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACA,EAAwBrL,qBAAxB,mBAAO/D,EAAP,KAAa4f,EAAb,KACA,EAAgC7b,oBAAS,GAAzC,mBAAOoT,EAAP,KAAiBC,EAAjB,KACA,EAA0BrT,mBAAS,KAAnC,mBAAO8b,EAAP,KAAcC,EAAd,KAEOzQ,EAA6BpR,EAA7BoR,eAAgBC,EAAarR,EAAbqR,UACjB5P,EAAOa,qBAAWC,IAExB+O,qBAAU,WACNF,EAAe0Q,QAAQzT,IAClBjP,KAAKuiB,EAASxQ,GACd/R,MAAK,kBAAM+Z,GAAY,MACvB9M,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBD,IAEpB,IAAM4Q,EAAczZ,uBAAY,WACvBvG,GACLqP,EAAe4Q,QAAQ3T,GAAMtM,GACxB3C,MAAK,kBAAMia,EAAW3Z,EAAE,oBAAmByR,GAC3C/R,MAAK,kBAAM+Z,GAAY,MACvB9M,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBrP,EAAMoP,EAAUkI,EAAY3Z,IAE1CuiB,EAAe3Z,uBAAY,SAACvG,GAC9B4f,EAAQ5f,GACRoX,GAAY,KACb,IAmBH,GAjBA7H,qBAAU,WACND,EAAU,CACNvQ,MAAOpB,EAAE,mBACT8R,gBAAgB,EAChBnN,SAAU,WACN,MAAc,MAAVud,EAAsB,6BACnB,qCACH,cAACzR,GAAD,CAAsBnP,KAAM,cAAC,KAAD,IAAiBwE,QAASyL,EAAUjB,YAAatQ,EAAE,UAC/E,cAACyQ,GAAD,CAAsBN,kBAAmBqJ,EACnBlY,KAAM,cAACgR,GAAA,EAAD,IACNxM,QAASuc,EACT/R,YAAatQ,EAAE,kBAIlD,CAACA,EAAG2R,EAAW0Q,EAAa9Q,EAAUiI,EAAU0I,KAE9C7f,EAAM,OAAO,cAACqC,EAAA,EAAD,IAElB,IAAMiW,EAAW3a,EAAE,YAAa,CAAC4a,eAAe,IAC1C4H,EAAc,mCAAG7H,EAASxb,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmB2S,WAAS,EAACpW,SAAUmW,SAE7E2H,EAA0B,aAAX,OAAJ1gB,QAAI,IAAJA,OAAA,EAAAA,EAAMe,MAAqB,kCAAoC,oCAChF,OAAO,eAACmO,EAAD,WACH,cAACe,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,GAAID,gBAAc,EAA5D,SACI,eAAC0H,GAAA,EAAD,CAAYrc,MAAO6b,EAAnB,UACI,cAACS,GAAA,EAAD,CAAUtc,MAAM,IAAhB,SACI,eAACU,GAAA,EAAD,CAAO/F,QAAQ,WAAWkC,GAAI,CAACmX,EAAG,GAAlC,UACI,cAACpU,EAAA,EAAD,CAAYjF,QAAQ,KAApB,SAA0BhB,EAAE,wBAC5B,cAACgD,EAAA,EAAD,CAAKwa,GAAI,IACT,eAACrL,GAAA,EAAD,CAAO7M,UAAU,MAAMpC,GAAI,CAACka,eAAgB,WAAYlL,GAAI,GAA5D,UACI,cAAC5J,GAAA,EAAD,CACItH,QAAQ,YACR8E,QAAS,kBAAMqc,EAAS,MACxBxd,SAAU3E,EAAE,SAChB,cAACsI,GAAA,EAAD,CACIpF,GAAI,CAAC0f,WAAY,GACjB5hB,QAAQ,YACR8E,QAAS,kBAAMqc,EAAS,MACxBxd,SAAU3E,EAAE,gBAI5B,eAAC2iB,GAAA,EAAD,CAAUtc,MAAM,IAAhB,UACI,cAACJ,EAAA,EAAD,CAAYjF,QAAQ,KAAK0a,MAAM,SAASX,WAAS,EAAjD,SAAmD/a,EAAEyiB,KACrD,cAAC1b,GAAA,EAAD,CAAO/F,QAAQ,WAAWkC,GAAI,CAACmX,EAAG,GAAlC,SACI,cAACyF,GAAD,CAAgBzd,KAAMA,EAAMiF,SAAUib,SAG9C,cAACI,GAAA,EAAD,CAAUtc,MAAM,IAAhB,SACI,eAACU,GAAA,EAAD,CAAOuW,QAAM,EAACtc,QAAQ,WAAWkC,GAAI,CAACmX,EAAG,GAAzC,UACI,cAACpU,EAAA,EAAD,CAAYjF,QAAQ,KAApB,SAA0BhB,EAAE,0BAC5B,cAACgD,EAAA,EAAD,CAAKwa,GAAI,IACT,cAACrL,GAAA,EAAD,CAAO7M,UAAU,MAAMpC,GAAI,CAACka,eAAgB,WAAYlL,GAAI,GAA5D,SACI,cAAC5J,GAAA,EAAD,CAAQtH,QAAQ,YAAYiC,UAAWgB,IAAYzC,GAAG,IAAtD,SAA2DxB,EAAE,yBAMjF,cAAC,IAAD,CAAQ8b,KAAMtC,EAAUvY,QAASjB,EAAE,qBACnC,cAAC8P,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAASyS,GAAiBlR,IACxD,cAACjR,EAAD,2BAAmBqZ,GAAnB,IAA4BnZ,SAAS,aACrC,cAACF,EAAD,eAAmB8L,QC3KZ0W,OAtBf,SAAiBviB,GACb,IAAON,EAAK2C,cAAL3C,EACP,OACI,eAACgD,EAAA,EAAD,CAAKE,GAAI,CACL2B,QAAS,OACTkZ,cAAe,SACftO,WAAY,SACZ0K,OAAQ,OACRiD,eAAgB,UALpB,UAOI,cAACnX,EAAA,EAAD,CAAYjF,QAAQ,KAAK2D,SAAS,MAAMme,cAAY,IACpD,cAAC7c,EAAA,EAAD,CAAYjF,QAAQ,KAAK+Z,WAAS,EAACpW,SAAU3E,EAAE,oBAC/C,cAACsI,GAAA,EAAD,CACI3C,MAAM,UACN3E,QAAQ,YACRiC,UAAW8f,IACXvhB,GAAG,IAJP,SAKExB,EAAE,iB,oBCnBHgjB,GAAgB,SAACrU,GAAD,OAAkBsU,mBAAQ,kBAAM7X,aAAMuD,EAAM,aAAc,IAAIrF,QAAS,CAACqF,KC4B/FqK,GAAQlO,MAAMmO,KAAKnO,MAAM,IAAI7K,QAAQd,KAAI,SAAAgL,GAAC,OAD7B,SAACA,GAAD,OAAeA,EAAI,GAAK,IAAMA,EAAI,GAAKA,EACN+O,CAAW/O,MACzDgP,GAAS,CAAC,aAAc,SAAU,OAClCC,GAAkB,CAAC,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,EAAG,GAAGja,KAAI,SAAAgL,GAAC,OAAIgP,GAAOhP,MAa3G+Y,GAAuB,SAACzQ,EAAgBC,GAAjB,OAAoCD,EAAExI,SAASI,aAAeqI,EAAEzI,SAASI,YAChG8Y,GAAiB1gB,IAAMC,MAAK,SAACpC,GAC/B,IAAO2J,EAAY3J,EAAZ2J,SACD+P,EAAejB,GAAe9O,EAASnH,MAC7C,OAAQ,cAACuN,GAAA,EAAD,CAASjP,MAAO4V,GAAU/M,EAASH,KAAMG,EAASO,YAAayP,gBAAiB,EAAhF,SACJ,cAACC,GAAA,EAAD,CACIlZ,QAAQ,UACRkC,GAAI,CAACsM,gBAAiBwK,EAAarU,MAAOtC,MAAO,GAAI8W,OAAQ,IAC7DxV,SAAUqV,EAAa1Y,WAGhC4hB,IA4GYE,OA1Gf,SAAsB9iB,GAClB,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,iBAAnCJ,MACP,EAAwB7K,qBAAxB,mBAAO4P,EAAP,KAAauD,EAAb,KACA,EAAgCnT,oBAAS,GAAzC,mBAAOoT,EAAP,KAAiBC,EAAjB,KACA,EAA0BjR,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACA,EAA8BjJ,KAA9B,mBAAOkR,EAAP,KAAgBC,EAAhB,KACO3Z,EAAK2C,cAAL3C,EACP,EAA8B6P,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KAEM5C,EADQ,IAAI0U,gBAAgBC,cAAcC,QAC7BC,IAAI,QACjBC,EAAaT,GAAcrU,GAC3B+U,EAAYC,aAAQF,IAAeG,aAAOH,GAEzC9R,EAA6BrR,EAA7BqR,UAAWD,EAAkBpR,EAAlBoR,eAElBE,qBAAU,WACD8R,GACLlkB,QAAQoa,IAAI,CAAClI,EAAemI,eAAgBnI,EAAeoI,cAAcnL,KACpEjP,MAAK,YAA+B,IAAD,mBAA5B6X,EAA4B,KAAjBtM,EAAiB,KAC1BgL,EAAasB,EACdwC,QAAO,SAACrL,GAAD,OAAOA,EAAEhE,UAChBvL,KAAI,SAACuP,GAAO,IAAD,IACFsL,EAAejB,GAAerK,EAAE5L,MACtC,MAAQ,CACJ8T,OAAQ,cAACuM,GAAD,CAAgBlZ,SAAUyE,IAClCrE,WAAYqE,EAAErE,WACd4L,WAAU,oBAAEhL,EAAYmP,MAAK,SAACC,GAAD,OAAOA,EAAEhQ,aAAeqE,EAAErE,qBAA7C,aAAE,EAAwDmB,YAA1D,QAAkEwN,GAAM7Z,KAAI,kBAAM,KAC5F6T,cAAegH,EAAarU,MAC5BsN,mBAAoB+G,EAAarC,aAG7C4B,EAAQtD,GACRwD,GAAY,KACbhI,GACF9E,MAAMlB,QAAQC,OACpB,CAACgY,EAAWhS,EAAgBD,EAAU9C,IAEzC,IAAM2L,EAAe1R,uBAAY,SAAC2R,GAC9BhB,GAAQ,SAAA5Q,GAAS,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWxJ,KAAI,SAAC4V,EAAK3K,GAAN,mBAAC,eAAgB2K,GAAjB,IAAsBkB,WAAYsE,EAAMnQ,WAC5EqP,GAAY,KACb,IAEGe,EAAa5R,uBAAY,WAC3BoN,GAAQtE,EAAe+I,cAAc9L,EAAMqH,EAAK7W,KAAI,SAACiX,GAAD,MAAQ,CAAC/L,WAAY+L,EAAE/L,WAAYmB,KAAM4K,EAAEH,gBAC1FvW,MAAK,WACFia,EAAW3Z,EAAE,kBACbyZ,GAAY,KACbhI,GACF9E,MAAMlB,QAAQC,OACpB,CAACgG,EAAgB/C,EAAMqH,EAAMvE,EAAUkI,EAAY3Z,IAgBtD,GAdA4R,qBAAU,WACN8R,GAAa/R,EAAU,CACnBvQ,MAAOpB,EAAE,2BAA4B,CAAC2O,KAAM8U,IAC5C3R,gBAAgB,EAChBnN,SAAU,kBAAM,qCACZ,cAAC8L,GAAD,CAAsBH,YAAatQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBwE,QAASyL,IAC9E,cAACd,GAAD,CAAsBN,kBAAmBqJ,EACnBlJ,YAAatQ,EAAE,QACfsB,KAAM,cAACgR,GAAA,EAAD,IACNxM,QAAS0U,YAGxC,CAACkJ,EAAWD,EAAYjJ,EAAYhB,EAAUjI,EAAUI,EAAW3R,KAEjE0jB,EAAW,OAAO,cAAC,IAAD,CAAUliB,GAAI,MACrC,IAAKwU,EAAM,OAAO,cAACtR,EAAA,EAAD,IAElB,IAAMgW,EAAc,WAChB,IAAMC,EAAW3a,EAAE,qBAAsB,CAAC4a,eAAe,IACnDC,EAAgB7a,EAAE,gBAAiB,CAAC4a,eAAe,IACzD,OAAO,qCACFD,EAASxb,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmB2S,WAAS,EAACpW,SAAUmW,OAC5DD,EAAc1b,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmBzD,SAAUmW,WAIhE,OACI,eAAC7J,EAAD,WACI,cAACe,GAAA,EAAD,CAAWgJ,gBAAc,EAAC/I,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,EAAGpW,QAAS,QAArE,SACI,cAACqW,GAAA,EAAD,CACIhY,GAAI,CAACgE,SAAU,OAAQiU,UAAW,CAACC,GAAI,sBAAuBhY,GAAI,uBADtE,SAEI,eAACiY,GAAA,EAAD,CAAOC,cAAY,EAACtV,KAAK,QAAQ9C,GAAI,CAACqY,WAAY,OAAQC,eAAgB,YAA1E,UACI,eAACC,GAAA,EAAD,WACI,eAAC9E,GAAA,EAAD,WACI,cAAC7C,GAAA,EAAD,CAAW9S,QAAQ,SAClBgY,GAAM7Z,KAAI,SAACkH,GAAD,OAAW,eAACyN,GAAA,EAAD,CAAW4H,MAAM,SAAjB,UAA2BC,OAAOtV,GAAlC,wBAE1B,eAACsQ,GAAA,EAAD,WACI,cAAC7C,GAAA,EAAD,IACCsF,GAAgBja,KAAI,SAACgL,GAAD,OAAO,cAAC2J,GAAA,EAAD,CAAW5Q,GAAI,CAACsM,gBAAiBrF,EAAGyR,IAAK,mBAG7E,cAACC,GAAA,EAAD,UACI,cAAC,GAAD,CAAoB7F,KAAMA,EAAM1O,SAAUgT,aAK1D,cAAC,IAAD,CAAQwB,KAAMtC,EAAUvY,QAASjB,EAAE,qBACnC,cAAC8P,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAAS,cAAC2K,EAAD,KAAoBpJ,IAC3D,cAACjR,EAAD,2BAAmBqZ,GAAnB,IAA4BnZ,SAAS,aACrC,cAACF,EAAD,eAAmB8L,Q,UCpJzByE,GAAwB,CAC1BiT,WAAW,GAGR,SAASC,GAAWxjB,GACvB,IAAOoR,EAAwBpR,EAAxBoR,eAAgB/C,EAAQrO,EAARqO,KACjB8U,EAAaT,GAAcrU,GAC1B3O,EAAK2C,cAAL3C,EACP,EAAwBoG,qBAAxB,mBAAOoF,EAAP,KAAauY,EAAb,KAmBA,OAlBAnS,qBAAU,WACNF,EAAesS,wBAAwBrV,GAClCjP,MAAK,SAACukB,GACHF,EAAQ,CACJzD,OAAQxV,MAAMmO,KAAKnO,MAAM,IAAI7K,QAC7BsgB,SAAU0D,EAAa9kB,KAAI,SAACuP,GAAD,MAAQ,CAC3B7G,MAAO6G,EAAE5L,KACT0I,KAAMkD,EAAElD,KACR0Y,MAAM,EACN1U,gBAA6B,WAAXd,EAAE5L,KAAqB,oBAAsB,QAC/DuM,YAAa,mCAK5B1C,MAAMlB,QAAQC,OACpB,CAACgG,EAAgB/C,IAGhB,eAACS,GAAA,EAAD,CAAMpO,QAAQ,WAAd,UACI,cAACmjB,GAAA,EAAD,CAAY/iB,MAAOpB,EAAE,qBAAsB,CAAC2O,KAAM8U,MAClD,cAAC9T,GAAA,EAAD,UACI,cAAC,KAAD,CAAMnE,KAAMA,EAAMoF,QAASA,SAHLjC,GCAtByV,OA/BhB,SAAe9jB,GACX,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,UAAnCJ,MACP,EAA0B7K,qBAA1B,mBAAOgD,EAAP,KAAcoI,EAAd,KACOE,EAA6BpR,EAA7BoR,eAAgBC,EAAarR,EAAbqR,UAChB3R,EAAK2C,cAAL3C,EAcP,OAZA4R,qBAAU,WACNF,EAAe2S,2BACV3kB,KAAK8R,GACL7E,MAAMlB,QAAQC,OACpB,CAACgG,IAEJE,qBAAU,kBAAMD,EAAU,CACtBvQ,MAAOpB,EAAE,oBACT8R,gBAAgB,EAChBnN,SAAU,kBAAM,kCAChB,CAAC3E,EAAG2R,IAGJ,cAACV,EAAD,UACK7H,GACD,cAAC4I,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,GAA1C,SACI,cAAC9I,GAAA,EAAD,CAAOC,QAAS,EAAhB,SACKhJ,EAAMjK,KAAI,SAACwP,GAAD,OAAU,cAACmV,GAAD,CAAYnV,KAAMA,EAAM+C,eAAgBA,cCjC3E4S,I,mCAAM,IAAIhb,MAEHib,GAAa,SAACvL,EAAewL,GACtC,OAAO,IAAIlb,KAAKgb,GAAIG,SAAUH,GAAII,WAAYJ,GAAI9a,UAAWwP,EAAOwL,EAAS,EAAG,ICGpED,GAAW,EAAG,GACdA,GAAW,EAAG,GAGdA,GAAW,EAAG,GACdA,GAAW,EAAG,GACdA,GAAW,EAAG,GACdA,GAAW,EAAG,GACdA,GAAW,EAAG,GACdA,GAAW,EAAG,GACdA,GAAW,EAAG,G,4BCiUfI,I,UCtTTC,GAAQhH,aAAO,QAAPA,CAAgB,CAC1B/Y,QAAS,SAGPggB,GAAY,CACd,CAAC/a,KAAM,0BAA2Bgb,KAAM,8BACxC,CAAChb,KAAM,QAASgb,KAAM,+CACtB,CAAChb,KAAM,iBAAkBgb,KAAM,yCAG7BC,GAAY,CACd,CAACjb,KAAM,eAAgBgb,KAAM,mCAC7B,CAAChb,KAAM,qBAAsBgb,KAAM,mCACnC,CAAChb,KAAM,UAAWgb,KAAM,iCAsGbE,OAhGf,SAAgB1kB,GACZ,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,WAAnCJ,MACP,EAA8BzI,KAA9B,mBAAOkR,EAAP,KAAgBC,EAAhB,KACA,EAA0BnR,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACOzR,EAAK2C,cAAL3C,EACA0R,EAA6BpR,EAA7BoR,eAAgBC,EAAarR,EAAbqR,UACvB,EAA8B9B,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KAWAK,qBAAU,kBAAMD,EAAU,CACtBvQ,MAAOpB,EAAE,qBACT8R,gBAAgB,EAChBnN,SAAU,kBAAM,mCACZ,cAAC8L,GAAD,CAAsBH,YAAatQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBwE,QAASyL,WAElF,CAACvR,EAAG2R,EAAWJ,IAEnB,IAAMoJ,EAAW3a,EAAE,cAAe,CAAC4a,eAAe,IAC5C4H,EAAc,mCAAG7H,EAASxb,KAAI,SAAA2b,GAAI,OAAI,cAAC1S,GAAA,EAAD,CAAmB2S,WAAS,EAACpW,SAAUmW,SAEnF,OACI,eAAC7J,EAAD,WACI,cAACe,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,GAA1C,SACI,eAAC4C,GAAA,EAAD,CAAMe,WAAS,EAACxM,QAAS,EAAzB,UACI,eAACyL,GAAA,EAAD,CAAMV,MAAI,EAAC/B,GAAI,GAAIhY,GAAI,EAAvB,UACI,cAAC6C,EAAA,EAAD,CAAYjF,QAAQ,KAAK8hB,cAAY,EAArC,SAAuC9iB,EAAE,2BACzC,cAACiG,EAAA,EAAD,CAAYN,MAAM,iBAAiBoV,WAAS,EAA5C,SAA8C/a,EAAE,iCAChD,cAAC+G,GAAA,EAAD,UACI,eAACnD,EAAA,EAAD,WACI,6BACI,cAACqC,EAAA,EAAD,CACI/C,GAAI,CAACsa,GAAI,GAAK1Y,GAAI,GAClBa,MAAM,iBACNd,QAAQ,QACR7D,QAAQ,UAJZ,iCAMH6jB,GAAU1lB,KAAI,SAAAge,GAAI,OACf,eAACiB,GAAA,EAAD,CAAgCnb,UAAU,IAAIgiB,KAAM9H,EAAK2H,KAAMxQ,OAAO,SAAtE,UACI,cAACiI,GAAA,EAAD,UAAgB,cAAC2I,GAAA,EAAD,MAChB,cAAC9gB,EAAA,EAAD,CAAcC,QAAS8Y,EAAKrT,SAFXqT,EAAKrT,SAK9B,cAACnG,EAAA,EAAD,CAASV,UAAU,OACnB,6BACI,cAACgD,EAAA,EAAD,CACI/C,GAAI,CAACsa,GAAI,GAAK1Y,GAAI,GAClBa,MAAM,iBACNd,QAAQ,QACR7D,QAAQ,UAJZ,gCAMH+jB,GAAU5lB,KAAI,SAAAge,GAAI,OACf,eAACiB,GAAA,EAAD,CAAgCnb,UAAU,IAAIgiB,KAAM9H,EAAK2H,KAAMxQ,OAAO,SAAtE,UACI,cAACiI,GAAA,EAAD,UAAgB,cAAC2I,GAAA,EAAD,MAChB,cAAC9gB,EAAA,EAAD,CAAcC,QAAS8Y,EAAKrT,SAFXqT,EAAKrT,iBAS1C,eAAC+T,GAAA,EAAD,CAAMV,MAAI,EAAC/B,GAAI,GAAIhY,GAAI,EAAvB,UACI,cAAC6C,EAAA,EAAD,CAAYjF,QAAQ,KAAK8hB,cAAY,EAArC,SAAuC9iB,EAAE,yBACzC,cAACiG,EAAA,EAAD,CAAYN,MAAM,iBAAiBoV,WAAS,EAA5C,SAA8C/a,EAAE,+BAChD,wBAAOmlB,QAAQ,wBAAf,UACI,cAACP,GAAD,CACIQ,OAAO,oGACPrlB,GAAG,wBACH+C,KAAK,OACLwE,SAAU,SAAC3H,GAAD,MApEpB0lB,EAoEoB,OAAO,UAAA1lB,EAAE2U,cAAF,eAAUgR,SApErCD,EAoEuD1lB,EAAE2U,OAAOgR,MAAM,QAnEpF5T,EAAe6T,gBAAgBF,GAC1B3lB,MAAK,WACF+L,QAAQC,IAAI,kBACZiO,EAAW,mBACZlI,GACF9E,MAAMlB,QAAQC,SAgEC,cAACpD,GAAA,EAAD,CAAQtH,QAAQ,YACRgF,KAAK,QACLL,MAAM,UACNyZ,WAAS,EACTnc,UAAU,OACVuN,UAAW,cAAC,IAAD,IALnB,SAMExQ,EAAE,8BAKpB,cAAC8P,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAASyS,GAAiBlR,IACxD,cAACjR,EAAD,aAAeE,SAAS,WAAcmZ,IACtC,cAACrZ,EAAD,eAAmB8L,Q,0FCpG/B,SAASqZ,GAASllB,GACd,IAAOyB,EAAQzB,EAARyB,KACD0jB,EAAQ,CACV,CAACnkB,KAAM,cAACokB,GAAA,EAAD,IAAU5K,KAAM/Y,EAAKiI,OAC5B,CAAC1I,KAAM,cAACqkB,GAAA,EAAD,IAAe7K,KAAM/Y,EAAK8H,WAErC,OAAO,mCAAG4b,EAAMtmB,KAAI,SAACmO,EAAIsY,GAAL,OAChB,eAAC7hB,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UAAeoJ,EAAGhM,OAClB,cAAC8C,EAAA,EAAD,UAAekJ,EAAGwN,SAFP,WAAa8K,QAOpC,SAASC,GAAcvlB,GACnB,IAAON,EAAK2C,cAAL3C,EACP,OAAO,eAAC+D,EAAA,EAAD,CAAoCC,QAAM,EAACf,UAAWgB,IAAYzC,GAAI,aAAtE,UACH,cAAC0C,EAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACE,EAAA,EAAD,UAAepE,EAAE,mBACjB,cAACkE,EAAA,EAAD,UAAc,cAAC4hB,GAAA,EAAD,QAHI,qBAO1B,SAASC,GAAazlB,GAClB,IAAON,EAAK2C,cAAL3C,EACP,EAAgCoG,mBAAiB+Q,KAAQ6O,kBAAzD,mBAAO5O,EAAP,KAAiB6O,EAAjB,KACOxU,EAAYnR,EAAZmR,SAEDyM,EAAiBzb,IAAMmG,aAAY,SAACwO,GAAD,OACjCA,GAAYD,KAAQ+G,eAAe9G,GAC9B1X,MAAK,kBAAMumB,EAAY7O,KAAW3F,GAClC9E,MAAMlB,QAAQC,OACvB,CAAC+F,IACL,OAAO,mCACH,eAAC1N,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UAAc,cAACgiB,GAAA,EAAD,MACd,eAACC,GAAA,EAAD,CACI/G,WAAS,EACTzZ,MAAM,UACNU,MAAO+Q,EACPgP,WAAS,EACT9e,SAAW,SAACC,EAAOlB,GAAR,OAAkB6X,EAAe7X,IALhD,UAOI,cAACggB,GAAA,EAAD,CAAchgB,MAAM,KAApB,SAA0BrG,EAAE,kBAC5B,cAACqmB,GAAA,EAAD,CAAchgB,MAAM,KAApB,SAA0BrG,EAAE,sBAVtB,uBAgBtB,SAASsmB,GAAchmB,GAAY,IAAD,EACxBimB,EAAY3jB,qBAAWyQ,IACvBmT,EAAc,UAAGD,EAAUhT,YAAb,QAAqB,OAClCvT,EAAK2C,cAAL3C,EAKP,OACI,eAAC+D,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UAAc,cAACuiB,GAAA,EAAD,MACd,eAACN,GAAA,EAAD,CACI/G,WAAS,EACTzZ,MAAM,UACNU,MAAOmgB,EACPJ,WAAS,EACT9e,SAZS,SAACC,EAAYlB,GAC9BA,GAASkgB,EAAUG,gBAA2B,SAAVrgB,EAAmBA,OAAQoE,IAM3D,UAOI,cAAC4b,GAAA,EAAD,CAAchgB,MAAM,OAApB,kBACA,cAACggB,GAAA,EAAD,CAAchgB,MAAM,QAApB,SAA6BrG,EAAE,sBAC/B,cAACqmB,GAAA,EAAD,CAAchgB,MAAM,OAApB,SAA4BrG,EAAE,0BAXxB,sBA4EP2mB,OAtDf,SAAcrmB,GACV,IAAO2Q,EAASP,GAAmB,CAACW,KAAM,SAAnCJ,MACP,EAA8BpB,KAA9B,mBAAOyB,EAAP,KAAkBC,EAAlB,KACA,EAAwBnL,qBAAxB,mBAAOrE,EAAP,KAAa6kB,EAAb,KACA,EAA0Bpe,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACMvM,EAAUC,cACTnF,EAAK2C,cAAL3C,EACA0R,EAA6BpR,EAA7BoR,eAAgBC,EAAarR,EAAbqR,UAwBvB,OAtBAC,qBAAU,WACNF,EAAemV,UACVnnB,KAAKknB,EAASnV,GACd9E,MAAMlB,QAAQC,OACpB,CAACgG,EAAgBD,IAEpBG,qBAAU,WACND,EAAU,CACNvQ,MAAOpB,EAAE,mBACT8R,gBAAgB,EAChBnN,SAAU,kBACN,qCACI,cAAC8L,GAAD,CAAsBH,YAAatQ,EAAE,QAASsB,KAAM,cAACyQ,GAAA,EAAD,IAAiBjM,QAASyL,IAC9E,cAACd,GAAD,CACInP,KAAM,cAACwlB,GAAA,EAAD,IACNhhB,QAAS,kBAAMZ,EAAQwC,KAAK,YAC5B4I,YAAatQ,EAAE,oBAIhC,CAACkF,EAASqM,EAAUvR,EAAG2R,IAGtB,eAACV,EAAD,WACKlP,GACD,eAACiQ,GAAA,EAAD,CAAWC,SAAS,KAAK/O,GAAI,CAAC+X,WAAY,GAA1C,UACI,cAAClU,GAAA,EAAD,CAAO/F,QAAQ,WAAWsc,QAAM,EAAhC,SACI,eAAC1Z,EAAA,EAAD,WACI,cAAC4hB,GAAD,CAAUzjB,KAAMA,IAChB,cAAC4B,EAAA,EAAD,CAAS3C,QAAQ,QAAQiC,UAAU,OACpB,eAAdlB,EAAKe,MAAyB,cAAC+iB,GAAD,IAC/B,cAACE,GAAD,CAActU,SAAUA,IACxB,cAAC6U,GAAD,SAGPvX,OAGHhN,GAAQ,cAAC2C,EAAA,EAAD,IACV,cAACoL,GAAD,aAAY1O,MAAOpB,EAAE,QAAS+P,QAAS,cAAC3H,GAAA,EAAD,CAAmBzD,SAAU3E,EAAE,oBAAyBsR,IAC/F,cAACjR,EAAD,eAAmB8L,QC7JzB4a,GAAOnJ,aAAO,OAAPA,CAAe,CACxBva,MAAO,OACPyD,UAAW,IAOTkgB,GAAkBpJ,aAAO,MAAPA,CAAc,CAClCE,OAAQ,EACRpO,QAAS,EACT7K,QAAS,OACTkZ,cAAe,SACfX,eAAgB,SAChB3N,WAAY,SACZ0K,OAAQ,UA2DG8M,OAxDf,SAAgB3mB,GACZ,MAAgC8F,mBAAiB,IAAjD,mBAAOuH,EAAP,KAAiBuZ,EAAjB,KACA,EAA0B1e,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACOzR,EAAK2C,cAAL3C,EACD6J,EAAWyZ,cACXpe,EAAUC,cAChB,EAAgCiB,oBAAS,GAAzC,mBAAOoY,EAAP,KAAiBC,EAAjB,KACOzU,EAASH,EAASpB,MAAlBuB,MACA0H,EAAkBpR,EAAlBoR,eAEDgN,EAAe9V,uBAAY,SAACjJ,GAC9BA,EAAE+V,iBACF+I,GAAY,GACZ/M,EAAeyV,MAAMnd,EAAO2D,GACvBjO,MAAK,kBAAMwF,EAAQwC,KAAK,OAAM+J,GAC9B9E,MAAMlB,QAAQC,KACdyS,SAAQ,kBAAMM,GAAY,QAChC,CAAC/M,EAAgB1H,EAAO9E,EAASyI,EAAU8D,IAExC6I,EAAe1R,uBAAY,SAAAjJ,GAAC,OAAIunB,EAAYvnB,EAAE2U,OAAOjO,SAAQ,IAEnE,OAAK2D,EAEA,qCACG,cAACgI,GAAA,EAAD,CAAW/O,UAAU,OAAOgP,SAAS,KAArC,SACI,eAAC+U,GAAD,WACI,cAAC9M,GAAA,EAAD,CAAQhX,GAAI,CAAC4a,OAAQ,MAAOtO,gBAAiB,oBAC7C,cAACvJ,EAAA,EAAD,CAAYhD,UAAU,KAAKjC,QAAQ,KAAnC,SAAyChB,EAAE,kBAC3C,eAAC+mB,GAAD,CAAMjI,SAAUJ,EAAhB,UACI,cAACK,GAAA,EAAD,CACIG,SAAUV,EACVQ,WAAS,EACTjf,GAAG,MACH8H,MAAM,MACN7G,QAAQ,WACR8c,OAAO,SACPzX,MAAOsH,EACPrG,SAAUgT,EACV6E,UAAQ,EACRC,WAAS,IACb,cAACI,GAAA,EAAD,CACIC,QAASjB,EACT1b,KAAK,SACLsc,WAAS,EACTpe,QAAQ,YACR2E,MAAM,UACNzC,GAAI,CAAC4D,UAAW,GANpB,SAOE9G,EAAE,0BAIhB,cAACK,EAAD,eAAmB8L,OA9BR,cAAC,IAAD,CAAU3K,GAAI,OC7B9B,SAAS4lB,GAAa9mB,GACzB,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+mB,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY/mB,MAClC,cAAC,IAAD,CAAOgnB,OAAK,EAACD,KAAK,SAAlB,SAA2B,cAAC,GAAD,eAAW/mB,MACtC,cAAC,IAAD,CAAOgnB,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAAC,GAAD,eAAW/mB,MACjC,cAAC,IAAD,CAAOgnB,OAAK,EAACD,KAAI,UAAKtY,qBAAL,KAAjB,SAAiD,cAAC,GAAD,eAAWzO,MAC5D,cAAC,IAAD,UAAO,cAAC,GAAD,SAKZ,SAASinB,GAAcjnB,GAC1B,OACI,eAAC,IAAD,WACI,cAAC,IAAD,CAAO+mB,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY/mB,MADtC,IAEI,cAAC,IAAD,UAAO,cAAC,GAAD,CAAaod,MAAOpd,EAAMod,UAFrC,OAOD,SAAS8J,GAAclnB,GAC1B,IAAMyB,EAAOa,qBAAWC,IACxB,QAAa4H,IAAT1I,EAAoB,OAAO,cAAC2C,EAAA,EAAD,IAE/B,IAAM+iB,EAEM,kBAAM,cAAC,IAAD,CAAOJ,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY/mB,OAF9CmnB,EAGI,kBAAM,cAAC,IAAD,CAAOJ,KAAK,QAAZ,SAAoB,cAAC,GAAD,eAAU/mB,OAHxCmnB,EAIK,kBAAM,cAAC,IAAD,CAAOJ,KAAK,SAAZ,SAAqB,cAAC,GAAD,eAAW/mB,OAJ3CmnB,EAKO,kBAAM,cAAC,IAAD,CAAOJ,KAAK,WAAZ,SAAuB,cAAC,GAAD,eAAa/mB,OALjDmnB,EAMS,kBAAM,cAAC,IAAD,CAAOJ,KAAK,aAAZ,SAAyB,cAAC,GAAD,eAAe/mB,OANvDmnB,EAOQ,kBAAM,cAAC,IAAD,CAAOJ,KAAK,YAAZ,SAAwB,cAAC,GAAD,eAAc/mB,OAPpDmnB,EAQY,kBAAM,cAAC,IAAD,CAAOJ,KAAK,gBAAZ,SAA4B,cAAC,GAAD,eAAkB/mB,OARhEmnB,EASI,kBAAM,cAAC,IAAD,CAAOJ,KAAK,QAAZ,SAAoB,cAAC,GAAD,eAAU/mB,OATxCmnB,EAWI,kBAAM,cAAC,IAAD,CAAOH,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAAC,GAAD,eAAU/mB,OAX1CmnB,EAYI,kBAAM,cAAC,IAAD,CAAOH,OAAK,EAACD,KAAI,UAAKtY,qBAAL,KAAjB,SAAiD,cAAC,GAAD,eAAUzO,OAGrEonB,EAAc,CAdR,kBAAM,cAAC,IAAD,CAAOL,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY/mB,MAc/BmnB,GAAgBA,IAAcA,IAAcA,KAC3DE,EAAkB,CAACF,KACnBG,EAAiB,CAACH,IAAgBA,IAAeA,IAAmBA,IAAkBA,KACtFI,EAAe,CAACJ,IAAiBA,IAAmBA,IAAkBA,IAAcA,KAE1F,OACI,eAAC,IAAD,WACmB,eAAd1lB,EAAKe,MAAyB6kB,EAChB,YAAd5lB,EAAKe,MAAsB+kB,EACb,cAAd9lB,EAAKe,MAAwB8kB,EAC7BF,EACD,cAAC,IAAD,UAAO,cAAC,GAAD,S,wBC3DnB,SAASI,GAAUjf,GACf,OAAOA,EAAS2C,K,ICUdkG,GAAiB,I,WDFnB,WAAY1C,GAAmB,IAAD,iCAJb+Y,iBAIa,OAHbC,0BAGa,OAFbhZ,aAEa,EAC1BrD,KAAKqD,QAAUA,EACfrD,KAAKoc,YAAc,IAAIE,KAAgBhf,aAAaC,QAAQ,UAC5DyC,KAAKqc,qBAAuBrc,KAAKoc,YAC5BG,KAAK/oB,cAAI,SAAC+L,GAAD,OAAoB,MAATA,GAA2B,KAAVA,MAE1CwL,OAAO/C,iBAAiB,WAAW,WAC/B,IAAMzI,EAAQjC,aAAaC,QAAQ,SAC/BgC,IAAU,EAAK6c,YAAY1hB,OAC3B,EAAK0hB,YAAYI,KAAKjd,M,+CAKlC,WACI,OAAOS,KAAKqc,uB,wBAGhB,SAAWI,EAAwBpe,GAC/B,OAAO2B,KAAKqD,QACPwU,IAAI,eAAgB,CAAC/V,OAAQ,CAAC,gBAAmB2a,EAAgB,MAASpe,O,mBAGnF,SAAMA,EAAe2D,GAAmB,IAAD,OACnC,OAAOhC,KAAKqD,QACPwU,IAAmB,SAAU,CAAC/V,OAAQ,CAAC,MAASzD,EAAO,SAAY2D,KACnEjO,MAAK,SAACmJ,GACH,IAAOqC,EAASrC,EAAS2C,KAAlBN,MACPjC,aAAakC,QAAQ,QAASD,GAC9B,EAAK6c,YAAYI,KAAKjd,Q,oBAIlC,WAAwB,IAAD,OAEnB,OADAjC,aAAa2E,WAAW,SACjBjC,KAAKqD,QACPwU,IAAI,UAAW7X,KAAK0c,WACpBlK,SAAQ,kBAAM,EAAK4J,YAAYI,KAAK,W,qBAG7C,WACI,OAAOxc,KAAKqD,QACPwU,IAAe,QAAS7X,KAAK0c,WAC7B3oB,KAAKooB,M,0BAGd,WACI,OAAOnc,KAAKqD,QACPwU,IAAqB,YAAa7X,KAAK0c,WACvC3oB,KAAKooB,M,0BAGd,SAAa/Z,GACT,OAAOpC,KAAKqD,QACPsZ,KAAK,YAAa,KAAM3c,KAAK0c,QAAQ,CAAC5a,OAAQ,CAACM,cAAeA,Q,yBAGvE,SAAY9D,GACR,OAAO0B,KAAKqD,QACPuZ,IAAI,aAAete,EAASI,WAAY,KAAMsB,KAAK0c,QAAQ,CACxD5a,OAAQ,CACJM,cAAe9D,EAASO,WACxB4D,gBAAiBnE,EAASS,a,4BAK1C,SAAeL,GACX,OAAOsB,KAAKqD,QACPwZ,OAAO,aAAene,EAAYsB,KAAK0c,a,sCAGhD,WACI,OAAO1c,KAAKqD,QACPwU,IAAc,wBAAyB7X,KAAK0c,WAC5C3oB,KAAKooB,M,qCAGd,SAAwBnZ,GACpB,OAAOhD,KAAKqD,QACPwU,IAAiC,yBAA2B7U,EAAMhD,KAAK0c,WACvE3oB,KAAKooB,M,4BAGd,WACI,OAAOnc,KAAKqD,QACPwU,IAAc,eAAgB7X,KAAK0c,WACnC3oB,KAAKooB,M,2BAGd,SAAcnZ,GACV,OAAOhD,KAAKqD,QACPwU,IAA2B,gBAAkB7U,EAAMhD,KAAK0c,WACxD3oB,KAAKooB,M,2BAGd,SAAcnZ,EAAc1D,GACxB,OAAOU,KAAKqD,QACPuZ,IAAI,gBAAkB5Z,EAAM,CAAC1D,YAAaA,GAAcU,KAAK0c,a,4BAGtE,WACI,OAAO1c,KAAKqD,QACPwU,IAAqB,cAAe7X,KAAK0c,WACzC3oB,KAAKooB,IACLpoB,MAAK,SAAC8L,GACH,OAAKA,GACLA,EAAKid,OAASjd,EAAKid,OAAOtpB,KAAI,SAAAupB,GAAG,OAAIA,EAAIvpB,KAAI,SAAAmO,GAAE,MAAK,CAChDqb,KAAM,IAAIrf,KAAKgE,EAAGqb,MAClBlQ,YAAanL,EAAGmL,mBAEpBjN,EAAKod,SAAWpd,EAAKod,SAASzpB,KAAI,SAAAupB,GAAG,OAAIA,EAAIvpB,KAAI,SAAAmO,GAAE,MAAK,CACpDqb,KAAM,IAAIrf,KAAKgE,EAAGqb,MAClBlQ,YAAanL,EAAGmL,mBAEbjN,GATWA,O,4BAa9B,SAAeA,GACX,OAAOG,KAAKqD,QACPuZ,IAAI,cAAe,CAAC/c,KAAMA,GAAOG,KAAK0c,a,qBAG/C,SAAQ1Z,EAActM,GAClB,OAAOsJ,KAAKqD,QACPuZ,IAAI,SAAW5Z,EAAM,CAACtM,KAAMA,GAAOsJ,KAAK0c,a,qBAGjD,SAAQ1Z,GACJ,OAAOhD,KAAKqD,QACPwU,IAAI,SAAW7U,EAAMhD,KAAK0c,WAC1B3oB,KAAKooB,M,6BAGd,SAAgBzC,GACZ,IAAMwD,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,SAAU1D,EAAMA,EAAKvb,MAC9B6B,KAAKqD,QACPsZ,KAAK,eAAgBO,EAAUld,KAAK0c,a,0BAG7C,SAAa7c,GACT,OAAOG,KAAKqD,QACPsZ,KAAK,YAAa3e,KAAKC,UAAU4B,GAAO,M,qBAGjD,SAAgBM,GACZ,OAAO,2BAAIA,GAAX,IAAmBD,QAAS,CAACmB,cAAc,GAAD,OAAKrB,KAAKoc,YAAY1hB,c,KClJjD,CAAmB2iB,GAAOha,SACpCnM,GAAcJ,IAAMwmB,mBAAqCxe,GACzD4I,GAAmB5Q,IAAMwmB,cAA4B,CAC9D1V,UAAM9I,EACNic,gBAAiB,SAACje,OAsFPygB,OAvEf,WACI,MCxC2B,WAC3B,IAAM5V,EAAkB5M,aAAc,gCACtC,EAAwBN,qBAAxB,mBAAOmN,EAAP,KAAa4V,EAAb,KACM5C,EAAYtD,mBAAQ,iBAAO,CAAC1P,KAAMA,EAAMmT,gBAAiByC,KAAW,CAACA,EAAS5V,IAC9E6V,EAAe7V,EAAgB,SAATA,EAAkBD,EAwD9C,MAAO,CAvDqB2P,mBAAQ,kBAAMoG,aAAY,CAClDrJ,QAAS,CACLzM,KAAM6V,EAAe,OAAS,QAC9B/kB,QAAS,CACLoc,KAAM6I,KAAW,KACjBC,aAAc,QAElBC,UAAW,CACP/I,KAAM6I,KAAW,OAGzBG,WAAY,CACRC,UAAW,CACPC,aAAc,CACVviB,UAAWgiB,EAAe,EAAI,EAC9BzjB,MAAO,YAGfikB,iBAAkB,CACdD,aAAc,CACVE,OAAO,IAGfC,QAAS,CACLH,aAAc,CACVvX,QAAS,IAGjB2X,QAAS,CACLJ,aAAc,CACV3oB,QAAS,WACTsc,QAAQ,IAGhB0M,OAAQ,CACJC,eAAgB,CACZC,KAAM,CACFljB,SAAU,QACVC,OAAQ,OACRkjB,MAAO,UAInBC,YAAa,CACTH,eAAgB,CACZI,yBAA0B,CAEtB,8BAA+B,CAC3BpjB,OAAQ,gBAM5B,CAACmiB,IACU7C,GDpBY+D,GAA3B,mBAAO/jB,EAAP,KAAcggB,EAAd,KACA,EAAwBngB,qBAAxB,mBAAOrE,EAAP,KAAa6kB,EAAb,KACA,EAAoCxgB,qBAApC,mBAAOmkB,EAAP,KAAmBC,EAAnB,KACA,EAA0BhiB,KAA1B,mBAAO2D,EAAP,KAAcsF,EAAd,KACMgZ,EAAmB7hB,uBAAY,SAAC4C,GAAD,OAAekG,GAAegZ,aAAalf,GAAMmB,MAAMlB,QAAQC,OAAM,IACnGuF,EAASH,sBAAY,GAAI,CAAC6Z,SAAUF,IAApCxZ,MACP,EpC3BqC,WACrC,MAA0B7K,mBAA8E,CACpGvF,MAAM,EACNI,QAAS,GACT2pB,SAAU,eAHd,mBAAOniB,EAAP,KAAcC,EAAd,KAMMmiB,EAAcjiB,uBAAY,SAAC3H,EAAiB2pB,GAAlB,OAC5BliB,EAAS,CAAC7H,MAAM,EAAMI,QAASA,EAAS2pB,SAAUA,MAAY,IAC5DE,EAAUliB,uBAAY,SAACsD,GACzBxD,GAAS,SAAAC,GAEL,OADAA,EAAUiiB,SAAS1e,GACZ,2BAAIvD,GAAX,IAAsB9H,MAAM,SAEjC,IACH,MAAO,CAAC,CACJA,KAAM4H,EAAM5H,KACZ0H,SAAU,kBAAMuiB,GAAQ,IACxBhqB,QAAS,kBAAMgqB,GAAQ,IACvB7pB,QAASwH,EAAMxH,SAChB4pB,GoCO0CE,GAA7C,mBAAOC,EAAP,KAA8BH,EAA9B,KACA,EAA0BzkB,mBAAS,GAAnC,mBAAOsX,EAAP,KAAcuN,EAAd,KACMC,EAAUtiB,uBAAY,kBAAMqiB,GAAS,SAAAtiB,GAAS,OAAIA,EAAY,OAAI,IAClEwiB,EAAkBppB,EAExB6P,qBAAU,WACNF,GAAe6Y,aACVa,WAAU,SAAC/kB,GAAD,OAAWmkB,EAAcnkB,QACzC,IAEHuL,qBAAU,WACD2Y,EAGD7Y,GAAemV,UACVnnB,KAAKknB,EAASnV,GACd9E,MAAMlB,QAAQU,OAJnBya,OAAQnc,KAMb,CAAC8f,EAAY9Y,EAAUiM,IAE1B,MAA4BtX,mBAAsB,CAAChF,MAAO,GAAI0Q,gBAAgB,EAAOnN,SAAU,kBAAM,gCAArG,mBAAO0mB,EAAP,KAAe1Z,EAAf,KAEA,OACI,eAAC2Z,EAAA,EAAD,CAAe/kB,MAAOA,EAAtB,UACI,cAACglB,EAAA,EAAD,SACgB9gB,IAAf8f,GACD,cAAC,IAAM/lB,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAA1B,SACI,cAAC2O,GAAiBmY,SAAlB,CAA2BnlB,MAAOkgB,EAAlC,SACI,eAAC,IAAD,CAAQkF,SAAQ,UAAK1c,qBAAL,KAAgC2c,oBAAqBb,EAArE,WACMN,GAAc,cAACnD,GAAD,CAAc1V,eAAgBA,KAC7C6Y,GAAcY,GACf,cAACtoB,GAAY2oB,SAAb,CAAsBnlB,MAAOtE,EAA7B,SACI,eAACkP,EAAD,WACI,eAACrM,GAAD,WACI,cAACG,GAAD,CAAe3D,MAAOiqB,EAAOjqB,MACdqE,gBAAiB4lB,EAAOvZ,eACxBnN,SAAU0mB,EAAO1mB,aAChC,cAACnC,GAAD,IACA,cAAC8B,GAAD,UACI,cAACqnB,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACI,cAACrE,GAAD,CACI9V,eAAgBA,GAChBC,UAAWA,WAK3B,cAAC,GAAD,SAIP4Y,IAAeY,GAChB,cAAC5D,GAAD,CAAe7V,eAAgBA,GAAgBgM,MAAOwN,IAEtD,cAAC,GAAD,eAA4BF,IAC5B,cAAC3qB,EAAD,2BAAmB8L,GAAnB,IAA0B5L,SAAS,sB,2FElGrDurB,GAAkC,CAAC,GAAMxU,KAAI,GAAMD,MACnD0U,GAAYC,MAAmB,SAAC5U,EAAU6U,EAAWrB,GACvD,OAAO,YAAaxT,EAApB,YAAgC6U,EAAhC,UACKvsB,MAAK,SAACqsB,GAAD,OAAenB,EAAS,KAAMmB,MACnCpf,OAAM,SAACR,GAAD,OAAWye,EAASze,EAAO,YAG1C8R,KAAKiO,IAAIH,IACJG,IAAIC,MACJD,IAAIE,MACJC,KAAK,CAEFC,YAAa,KACbC,cAAe,CACXC,aAAa,EACbC,OAAQ,SAACpmB,EAAOomB,EAAQC,GACpB,GAAIrmB,aAAiBiD,KAAM,IACvB,OAAOqjB,aAAWtmB,EAAOomB,EAAS,CAACG,OAAQd,GAAKY,KAClD,MAAO/sB,GACL8L,QAAQU,MAAMxM,GAElB,OAAO0G,IAGf2I,QAAS,CAEL6d,SAAS,GAAD,OAAK9d,qBAAL,mCAILkP,GAAf,ECzBoB6O,QACW,cAA7BpW,OAAO7M,SAASkjB,UAEe,UAA7BrW,OAAO7M,SAASkjB,UAEhBrW,OAAO7M,SAASkjB,SAASC,MAAM,2DCfnC,IAYeC,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqBztB,MAAK,YAAkD,IAA/C0tB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,KAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJlZ,SAASmZ,eAAe,SFuHtB,kBAAmBC,WACrBA,UAAUC,cAAcC,MACrBruB,MAAK,SAACsuB,GACLA,EAAaC,gBAEdthB,OAAM,SAACR,GACNV,QAAQU,MAAMA,EAAMlL,YEjH5BgsB,O","file":"static/js/main.399decfc.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t456,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t457,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 443;\nmodule.exports = webpackAsyncContext;","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\nimport {SettingsOutlined} from \"@mui/icons-material\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nconst sx = {ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}};\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={sx}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle children={props.title}/>\n            {props.children}\n        </Dialog>\n    );\n}\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'high'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'med'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'low'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => 0)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nconst delay = 30;\nfunction delayedPromise<T>(promise: Promise<T>): Promise<T> {\n    return promise\n        .then(value => new Promise<T>(resolve => setTimeout(() => resolve(value), delay)))\n        .catch(reason => new Promise<T>((resolve, reject) => setTimeout(() => reject(reason), delay)));\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config);\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token];\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1);\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString());\n                if (index < 0) return e.error();\n                db.consumer[user].splice(index, 1);\n\n                saveFakeDB(db);\n                return e.ok({});\n            }\n            return e.error();\n        });\n        return delayedPromise(promise);\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n        });\n        return delayedPromise(promise);\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {Box, Card, CardActionArea, CardContent, CardMedia, SvgIcon, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nexport interface DestinationCardProps {\n    to: string\n    icon: any\n    title: string\n    subtitle: string\n    done?: boolean\n}\n\nexport function DestinationCard(props: DestinationCardProps) {\n    const {to, icon, title, subtitle, done} = props;\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\"}}>\n            <CardActionArea component={RouterLink} to={to}>\n                <Box display=\"flex\">\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{subtitle}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n        </Card>\n    )\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nfunction AttentionIcon(props: { requiresAttention?: boolean, icon: JSX.Element }) {\n    return <Badge invisible={!props.requiresAttention} variant=\"dot\" color=\"info\">{props.icon}</Badge>\n}\n\nfunction SmallIconButton(props: Props) {\n    return (\n        <Tooltip title={props.description}>\n            <IconButton\n                color=\"inherit\"\n                onClick={props.onClick}\n                size=\"large\"\n                children={<AttentionIcon {...props}/>}\n            />\n        </Tooltip>\n    )\n}\n\nfunction LargeIconButton(props: Props) {\n    return (\n        <Button startIcon={<AttentionIcon {...props}/>}\n                color=\"inherit\"\n                onClick={props.onClick}\n                children={props.description}\n        />\n    )\n}\n\nexport function ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    if (breakpoint) return <SmallIconButton {...props}/>\n    return <LargeIconButton {...props}/>\n}\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {CheckCircleOutlined, InfoOutlined, RadioButtonUncheckedOutlined} from \"@mui/icons-material\";\nimport {Container, DialogContentText, LinearProgress, Stack} from \"@mui/material\";\nimport {parse} from \"date-fns\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard} from \"./common/DestinationCard\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nfunction Archive(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [dates, setDates] = useState<string[]>();\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton\n                description={t('info')}\n                icon={<InfoOutlined/>}\n                onClick={openInfo}\n            />\n        });\n    }, [t, setAppBar, openInfo])\n\n    if (!dates) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{pt: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date, index) => {\n                            const parsedDate = parse(date, 'yyyy-MM-dd', new Date())\n                            return <DestinationCard\n                                to={`/pastbehavior?date=${date}`}\n                                icon={index ? CheckCircleOutlined : RadioButtonUncheckedOutlined}\n                                title={t('archive_entry_date', {date: parsedDate})}\n                                subtitle={index ? 'Bereits erledigt' : 'Bitte überpüfen'}\n                                done={!!index}\n                            />\n                        }\n                    )}\n                </Stack>\n            </Container>\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_archive')}/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\nimport i18next from \"i18next\";\nimport {TranslatedString} from \"../service/Model\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\nconst consumers: any = {\n    laundry: {icon: <LocalLaundryService/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    cooking: {icon: <Restaurant/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    dishes: {icon: <FreeBreakfast/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]},\n    hygiene: {icon: <Bathtub/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    entertainment: {icon: <Movie/>, color: teal[shadeDefault], colorAlt: teal[shadeAlt]},\n    wellness: {icon: <Spa/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    homeoffice: {icon: <Computer/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    emobility: {icon: <Power/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    temperature: {icon: <AcUnit/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    high: {icon: <Help/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    med: {icon: <Help/>, color: amber[shadeDefault], colorAlt: amber[shadeAlt]},\n    low: {icon: <Help/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    unknown: {icon: <Help/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]}\n}\n\nexport const consumerLookup = (type: string) => type in consumers ? consumers[type] : consumers.unknown\n\nexport function backgroundColor(type: string) {\n    return type in consumers ? consumers[type].color : \"#0ff\";\n}\n\nexport function iconLookup(type: string): JSX.Element {\n    return type in consumers ? consumers[type].icon : <Help/>\n}\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {CheckCircleOutlined} from \"@mui/icons-material\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date();\nconst isoDate = new Date().toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(isoDate)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return {\n                            header: (\n                                <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{width: 30, height: 30, backgroundColor: consumerType.color}}\n                                    >\n                                        {consumerType.icon}\n                                    </Avatar>\n                                </Tooltip>\n                            ),\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        }\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    if (!rows) return <LinearProgress/>\n\n    const InfoContent = () => {\n        const infoText = t('info_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {energyAvailable.map((v) => <TableCell\n                                    sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup, translate} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = translate(consumer.name, consumer.customName);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, LinearProgress, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>();\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) => {\n        return backendService.putConsumer({...consumer, active: !consumer.active})\n            .then(() => backendService.getConsumers())\n            .then(setConsumers, setError)\n            .catch(console.log);\n    }, [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const content = () => {\n        const infoText = t('info_consumers', {returnObjects: true}) as string[]\n        const consumerHelp = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {consumerHelp.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    if (!consumers) return <LinearProgress/>;\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers && consumers.map((it) =>\n                            <ConsumerCard\n                                key={it.consumerId}\n                                consumer={it}\n                                clickActive={applyChangeActive}\n                            />\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={content()} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Container, Stack, Typography,} from \"@mui/material\";\nimport React, {useContext, useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {DestinationCard, DestinationCardProps} from \"./common/DestinationCard\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst destinations: { [key: string]: DestinationCardProps } = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nconst userInteractionNeeded = (type?: string) => {\n    switch (type) {\n        case \"management\":\n            return [destinations.upload]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.upload, destinations.mood]\n        default:\n            return null;\n    }\n}\n\nconst userResult = (type?: string) => {\n    switch (type) {\n        case \"homeowner\":\n            return [destinations.power]\n        default:\n            return null;\n    }\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n    const interactions = userInteractionNeeded(user?.type);\n    const results = userResult(user?.type);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                <Stack spacing={3}>\n                    {interactions &&\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">{t('home_item_todos')}</Typography>\n                        {interactions.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                    {results &&\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">{t('home_item_results')}</Typography>\n                        {results.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                done\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                </Stack>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","import {useTranslation} from \"react-i18next\";\nimport {Box, Button, Container, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst sx = {display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"};\n\nexport function LoadingPage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"xs\" sx={sx}>\n            <Paper square variant=\"outlined\" sx={{width: \"100%\", p: 2}}>\n                <Typography variant=\"h5\" textAlign=\"center\" children={t('logging_in')}/>\n                <Box mt={5}/>\n                <LinearProgress/>\n                <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                    <Button component={RouterLink} to=\"/logout\" sx={{mr: 2}} children={t('logout')}/>\n                    <Button onClick={props.retry} children={t('retry')}/>\n                </Stack>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default LoadingPage;\n","import {InfoOutlined, LanguageOutlined} from \"@mui/icons-material\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    DialogContentText,\n    Fab,\n    Grid,\n    IconButton,\n    InputAdornment,\n    List,\n    ListItemButton,\n    ListItemText,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\n\ninterface Props {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction ChangeLanguageDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const {t, i18n} = useTranslation();\n    const changeLanguage = React.useCallback((language: string) =>\n            i18n.changeLanguage(language)\n                .catch(console.log)\n                .finally(() => props.onClose())\n        , [i18n, props])\n    return <ResponsiveDialog title={t('change_language')} {...props}>\n        <List sx={{pt: 0}}>\n            <ListItemButton onClick={() => changeLanguage('en')}>\n                <ListItemText primary={t('lang_english')}/>\n            </ListItemButton>\n            <ListItemButton onClick={() => changeLanguage('de')}>\n                <ListItemText primary={t('lang_german')}/>\n            </ListItemButton>\n        </List>\n    </ResponsiveDialog>\n}\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {backendService} = props;\n    const [langDialogProps, openLangDialog] = useInfoDialog();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [progress, setProgress] = useState(false);\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n            .finally(() => setProgress(false))\n    }, [backendService, history, setError, state.email, state.shared_password]);\n\n    const InfoContent = () => {\n        const infoText = t('info_personal_code', {returnObjects: true}) as string[];\n        return <>{infoText.map(text => <DialogContentText children={text}/>)}</>\n    }\n\n    return (\n        (<>\n            <Container maxWidth=\"lg\">\n                <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    disabled={progress}\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    disabled={progress}\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={openInfo}>\n                                                    <InfoOutlined color=\"inherit\"/>\n                                                </IconButton>\n                                            </InputAdornment>),\n                                    }}\n                                />\n                                <LoadingButton\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                    loading={progress}\n                                >\n                                    {t('login_submit')}\n                                </LoadingButton>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Box>\n            </Container>\n            <Fab title={t('change_language')}\n                 color=\"primary\"\n                 size=\"medium\"\n                 onClick={openLangDialog}\n                 children={<LanguageOutlined/>}/>\n            <ChangeLanguageDialog {...langDialogProps}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default Login;\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Box,\n    Button,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Paper,\n    Stack,\n    Typography,\n    useTheme\n} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {MoodModel} from \"./service/Model\";\nimport {Link as RouterLink, Prompt} from \"react-router-dom\";\nimport {CheckCircleOutlined} from \"@mui/icons-material\";\nimport {TabContext, TabPanel} from \"@mui/lab\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n}\n\nexport const compareProps = (a: GraphProps, b: GraphProps) => a.mood.x === b.mood.x && a.mood.y === b.mood.y\n\nconst DraggableGraph = React.memo(function (props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n    const commonScaleProps = {\n        alignToPixels: true,\n        max: 10,\n        min: 0,\n        ticks: {display: false},\n        grid: {display: false},\n    }\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            plugins: {\n                // @ts-ignore\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: () => null,\n                    onDrag: () => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {display: false},\n                tooltip: {enabled: false}\n            }\n        }} height={100} width={100}/>\n}, compareProps)\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Mood'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<MoodModel>();\n    const [modified, setModified] = useState(false);\n    const [panel, setPanel] = useState(\"0\");\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = useCallback(() => {\n        if (!mood) return;\n        backendService.putMood(date, mood)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t])\n\n    const onMoodChange = useCallback((mood: MoodModel) => {\n        setMood(mood);\n        setModified(true);\n    }, [])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => {\n                if (panel !== \"1\") return <></>\n                return <>\n                    <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                    <ResponsiveIconButton requiresAttention={modified}\n                                          icon={<CheckCircleOutlined/>}\n                                          onClick={onSaveClick}\n                                          description={t('save')}/>\n                </>\n            }\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified, panel])\n\n    if (!mood) return <LinearProgress/>;\n\n    const infoText = t('info_mood', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    const titleKey = user?.type === \"student\" ? \"mood_please_select_mood_student\" : \"mood_please_select_mood_homeowner\";\n    return <Track>\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}} disableGutters>\n            <TabContext value={panel}>\n                <TabPanel value=\"0\">\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('mood_question_home')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => setPanel('1')}\n                                children={t('yes')}/>\n                            <Button\n                                sx={{marginLeft: 2}}\n                                variant=\"contained\"\n                                onClick={() => setPanel('2')}\n                                children={t('no')}/>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"1\">\n                    <Typography variant=\"h5\" align=\"center\" paragraph>{t(titleKey)}</Typography>\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <DraggableGraph mood={mood} onChange={onMoodChange}/>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <Paper square variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('mood_come_back_later')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button variant=\"contained\" component={RouterLink} to=\"/\">{t('go_back')}</Button>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n            </TabContext>\n        </Container>\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Box, Button, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link} from \"react-router-dom\";\n\nfunction Page404(props: {}) {\n    const {t} = useTranslation();\n    return (\n        <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            height: '70vh',\n            justifyContent: 'center'\n        }}>\n            <Typography variant=\"h1\" children=\"404\" gutterBottom/>\n            <Typography variant=\"h5\" paragraph children={t('page_not_found')}/>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to='/'\n            >{t('go_back')}</Button>\n        </Box>\n    )\n}\n\nexport default Page404;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ConsumerModel} from \"./service/Model\";\nimport {CheckCircleOutlined} from \"@mui/icons-material\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface HeaderProps {\n    consumer: ConsumerModel\n}\n\nconst compareConsumerProps = (a: HeaderProps, b: HeaderProps) => a.consumer.consumerId === b.consumer.consumerId\nconst ConsumerHeader = React.memo((props: { consumer: ConsumerModel }) => {\n    const {consumer} = props;\n    const consumerType = consumerLookup(consumer.type);\n    return (<Tooltip title={translate(consumer.name, consumer.customName)} enterTouchDelay={0}>\n        <Avatar\n            variant=\"rounded\"\n            sx={{backgroundColor: consumerType.color, width: 30, height: 30}}\n            children={consumerType.icon}\n        />\n    </Tooltip>)\n}, compareConsumerProps);\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'PastBehavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        if (!validDate) return;\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return ({\n                            header: <ConsumerHeader consumer={c}/>,\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        });\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [validDate, backendService, setError, date]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        rows && backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, date, rows, setError, setSuccess, t]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t])\n\n    if (!validDate) return <Redirect to={'/'}/>\n    if (!rows) return <LinearProgress/>\n\n    const InfoContent = () => {\n        const infoText = t('info_past_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\"/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell/>\n                                {energyAvailable.map((v) => <TableCell sx={{backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {ChartOptions} from \"chart.js\";\nimport React, {useEffect, useState} from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\nimport {Card, CardContent, CardHeader} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useParsedDate} from \"../common/Date\";\n\ninterface Props {\n    backendService: BackendService;\n    date: string;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport function PowerEntry(props: Props) {\n    const {backendService, date} = props;\n    const dateParsed = useParsedDate(date);\n    const {t} = useTranslation();\n    const [data, setData] = useState<any>();\n    useEffect(() => {\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                setData({\n                    labels: Array.from(Array(24).keys()),\n                    datasets: consumptions.map((c) => ({\n                            label: c.type,\n                            data: c.data,\n                            fill: false,\n                            backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\n                        })\n                    )\n                })\n            })\n            .catch(console.log)\n    }, [backendService, date]);\n\n    return (\n        <Card variant=\"outlined\" key={date}>\n            <CardHeader title={t('archive_entry_date', {date: dateParsed})}/>\n            <CardContent>\n                <Line data={data} options={options}/>\n            </CardContent>\n        </Card>\n    )\n}","import {Container, Stack} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date) => <PowerEntry date={date} backendService={backendService}/>)}\n                </Stack>\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import {createTime} from \"../common/Time\";\nimport {ThermostatModel} from \"../service/Model\";\n\nexport const data_ = {\n    useAdvanced: false,\n    simple: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ],\n    advanced: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ]\n} as ThermostatModel\n","import CompareArrowsOutlined from \"@mui/icons-material/CompareArrowsOutlined\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport RotateLeft from \"@mui/icons-material/RotateLeft\"\nimport SaveAlt from \"@mui/icons-material/SaveAlt\"\nimport Container from \"@mui/material/Container\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport Divider from \"@mui/material/Divider\";\nimport Grid, {GridSize} from \"@mui/material/Grid\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Stack from \"@mui/material/Stack\"\nimport Switch from \"@mui/material/Switch\"\nimport Typography from \"@mui/material/Typography\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {createTime} from \"./common/Time\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ThermostatModel, TimeItem} from \"./service/Model\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {ThermostatDaySetting} from \"./thermostats/ThermostatDaySetting\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copySetting = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst copyData = (data: ThermostatModel): ThermostatModel => ({\n    ...data,\n    simple: copySetting(data.simple),\n    advanced: copySetting(data.advanced)\n})\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nconst compareDays = (a: TimeItem[][], b: TimeItem[][]) => a.length === b.length &&\n    a.every((day, dayIndex) =>\n        day.length === b[dayIndex].length && day.every((item, itemIndex) =>\n            item.time === b[dayIndex][itemIndex].time && item.temperature === b[dayIndex][itemIndex].temperature))\nconst compareData = (a: ThermostatModel, b: ThermostatModel) => a.useAdvanced === b.useAdvanced &&\n    compareDays(a.simple, b.simple) && compareDays(a.advanced, b.advanced)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<ThermostatModel>(data_)\n    const [initialData, setInitialData] = useState<ThermostatModel>(data_)\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [t('day_weekdays'), t('day_weekend')]\n    const dayLabels = [t('day_monday'), t('day_tuesday'), t('day_wednesday'), t('day_thursday'), t('day_friday'), t('day_saturday'), t('day_sunday')]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (!data) return;\n                data.simple = data.simple.map(day => sortDay(day));\n                data.advanced = data.advanced.map(day => sortDay(day));\n                setData(data);\n                setInitialData(data);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setInitialData(data))\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    const modified = !compareData(data, initialData);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton\n                    requiresAttention={modified}\n                    description={t('save')}\n                    icon={<SaveAlt/>}\n                    onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save, modified]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n    const onCopyFrom = useCallback((id: string) => {\n        setID(+id);\n        setCopyFromOpen(true);\n    }, []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => {\n            const intId = +id;\n            const state = copyData(prevState)\n            if (intId > 9) {\n                state.simple[intId - 10].splice(index, 1)\n            } else {\n                state.advanced[intId].splice(index, 1)\n            }\n            return state;\n        });\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10].push({time: time, temperature: +temperature})\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id].push({time: time, temperature: +temperature})\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10][index] = {time: time, temperature: +temperature};\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id][index] = {time: time, temperature: +temperature};\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    const copyFrom = useCallback((fromID: number) => {\n        if (id === undefined) return;\n        setData(prevState => {\n            const state = copyData(prevState);\n            const from = (fromID > 9 ? prevState.simple[fromID - 10] : prevState.advanced[fromID]).map(it => ({...it}));\n            if (id > 9) {\n                state.simple[id - 10] = from;\n            } else {\n                state.advanced[id] = from;\n            }\n            return state;\n        });\n    }, [id])\n\n    if (!data) return <></>\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.advanced.length < index ? empty : data.advanced[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: data.simple[index]\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 4}\n    ]\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\" sx={{paddingTop: 1}}>\n                <Stack direction=\"row\" spacing={1} sx={{alignItems: \"center\", justifyContent: \"end\", pb: 1}}>\n                    <Typography variant=\"subtitle1\"\n                                sx={{textTransform: 'uppercase'}}\n                    >{t('thermostat_use_advanced_settings')}</Typography>\n                    <Switch\n                        checked={data.useAdvanced}\n                        onChange={(event, value) => setData(prevState => ({...prevState, useAdvanced: value}))}/>\n                </Stack>\n\n                {tabs.map((tab, index) => (\n                    <TabPanel index={index} value={data.useAdvanced ? 1 : 0} key={index}>\n                        <Grid container spacing={1}>\n                            {tab.days.map((day) => (\n                                <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                    <ThermostatDaySetting\n                                        id={day.id}\n                                        title={day.label}\n                                        items={day.data}\n                                        onAddTime={onAddTime}\n                                        onCopyFrom={onCopyFrom}\n                                        onEdit={(id, index) => {\n                                            setID(+id);\n                                            setIndex(index);\n                                            setTime(day.data[index].time);\n                                            setTemperature(String(day.data[index].temperature));\n                                            setShowTimePicker(index > 0);\n                                            setEditTimeOpen(true);\n                                        }}\n                                        onDelete={onDelete}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                ))}\n            </Container>\n            <ModifyTimeItemDialog\n                title={t('thermostat_add_entry')}\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title={t('thermostat_edit_entry')}\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ResponsiveDialog title={t('dialog_copy_from_title')} open={copyFromOpen}\n                              onClose={() => setCopyFromOpen(false)}>\n                <DialogContent sx={{minWidth: 300}}>\n                    <List>\n                        {dayLabels.map((day, index) =>\n                            <ListItem\n                                key={index}\n                                button\n                                disabled={index === id}\n                                onClick={() => {\n                                    copyFrom(index);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                        <Divider variant=\"middle\"/>\n                        {simpleDayLabels.map((day, index) =>\n                            <ListItem\n                                key={index + 10}\n                                button\n                                disabled={index + 10 === id}\n                                onClick={() => {\n                                    copyFrom(index + 10);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                    </List>\n                </DialogContent>\n            </ResponsiveDialog>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import {ElectricalServicesOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Button,\n    Container,\n    DialogContentText,\n    Divider,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Energienetze Steiermark', link: 'https://portal.e-netze.at/'},\n    {name: 'Kelag', link: 'https://services.kelag.at/ISS/Services.aspx'},\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\nconst providers = [\n    {name: 'Energie Graz', link: 'https://portal.energie-graz.at/'},\n    {name: 'Energie Steiermark', link: 'https://portal.energie-graz.at/'},\n    {name: 'Verbund', link: 'https://www.verbund.at/login'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <>\n            <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n        </>\n    }), [t, setAppBar, openInfo])\n\n    const infoText = t('info_upload', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Network operators</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n                                <Divider component=\"li\"/>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Energy providers</Typography>\n                                </li>\n                                {providers.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <label htmlFor=\"contained-button-file\">\n                            <Input\n                                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                id=\"contained-button-file\"\n                                type=\"file\"\n                                onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                            />\n                            <Button variant=\"contained\"\n                                    size=\"large\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    component=\"span\"\n                                    startIcon={<CloudUploadOutlined/>}\n                            >{t('action_upload')}</Button>\n                        </label>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    Container,\n    DialogContentText,\n    Divider,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\nimport {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [user, setUser] = useState<UserModel>()\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            {user &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo user={user}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            }\n            {!user && <LinearProgress/>}\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_settings')}/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {Avatar, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useHistory, useLocation} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh'\n})\n\nfunction Verify(props: Props) {\n    const [password, setPassword] = useState<string>('')\n    const [error, setError] = useSnackBar()\n    const {t} = useTranslation();\n    const location = useLocation<{ email: string }>();\n    const history = useHistory();\n    const [progress, setProgress] = useState(false);\n    const {email} = location.state;\n    const {backendService} = props;\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.login(email, password)\n            .then(() => history.push('/'), setError)\n            .catch(console.log)\n            .finally(() => setProgress(false))\n    }, [backendService, email, history, password, setError]);\n\n    const handleChange = useCallback(e => setPassword(e.target.value), []);\n\n    if (!email) return <Redirect to={'/'}/>\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            disabled={progress}\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={password}\n                            onChange={handleChange}\n                            required\n                            fullWidth/>\n                        <LoadingButton\n                            loading={progress}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</LoadingButton>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default Verify;\n","import {LinearProgress} from \"@mui/material\";\nimport React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport Archive from \"./Archive\";\nimport Behavior from \"./Behavior\";\nimport Consumers from \"./Consumers\";\nimport Home from \"./Home\";\nimport LoadingPage from \"./LoadingPage\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport Mood from \"./Mood\";\nimport Page404 from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\nimport Power from \"./Power\";\nimport BackendService from \"./service/BackendService\";\nimport Thermostats from \"./Thermostats\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Verify from \"./Verify\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    return (\n        <Switch>\n            <Route path=\"/verify\"><Verify {...props}/></Route>\n            <Route exact path=\"/login\"><Login {...props}/></Route>\n            <Route exact path=\"/\"><Login {...props}/></Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}><Login {...props}/></Route>\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n\nexport function LoadingRouter(props: { backendService: BackendService, retry: () => void }) {\n    return (\n        <Switch>\n            <Route path=\"/logout\"><Logout {...props}/></Route>,\n            <Route><LoadingPage retry={props.retry}/></Route>,\n        </Switch>\n    )\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return <LinearProgress/>;\n\n    const paths = {\n        logout: () => <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: () => <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: () => <Route path=\"/user\"><User {...props}/></Route>,\n        power: () => <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: () => <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: () => <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: () => <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: () => <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        mood: () => <Route path=\"/mood\"><Mood {...props}/></Route>,\n        thermostats: () => <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        root: () => <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: () => <Route exact path={`${process.env.PUBLIC_URL}/`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout(), paths.user(), paths.home(), paths.root()]\n    const managementPaths = [paths.upload()];\n    const homeOwnerPaths = [paths.upload(), paths.power(), paths.consumers(), paths.behavior(), paths.mood()];\n    const studentPaths = [paths.archive(), paths.consumers(), paths.behavior(), paths.mood(), paths.pastbehavior()];\n\n    return (\n        <Switch>\n            {user.type === \"management\" && managementPaths}\n            {user.type === \"student\" && studentPaths}\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    ThermostatModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<ThermostatModel | null> {\n        return this.backend\n            .get<ThermostatModel>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => {\n                if (!data) return data;\n                data.simple = data.simple.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                data.advanced = data.advanced.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                return data;\n            })\n    }\n\n    putThermostats(data: ThermostatModel) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useTracking} from \"react-tracking\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\nimport Config from \"./Config\";\nimport {LoadingRouter, PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n    const [retry, setRetry] = useState(0);\n    const onRetry = useCallback(() => setRetry(prevState => prevState + 1), []);\n    const isAuthenticated = user!!;\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser, setError)\n                .catch(console.error);\n        }\n    }, [isLoggedIn, setError, retry])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({title: \"\", showBackButton: false, children: () => <></>});\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            {isLoggedIn !== undefined &&\n            <React.Suspense fallback={<LinearProgress/>}>\n                <ColorModeContext.Provider value={colorMode}>\n                    <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                        {!isLoggedIn && <PublicRouter backendService={backendService}/>}\n                        {isLoggedIn && isAuthenticated &&\n                        <UserContext.Provider value={user}>\n                            <Track>\n                                <Root>\n                                    <DefaultAppBar title={appBar.title}\n                                                   hideBackButton={!appBar.showBackButton}\n                                                   children={appBar.children()}/>\n                                    <DefaultDrawer/>\n                                    <Content>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <PrivateRouter\n                                                backendService={backendService}\n                                                setAppBar={setAppBar}\n                                            />\n                                        </LocalizationProvider>\n                                    </Content>\n                                </Root>\n                                <DefaultBottomNavigation/>\n                            </Track>\n                        </UserContext.Provider>\n                        }\n                        {isLoggedIn && !isAuthenticated &&\n                        <LoadingRouter backendService={backendService} retry={onRetry}/>\n                        }\n                        <UserConfirmationDialog {...userConfirmationProps}/>\n                        <AlertSnackbar {...error} severity=\"error\"/>\n                    </Router>\n                </ColorModeContext.Provider>\n            </React.Suspense>\n            }\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const useDarkTheme = mode ? mode === 'dark' : prefersDarkMode;\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: useDarkTheme ? \"dark\" : \"light\",\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: useDarkTheme ? 1 : 0,\n                    color: \"inherit\",\n                },\n            },\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [useDarkTheme]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}