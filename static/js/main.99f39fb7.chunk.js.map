{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","common/ResponsiveDialog.tsx","common/UserConfirmationDialog.tsx","common/UseSnackBar.tsx","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","Login.tsx","Verify.tsx","common/Tracking.ts","Logout.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","Upload.tsx","User.tsx","common/Date.ts","power/PowerEntry.tsx","Power.tsx","common/DestinationCard.tsx","Archive.tsx","common/ConsumerTools.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","Behavior.tsx","Home.tsx","common/Time.ts","thermostats/DummyData.ts","thermostats/ModifyTimeItemDialog.tsx","thermostats/ChartOptions.ts","thermostats/ThermostatDaySetting.tsx","Thermostats.tsx","Mood.tsx","Page404.tsx","PastBehavior.tsx","Routes.tsx","service/BackendService.ts","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","open","onClose","Alert","variant","message","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","style","ml","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","hideBackButton","IconButton","color","marginRight","onClick","goBack","size","Typography","mx","DefaultBottomNavigation","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","ResponsiveDialog","fullScreen","Dialog","edge","DialogTitle","UserConfirmationDialog","DialogContent","DialogContentText","DialogActions","Button","onAccept","useSnackBar","state","setState","prevState","useCallback","response","statusText","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","Math","random","predictions","token","setItem","parse","saveFakeDB","DefaultExecutor","reject","data","console","log","this","status","headers","config","request","FaultyExecutor","executor","ok","error","findInDict","dict","matcher","key","delayedPromise","promise","setTimeout","FakeBackend","backendConfig","url","Authorization","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","startsWith","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","StyledGrid","styled","Grid","margin","padding","flexDirection","alignItems","withRouter","withTranslation","setError","backendService","height","Container","maxWidth","container","spacing","item","xs","md","paragraph","Avatar","backgroundColor","onSubmit","preventDefault","requestPin","catch","TextField","autoFocus","autoComplete","target","required","fullWidth","InputProps","endAdornment","InputAdornment","InfoOutlined","Form","StyledContainer","useEffect","login","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Logout","page","logout","useInfoDialog","Lorem","InfoDialog","content","AttentionIcon","Badge","invisible","requiresAttention","SmallIconButton","Tooltip","description","LargeIconButton","startIcon","ResponsiveIconButton","Input","operators","link","providers","Upload","success","setSuccess","setAppBar","infoProps","openInfo","showBackButton","paddingTop","gutterBottom","mt","ListItemButton","href","ListItemAvatar","ElectricalServicesOutlined","htmlFor","accept","file","files","postConsumption","UserInfo","items","Email","text","MyLocation","idx","ConsumersInfo","Power","ArrowRight","LanguageInfo","i18next","resolvedLanguage","language","setLanguage","changeLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","ColorModeContext","colorModeValue","mode","Brightness4Outlined","toggleColorMode","User","setUser","getUser","ExitToApp","square","useParsedDate","useMemo","animation","PowerEntry","dateParsed","setData","getProcessedConsumption","consumptions","labels","from","datasets","fill","borderColor","Card","CardHeader","CardContent","setDates","getProcessedConsumptions","Stack","DestinationCard","done","CardActionArea","CardMedia","noWrap","Archive","getPredictions","pt","parsedDate","Done","translate","str","override","de","en","consumers","laundry","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","green","homeoffice","red","emobility","temperature","high","med","amber","low","unknown","consumerLookup","compareProps","a","b","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","consumerType","ListItemSecondaryAction","Consumers","setConsumers","getConsumers","applyChangeActive","putConsumer","paddingBottom","s","compareCellProps","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","prefersDarkMode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","selectionStarted","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","hours","formatTime","colors","energyAvailable","isoDate","Behavior","setRows","modified","setModified","all","getPrediction","filter","enterTouchDelay","find","p","handleChange","cells","handleSave","putPrediction","disableGutters","TableContainer","maxHeight","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","Home","interactions","userInteractionNeeded","results","textAlign","now","createTime","minutes","getDay","getMonth","data_","useAdvanced","simple","time","advanced","ModifyTimeItemDialog","showTimePicker","StaticTimePicker","ampm","setTime","renderInput","my","setTemperature","onOK","chartOptions","plugins","legend","tooltip","enabled","scales","ticks","stepSize","callback","printTime","toLocaleTimeString","hour","minute","length","every","getTime","compareItem","ThermostatDaySetting","palette","labeledTimeItems","dataItems","getHours","getMinutes","showLine","stepped","main","secondary","createData","colSpan","hover","onEdit","disabled","onDelete","CardActions","onCopyFrom","marginLeft","onAddTime","TabPanel","other","hidden","copySetting","day","copyData","sortDay","sort","compareDays","dayIndex","itemIndex","Thermostats","initialData","setInitialData","Success","simpleDayLabels","dayLabels","getThermostats","reset","save","putThermostats","addTimeOpen","setAddTimeOpen","editTimeOpen","setEditTimeOpen","copyFromOpen","setCopyFromOpen","setShowTimePicker","setID","intId","setIndex","addEntry","editEntry","copyFrom","fromID","empty","days","simpleDays","tabs","lg","xl","justifyContent","pb","textTransform","Switch","checked","tab","minWidth","DraggableGraph","defaults","divider","commonScaleProps","alignToPixels","grid","borderWidth","pointHitRadius","maintainAspectRatio","aspectRation","onHover","chart","getElementsAtEventForMode","intersect","native","cursor","dragData","dragX","showTooltip","onDragStart","element","onDrag","datasetIndex","onDragEnd","setMood","getMood","onSaveClick","putMood","onMoodChange","title_key","Page404","m","Link","path","compareConsumerProps","ConsumerHeader","PastBehavior","URLSearchParams","useLocation","search","get","validDate","isValid","isPast","PublicRouter","LoadingRouter","exact","LoadingPage","mr","PrivateRouter","paths","pastbehavior","root","commonPaths","managementPaths","homeOwnerPaths","studentPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","addAuth","finally","post","put","delete","formData","FormData","append","Config","createContext","App","setMode","useDarkTheme","createTheme","lightGreen","contrastText","components","MuiAppBar","defaultProps","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","subscribe","appBar","setAppBarCb","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","resources","resourcesToBackend","namespace","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.99f39fb7.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t459,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t460,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 446;\nmodule.exports = webpackAsyncContext;","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\nimport {SettingsOutlined} from \"@mui/icons-material\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nconst style = {ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}};\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={style}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\">\n                        <ArrowBack/>\n                    </IconButton>\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"><ArrowBack/></IconButton>\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle>{props.title}</DialogTitle>\n            {props.children}\n        </Dialog>\n    );\n}\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'high'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'med'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'low'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => Math.random() < 0.5 ? 4 : 0)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nconst delay = 0;\nfunction delayedPromise<T>(promise: Promise<T>): Promise<T> {\n    return promise.then(value => new Promise<T>(resolve => setTimeout(() => resolve(value), delay)));\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config);\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token];\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1);\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString());\n                if (index < 0) return e.error();\n                db.consumer[user].splice(index, 1);\n\n                saveFakeDB(db);\n                return e.ok({});\n            }\n            return e.error();\n        });\n        return delayedPromise(promise);\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n        });\n        return delayedPromise(promise);\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {InfoOutlined} from \"@mui/icons-material\";\nimport {Avatar, Box, Button, Container, Grid, InputAdornment, TextField, Typography} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t, backendService, history} = props;\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (<InputAdornment position=\"end\"><InfoOutlined\n                                            color=\"inherit\"/></InputAdornment>),\n                                    }}\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                >\n                                    {t('login_submit')}\n                                </Button>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Container>\n            </Box>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Login)));\n","import {Avatar, Button, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect, useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    email?: string\n    password: string\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Verify(props: Props) {\n    const [state, setState] = useState<State>({password: ''})\n    const [error, setError] = useSnackBar()\n    const {location, history, backendService, t} = props;\n\n    useEffect(() => {\n        // @ts-ignore\n        if (!location?.state?.email) {\n            history.push('/')\n        }\n    }, [location, history])\n\n    const handleSubmit = (e: React.FormEvent) => {\n        const {password} = state;\n        // @ts-ignore\n        const {email} = location.state;\n\n        e.preventDefault();\n        backendService.login(email, password)\n            .then(() => history.push('/'))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{\n                        margin: '1px',\n                        backgroundColor: 'secondary.main',\n                    }}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={state.password}\n                            onChange={(e) => setState({...state, password: e.target.value})}\n                            required\n                            fullWidth/>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</Button>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Verify)));\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/login\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nfunction AttentionIcon(props: { requiresAttention?: boolean, icon: JSX.Element }) {\n    return <Badge invisible={!props.requiresAttention} variant=\"dot\" color=\"info\">{props.icon}</Badge>\n}\n\nfunction SmallIconButton(props: Props) {\n    return (\n        <Tooltip title={props.description}>\n            <IconButton\n                color=\"inherit\"\n                onClick={props.onClick}\n                size=\"large\"\n                children={<AttentionIcon {...props}/>}\n            />\n        </Tooltip>\n    )\n}\n\nfunction LargeIconButton(props: Props) {\n    return (\n        <Button startIcon={<AttentionIcon {...props}/>}\n                color=\"inherit\"\n                onClick={props.onClick}\n                children={props.description}\n        />\n    )\n}\n\nexport function ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    if (breakpoint) return <SmallIconButton {...props}/>\n    return <LargeIconButton {...props}/>\n}\n","import {ElectricalServicesOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Energienetze Steiermark', link: 'https://portal.e-netze.at/'},\n    {name: 'Kelag', link: 'https://services.kelag.at/ISS/Services.aspx'},\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\nconst providers = [\n    {name: 'Energie Graz', link: 'https://portal.energie-graz.at/'},\n    {name: 'Energie Steiermark', link: 'https://portal.energie-graz.at/'},\n    {name: 'Verbund', link: 'https://www.verbund.at/login'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <>\n            <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n        </>\n    }), [t, setAppBar, openInfo])\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Network operators</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n                                <Divider component=\"li\"/>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Energy providers</Typography>\n                                </li>\n                                {providers.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <label htmlFor=\"contained-button-file\">\n                            <Input\n                                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                id=\"contained-button-file\"\n                                type=\"file\"\n                                onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                            />\n                            <Button variant=\"contained\"\n                                    size=\"large\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    component=\"span\"\n                                    startIcon={<CloudUploadOutlined/>}\n                            >{t('action_upload')}</Button>\n                        </label>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    Container,\n    Divider,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\nimport {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [user, setUser] = useState<UserModel>()\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            {user &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo user={user}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            }\n            {!user && <LinearProgress/>}\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import {ChartOptions} from \"chart.js\";\nimport React, {useEffect, useState} from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\nimport {Card, CardContent, CardHeader} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useParsedDate} from \"../common/Date\";\n\ninterface Props {\n    backendService: BackendService;\n    date: string;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport function PowerEntry(props: Props) {\n    const {backendService, date} = props;\n    const dateParsed = useParsedDate(date);\n    const {t} = useTranslation();\n    const [data, setData] = useState<any>();\n    useEffect(() => {\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                setData({\n                    labels: Array.from(Array(24).keys()),\n                    datasets: consumptions.map((c) => ({\n                            label: c.type,\n                            data: c.data,\n                            fill: false,\n                            backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\n                        })\n                    )\n                })\n            })\n            .catch(console.log)\n    }, [backendService, date]);\n\n    return (\n        <Card variant=\"outlined\" key={date}>\n            <CardHeader title={t('archive_entry_date', {date: dateParsed})}/>\n            <CardContent>\n                <Line data={data} options={options}/>\n            </CardContent>\n        </Card>\n    )\n}","import {Container, Stack} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date) => <PowerEntry date={date} backendService={backendService}/>)}\n                </Stack>\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","import {Box, Card, CardActionArea, CardContent, CardMedia, SvgIcon, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nexport interface DestinationCardProps {\n    to: string\n    icon: any\n    title: string\n    subtitle: string\n    done?: boolean\n}\n\nexport function DestinationCard(props: DestinationCardProps) {\n    const {to, icon, title, subtitle, done} = props;\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\"}}>\n            <CardActionArea component={RouterLink} to={to}>\n                <Box display=\"flex\">\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{subtitle}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n        </Card>\n    )\n}\n","import {Done, InfoOutlined} from \"@mui/icons-material\";\nimport {Container, LinearProgress, Stack} from \"@mui/material\";\nimport {parse} from \"date-fns\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard} from \"./common/DestinationCard\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Archive(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [dates, setDates] = useState<string[]>();\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>}/>\n        });\n    }, [t, setAppBar])\n\n    if (!dates) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{pt: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date, index) => {\n                            const parsedDate = parse(date, 'yyyy-MM-dd', new Date())\n                            return <DestinationCard\n                                to={`/pastbehavior?date=${date}`}\n                                icon={index ? Done : InfoOutlined}\n                                title={t('archive_entry_date', {date: parsedDate})}\n                                subtitle={index ? 'Bereits erledigt' : 'Bitte überpüfen'}\n                                done={!!index}\n                            />\n                        }\n                    )}\n                </Stack>\n            </Container>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\nimport i18next from \"i18next\";\nimport {TranslatedString} from \"../service/Model\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\nconst consumers: any = {\n    laundry: {icon: <LocalLaundryService/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    cooking: {icon: <Restaurant/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    dishes: {icon: <FreeBreakfast/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]},\n    hygiene: {icon: <Bathtub/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    entertainment: {icon: <Movie/>, color: teal[shadeDefault], colorAlt: teal[shadeAlt]},\n    wellness: {icon: <Spa/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    homeoffice: {icon: <Computer/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    emobility: {icon: <Power/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    temperature: {icon: <AcUnit/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    high: {icon: <Help/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    med: {icon: <Help/>, color: amber[shadeDefault], colorAlt: amber[shadeAlt]},\n    low: {icon: <Help/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    unknown: {icon: <Help/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]}\n}\n\nexport const consumerLookup = (type: string) => type in consumers ? consumers[type] : consumers.unknown\n\nexport function backgroundColor(type: string) {\n    return type in consumers ? consumers[type].color : \"#0ff\";\n}\n\nexport function iconLookup(type: string): JSX.Element {\n    return type in consumers ? consumers[type].icon : <Help/>\n}\n","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup, translate} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = translate(consumer.name, consumer.customName);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>([]);\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) =>\n            backendService.putConsumer({...consumer, active: !consumer.active})\n                .then(() => backendService.getConsumers())\n                .then(setConsumers, setError)\n                .catch(console.log),\n        [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const content = () => <DialogContentText>\n        {t('consumer_help').split('\\n').map((s) => <p>{s}</p>)}\n    </DialogContentText>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers && consumers.map((it) =>\n                            <ConsumerCard\n                                key={it.consumerId}\n                                consumer={it}\n                                clickActive={applyChangeActive}\n                            />\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={content()} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {\n    Avatar,\n    Container,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date();\nconst isoDate = new Date().toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(isoDate)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return {\n                            header: (\n                                <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{width: 30, height: 30, backgroundColor: consumerType.color}}\n                                    >\n                                        {consumerType.icon}\n                                    </Avatar>\n                                </Tooltip>\n                            ),\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        }\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() =>\n            rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n                .then(() => {\n                    setSuccess(t('changes_saved'));\n                    setModified(false);\n                }, setError)\n                .catch(console.log)\n        , [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<SaveAlt/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    if (!rows) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {energyAvailable.map((v) => <TableCell\n                                    sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Container, Stack, Typography,} from \"@mui/material\";\nimport React, {useContext, useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {DestinationCard, DestinationCardProps} from \"./common/DestinationCard\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst destinations: { [key: string]: DestinationCardProps } = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nconst userInteractionNeeded = (type?: string) => {\n    switch (type) {\n        case \"management\":\n            return [destinations.upload]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.upload, destinations.mood]\n        default:\n            return null;\n    }\n}\n\nconst userResult = (type?: string) => {\n    switch (type) {\n        case \"homeowner\":\n            return [destinations.power]\n        default:\n            return null;\n    }\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n    const interactions = userInteractionNeeded(user?.type);\n    const results = userResult(user?.type);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                <Stack spacing={3}>\n                    {interactions &&\n                    <Stack spacing={1}>\n                        <Typography textAlign=\"center\" variant=\"h5\">Ihre Aufmerksamkeit wird benötigt</Typography>\n                        {interactions.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                    {results &&\n                    <Stack spacing={1}>\n                        <Typography textAlign=\"center\" variant=\"h5\">Neue Ergebnisse verfügbar</Typography>\n                        {results.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                done\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                </Stack>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import {createTime} from \"../common/Time\";\nimport {ThermostatModel} from \"../service/Model\";\n\nexport const data_ = {\n    useAdvanced: false,\n    simple: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ],\n    advanced: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ]\n} as ThermostatModel\n","import {StaticTimePicker} from \"@mui/lab\";\nimport {Button, DialogActions, DialogContent, InputAdornment, TextField} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"../common/ResponsiveDialog\";\n\ninterface Props {\n    title: string\n    open: boolean\n    showTimePicker: boolean\n    onClose: () => void\n    onOK: () => void\n    time: Date | null\n    setTime: (time: Date | null) => void\n    temperature: string | null\n    setTemperature: (temperature: string | null) => void\n}\n\nexport function ModifyTimeItemDialog(props: Props) {\n    const {t} = useTranslation();\n    return <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n        <DialogContent>\n            {props.showTimePicker &&\n            <StaticTimePicker\n                label={t('thermostat_select_time')}\n                ampm={false}\n                value={props.time}\n                onChange={(date) => props.setTime(date)}\n                renderInput={() => <></>}\n            />\n            }\n            <TextField\n                variant=\"filled\"\n                sx={{my: 2}}\n                fullWidth\n                label={t('thermostat_temperature')}\n                type=\"number\"\n                value={props.temperature}\n                onChange={(e) => props.setTemperature(e.target.value)}\n                InputProps={{endAdornment: <InputAdornment position=\"start\">°C</InputAdornment>}}/>\n        </DialogContent>\n        <DialogActions>\n            <Button color=\"primary\" onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n            <Button color=\"primary\" onClick={props.onOK}>{t('dialog_button_ok')}</Button>\n        </DialogActions>\n    </ResponsiveDialog>\n}\n","import {Palette} from '@mui/material/styles';\nimport {TimeItem} from \"../service/Model\";\n\nexport const chartOptions = {\n    plugins: {\n        legend: {display: false},\n        tooltip: {enabled: false}\n    },\n    scales: {\n        x: {\n            min: 0,\n            max: 24,\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + '⁰⁰'\n            }\n        },\n        y: {\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + ' °C'\n            }\n        }\n    }\n}\n\nexport const createData = (dataItems: TimeItem[], palette: Palette) => ({\n    datasets: [\n        {\n            data: dataItems.map((i) => ({x: (i.time.getHours() + i.time.getMinutes() / 60), y: i.temperature})),\n            showLine: true,\n            fill: true,\n            stepped: true,\n            borderColor: palette.primary.main,\n            backgroundColor: palette.secondary.main,\n        }\n    ],\n})\n","import Add from \"@mui/icons-material/Add\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    useTheme\n} from \"@mui/material\";\nimport React from \"react\";\nimport {Scatter} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {createTime} from \"../common/Time\";\nimport {TimeItem} from \"../service/Model\";\nimport {chartOptions, createData} from \"./ChartOptions\";\n\ninterface LabeledTimeItem extends TimeItem {\n    label: string\n}\n\ninterface Props {\n    title: string;\n    id: string;\n    items: TimeItem[];\n    onAddTime: (id: string) => void\n    onCopyFrom: (id: string) => void\n    onDelete: (id: string, index: number) => void\n    onEdit: (id: string, index: number) => void\n}\n\nconst printTime = (time: Date) => time.toLocaleTimeString('de-DE', {hour: '2-digit', minute: '2-digit'})\nconst labelTimeItems = (array: TimeItem[]): LabeledTimeItem[] => array.map((value, index) => ({\n    ...value, label: `${printTime(value.time)} - ${printTime(array[index + 1]?.time ?? createTime(23, 59))}`\n}))\n\nconst compareItem = (a: TimeItem, b: TimeItem) => a.time.getTime() === b.time.getTime() && a.temperature === b.temperature\nexport const compareProps = (a: Props, b: Props) =>\n    a.id === b.id && a.title === b.title && a.items.length === b.items.length &&\n    a.items.every((value, index) => compareItem(value, b.items[index]))\n\nexport const ThermostatDaySetting = React.memo((props: Props) => {\n    const {palette} = useTheme();\n    const {t} = useTranslation();\n    const {title, items} = props;\n\n    const labeledTimeItems = labelTimeItems(items);\n    const dataItems = [...items, {time: createTime(23, 59), temperature: items[items.length - 1].temperature}]\n    const data = createData(dataItems, palette);\n    return (\n        <Card>\n            <CardHeader title={title}/>\n            <CardContent>\n                <Scatter data={data} options={chartOptions} height={50}/>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{t('thermostat_timespan')}</TableCell>\n                            <TableCell colSpan={2}>{t('thermostat_temperature')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {labeledTimeItems.map((item, index) => (\n                            <TableRow key={index} hover={true}>\n                                <TableCell>{item.label}</TableCell>\n                                <TableCell>{item.temperature} °C</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => props.onEdit(props.id, index)}\n                                    ><Edit/></IconButton>\n                                    <IconButton\n                                        disabled={index < 1}\n                                        size=\"small\"\n                                        onClick={() => props.onDelete(props.id, index)}\n                                    ><Delete/></IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n            <CardActions>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.onCopyFrom(props.id)}\n                >{t('thermostat_copy_from')}</Button>\n                <Box mx=\"auto\"/>\n                <Tooltip title={t('thermostat_insert_timespan') as string}>\n                    <IconButton\n                        sx={{marginLeft: \"auto\"}}\n                        onClick={() => props.onAddTime(props.id)}\n                        disabled={items?.length > 4}\n                    ><Add/></IconButton>\n                </Tooltip>\n            </CardActions>\n        </Card>\n    )\n}, compareProps)\n","import CompareArrowsOutlined from \"@mui/icons-material/CompareArrowsOutlined\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport RotateLeft from \"@mui/icons-material/RotateLeft\"\nimport SaveAlt from \"@mui/icons-material/SaveAlt\"\nimport Container from \"@mui/material/Container\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport Divider from \"@mui/material/Divider\";\nimport Grid, {GridSize} from \"@mui/material/Grid\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Stack from \"@mui/material/Stack\"\nimport Switch from \"@mui/material/Switch\"\nimport Typography from \"@mui/material/Typography\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {createTime} from \"./common/Time\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ThermostatModel, TimeItem} from \"./service/Model\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {ThermostatDaySetting} from \"./thermostats/ThermostatDaySetting\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copySetting = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst copyData = (data: ThermostatModel): ThermostatModel => ({\n    ...data,\n    simple: copySetting(data.simple),\n    advanced: copySetting(data.advanced)\n})\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nconst compareDays = (a: TimeItem[][], b: TimeItem[][]) => a.length === b.length &&\n    a.every((day, dayIndex) =>\n        day.length === b[dayIndex].length && day.every((item, itemIndex) =>\n            item.time === b[dayIndex][itemIndex].time && item.temperature === b[dayIndex][itemIndex].temperature))\nconst compareData = (a: ThermostatModel, b: ThermostatModel) => a.useAdvanced === b.useAdvanced &&\n    compareDays(a.simple, b.simple) && compareDays(a.advanced, b.advanced)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<ThermostatModel>(data_)\n    const [initialData, setInitialData] = useState<ThermostatModel>(data_)\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [t('day_weekdays'), t('day_weekend')]\n    const dayLabels = [t('day_monday'), t('day_tuesday'), t('day_wednesday'), t('day_thursday'), t('day_friday'), t('day_saturday'), t('day_sunday')]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (!data) return;\n                data.simple = data.simple.map(day => sortDay(day));\n                data.advanced = data.advanced.map(day => sortDay(day));\n                setData(data);\n                setInitialData(data);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setInitialData(data))\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    const modified = !compareData(data, initialData);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton\n                    requiresAttention={modified}\n                    description={t('save')}\n                    icon={<SaveAlt/>}\n                    onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save, modified]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n    const onCopyFrom = useCallback((id: string) => {\n        setID(+id);\n        setCopyFromOpen(true);\n    }, []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => {\n            const intId = +id;\n            const state = copyData(prevState)\n            if (intId > 9) {\n                state.simple[intId - 10].splice(index, 1)\n            } else {\n                state.advanced[intId].splice(index, 1)\n            }\n            return state;\n        });\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10].push({time: time, temperature: +temperature})\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id].push({time: time, temperature: +temperature})\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10][index] = {time: time, temperature: +temperature};\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id][index] = {time: time, temperature: +temperature};\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    const copyFrom = useCallback((fromID: number) => {\n        if (id === undefined) return;\n        setData(prevState => {\n            const state = copyData(prevState);\n            const from = (fromID > 9 ? prevState.simple[fromID - 10] : prevState.advanced[fromID]).map(it => ({...it}));\n            if (id > 9) {\n                state.simple[id - 10] = from;\n            } else {\n                state.advanced[id] = from;\n            }\n            return state;\n        });\n    }, [id])\n\n    if (!data) return <></>\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.advanced.length < index ? empty : data.advanced[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: data.simple[index]\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 4}\n    ]\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\" sx={{paddingTop: 1}}>\n                <Stack direction=\"row\" spacing={1} sx={{alignItems: \"center\", justifyContent: \"end\", pb: 1}}>\n                    <Typography variant=\"subtitle1\"\n                                sx={{textTransform: 'uppercase'}}\n                    >{t('thermostat_use_advanced_settings')}</Typography>\n                    <Switch\n                        checked={data.useAdvanced}\n                        onChange={(event, value) => setData(prevState => ({...prevState, useAdvanced: value}))}/>\n                </Stack>\n\n                {tabs.map((tab, index) => (\n                    <TabPanel index={index} value={data.useAdvanced ? 1 : 0} key={index}>\n                        <Grid container spacing={1}>\n                            {tab.days.map((day) => (\n                                <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                    <ThermostatDaySetting\n                                        id={day.id}\n                                        title={day.label}\n                                        items={day.data}\n                                        onAddTime={onAddTime}\n                                        onCopyFrom={onCopyFrom}\n                                        onEdit={(id, index) => {\n                                            setID(+id);\n                                            setIndex(index);\n                                            setTime(day.data[index].time);\n                                            setTemperature(String(day.data[index].temperature));\n                                            setShowTimePicker(index > 0);\n                                            setEditTimeOpen(true);\n                                        }}\n                                        onDelete={onDelete}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                ))}\n            </Container>\n            <ModifyTimeItemDialog\n                title={t('thermostat_add_entry')}\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title={t('thermostat_edit_entry')}\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ResponsiveDialog title={t('dialog_copy_from_title')} open={copyFromOpen}\n                              onClose={() => setCopyFromOpen(false)}>\n                <DialogContent sx={{minWidth: 300}}>\n                    <List>\n                        {dayLabels.map((day, index) =>\n                            <ListItem\n                                key={index}\n                                button\n                                disabled={index === id}\n                                onClick={() => {\n                                    copyFrom(index);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                        <Divider variant=\"middle\"/>\n                        {simpleDayLabels.map((day, index) =>\n                            <ListItem\n                                key={index + 10}\n                                button\n                                disabled={index + 10 === id}\n                                onClick={() => {\n                                    copyFrom(index + 10);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                    </List>\n                </DialogContent>\n            </ResponsiveDialog>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {Card, CardContent, Container, LinearProgress, Typography, useTheme} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {MoodModel} from \"./service/Model\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n}\n\nexport const compareProps = (a: GraphProps, b: GraphProps) => a.mood.x === b.mood.x && a.mood.y === b.mood.y\n\nconst DraggableGraph = React.memo(function (props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n    const commonScaleProps = {\n        alignToPixels: true,\n        max: 10,\n        min: 0,\n        ticks: {display: false},\n        grid: {display: false},\n    }\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            plugins: {\n                // @ts-ignore\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: (e: any, element: any) => null,\n                    onDrag: (e: any, datasetIndex: any, index: number, value: number) => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        }} height={100} width={100}/>\n}, compareProps)\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'MoodPage'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<MoodModel>();\n    const [modified, setModified] = useState(false);\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = useCallback(() => {\n        if (!mood) return;\n        backendService.putMood(date, mood)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t])\n\n    const onMoodChange = useCallback((mood: MoodModel) => {\n        setMood(mood);\n        setModified(true);\n    }, [])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      icon={<SaveAlt/>}\n                                      onClick={onSaveClick}\n                                      description={t('save')}/>\n            </>\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified])\n\n    if (!mood) return <LinearProgress />;\n\n    const title_key = user?.type === \"student\" ? \"mood_please_select_mood_student\" : \"mood_please_select_mood_homeowner\";\n    return <Track>\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n            <Typography variant=\"h5\" align=\"center\" paragraph>{t(title_key)}</Typography>\n            <Card>\n                {mood &&\n                <CardContent>\n                    <DraggableGraph mood={mood} onChange={onMoodChange}/>\n                </CardContent>\n                }\n            </Card>\n        </Container>\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Box, Button, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport function Page404(props: { path: string }) {\n    return (\n        <Box m={16} textAlign='center'>\n            <Typography variant=\"h1\">404</Typography>\n            <Typography variant=\"h5\">Page not found</Typography>\n            <Box m={2}>\n                <Button color=\"primary\" variant=\"contained\" component={Link} to={props.path}>Go home</Button>\n            </Box>\n        </Box>\n    )\n}\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {\n    Avatar,\n    Container,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ConsumerModel} from \"./service/Model\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface HeaderProps {\n    consumer: ConsumerModel\n}\n\nconst compareConsumerProps = (a: HeaderProps, b: HeaderProps) => a.consumer.consumerId === b.consumer.consumerId\nconst ConsumerHeader = React.memo((props: { consumer: ConsumerModel }) => {\n    const {consumer} = props;\n    const consumerType = consumerLookup(consumer.type);\n    return (<Tooltip title={translate(consumer.name, consumer.customName)} enterTouchDelay={0}>\n        <Avatar\n            variant=\"rounded\"\n            sx={{backgroundColor: consumerType.color, width: 30, height: 30}}\n            children={consumerType.icon}\n        />\n    </Tooltip>)\n}, compareConsumerProps);\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        if (!validDate) return;\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return ({\n                            header: <ConsumerHeader consumer={c}/>,\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        });\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [validDate, backendService, setError, date]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        rows && backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, date, rows, setError, setSuccess, t]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<SaveAlt/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t])\n\n    if (!validDate) return <Redirect to={'/'}/>\n    if (!rows) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\"/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell/>\n                                {energyAvailable.map((v) => <TableCell sx={{backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {Box, Button, Container, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport {Link as RouterLink, Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Verify from \"./Verify\";\nimport Logout from \"./Logout\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Power from \"./Power\";\nimport Archive from \"./Archive\";\nimport Consumers from \"./Consumers\";\nimport Behavior from \"./Behavior\";\nimport React, {useContext} from \"react\";\nimport Home from \"./Home\";\nimport Thermostats from \"./Thermostats\";\nimport BackendService from \"./service/BackendService\";\nimport Mood from \"./Mood\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {Page404} from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    const {backendService} = props;\n    return <>\n        <Redirect to=\"/login\"/>\n        <Switch>\n            <Route path=\"/verify\"><Verify backendService={backendService}/></Route>\n            <Route path=\"/login\"><Login backendService={backendService}/></Route>\n            <Route><Page404 path=\"/login\"/></Route>\n        </Switch>\n    </>\n}\n\nexport function LoadingRouter(props: PrivateRouteProps) {\n    return (\n        <Switch>\n            <Route path=\"/logout\"><Logout {...props}/></Route>,\n            <Route exact path=\"/\"><LoadingPage/></Route>,\n            <Route exact path={`${process.env.PUBLIC_URL}`}><LoadingPage/></Route>,\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n\n\nfunction LoadingPage() {\n    return (\n        <Container maxWidth=\"xs\"\n                   sx={{display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"}}>\n            <Paper variant=\"outlined\" sx={{width: \"100%\", p: 1}}>\n                <Typography variant=\"h5\" textAlign=\"center\">Logging in...</Typography>\n                <Box mt={5}/>\n                <LinearProgress/>\n                <Stack direction=\"row\" sx={{justifyContent: \"flex-end\"}}>\n                    <Button component={RouterLink} to=\"/logout\" sx={{mr: 2}} children=\"Logout\"/>\n                    <Button children=\"Retry\"/>\n                </Stack>\n            </Paper>\n        </Container>\n    )\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return <LinearProgress/>;\n\n    const paths = {\n        logout: <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: <Route path=\"/user\"><User {...props}/></Route>,\n        power: <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        mood: <Route path=\"/mood\"><Mood  {...props}/></Route>,\n        thermostats: <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        root: <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: <Route exact path={`${process.env.PUBLIC_URL}`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout, paths.user, paths.home, paths.root]\n    const managementPaths = [paths.upload];\n    const homeOwnerPaths = [paths.upload, paths.power, paths.consumers, paths.behavior, paths.mood];\n    const studentPaths = [paths.archive, paths.consumers, paths.behavior, paths.mood, paths.pastbehavior];\n\n    return (\n        <Switch>\n            {user.type === \"management\" && managementPaths}\n            {user.type === \"student\" && studentPaths}\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    ThermostatModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<ThermostatModel | null> {\n        return this.backend\n            .get<ThermostatModel>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => {\n                if (!data) return data;\n                data.simple = data.simple.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                data.advanced = data.advanced.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                return data;\n            })\n    }\n\n    putThermostats(data: ThermostatModel) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, StyledEngineProvider, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useTracking} from \"react-tracking\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\nimport Config from \"./Config\";\nimport {LoadingRouter, PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    //FIXME fix retry\n    useEffect(() => {\n        console.log('sending get user to server...........')\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser, setError)\n                .catch(console.error);\n        }\n    }, [isLoggedIn, setError])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({\n        title: \"\",\n        showBackButton: false,\n        children: () => <></>\n    });\n    const setAppBarCb = useCallback((props: AppBarProps) => setAppBar(props), [])\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                {isLoggedIn !== undefined &&\n                <React.Suspense fallback={<LinearProgress/>}>\n                    <ColorModeContext.Provider value={colorMode}>\n                        <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                            {!isLoggedIn &&\n                            <PublicRouter backendService={backendService}/>\n                            }\n                            {isLoggedIn && user &&\n                            <UserContext.Provider value={user}>\n                                <Track>\n                                    <Root>\n                                        <DefaultAppBar title={appBar.title}\n                                                       hideBackButton={!appBar.showBackButton}\n                                                       children={appBar.children()}/>\n                                        <DefaultDrawer/>\n                                        <Content>\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                                <PrivateRouter\n                                                    backendService={backendService}\n                                                    setAppBar={setAppBarCb}\n                                                />\n                                            </LocalizationProvider>\n                                        </Content>\n                                    </Root>\n                                    <DefaultBottomNavigation/>\n                                </Track>\n                            </UserContext.Provider>\n                            }\n                            {isLoggedIn && !user &&\n                            <LoadingRouter backendService={backendService} setAppBar={() => undefined}/>\n                            }\n                            <UserConfirmationDialog {...userConfirmationProps}/>\n                            <AlertSnackbar {...error} severity=\"error\"/>\n                        </Router>\n                    </ColorModeContext.Provider>\n                </React.Suspense>\n                }\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const useDarkTheme = mode ? mode === 'dark' : prefersDarkMode;\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: useDarkTheme ? \"dark\" : \"light\",\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: useDarkTheme ? 1 : 0,\n                    color: \"inherit\",\n                },\n            },\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                        // When bottom bar is shown, raise FAB position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [useDarkTheme]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}