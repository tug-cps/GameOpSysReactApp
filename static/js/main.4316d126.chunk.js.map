{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","common/ResponsiveDialog.tsx","common/UserConfirmationDialog.tsx","common/UseSnackBar.tsx","service/Executor.ts","service/FakeDB.ts","service/FakeBackend.ts","Config.ts","common/DestinationCard.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","common/RetryMessage.tsx","common/Tracking.ts","Archive.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","common/ColorGradient.tsx","common/ConsumerTools.tsx","common/Handle404.ts","Behavior.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","common/Date.ts","Feedback.tsx","Home.tsx","LoadingPage.tsx","Login.tsx","Logout.tsx","Page404.tsx","PastBehavior.tsx","Upload.tsx","User.tsx","Verify.tsx","WellBeing.tsx","wellBeing/Chart.ts","Routes.tsx","service/BackendService.ts","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","open","onClose","Alert","variant","message","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","ml","DefaultAppBar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Typography","color","mx","DefaultBottomNavigation","history","useHistory","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","ResponsiveDialog","fullScreen","Dialog","IconButton","edge","onClick","marginRight","size","DialogTitle","UserConfirmationDialog","DialogContent","DialogContentText","DialogActions","Button","onAccept","useSnackBar","state","setState","prevState","useCallback","reason","response","data","statusText","DefaultExecutor","reject","console","log","this","status","headers","config","request","FaultyExecutor","executor","Math","random","ok","error","getFakeDB","db","localStorage","getItem","users","JSON","stringify","location","name","email","consumer","assign","v","i","toString","active","predictions","validated","token","setItem","parse","saveFakeDB","findInDict","dict","matcher","key","delayedPromise","promise","delay","setTimeout","catch","FakeBackend","backendConfig","url","endsWith","params","otp","Authorization","startsWith","removeItem","date","includes","substring","lastIndexOf","prediction","index","todoPrediction","todoVerifyPrediction","todoUpload","todoWellBeing","totalUsage","self","others","relativeUsage","high","med","low","Date","toISOString","slice","split","pop","array","elementMatcher","changes","consumerIndex","findIndex","meldArrayElement","c","axios","create","baseURL","process","backend","apiDescription","DestinationCard","done","Card","borderColor","undefined","flexDirection","CardActionArea","CardMedia","backgroundColor","alignItems","padding","CardContent","noWrap","secondaryTo","alignSelf","m","secondaryIcon","InfoOutlined","useInfoDialog","InfoDialog","content","AttentionIcon","Badge","invisible","requiresAttention","SmallIconButton","Tooltip","description","LargeIconButton","startIcon","ResponsiveIconButton","RetryMessage","Container","maxWidth","square","p","mt","retry","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Archive","page","infoProps","openInfo","entries","setEntries","progress","setProgress","setError","backendService","setAppBar","failed","initialLoad","getPredictions","finally","useEffect","InfoContent","infoText","returnObjects","text","paragraph","pt","Stack","spacing","entry","parsedDate","CheckCircleOutlined","RadioButtonUncheckedOutlined","BarChartOutlined","compareCellProps","a","b","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","ColorModeContext","prefersDarkMode","mode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","target","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","readonly","selectionStarted","preventDefault","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","colorGradient","fade","color1","decomposeColor","yellow","green","color2","red","values","floor","g","consumers","laundry","tKey","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","homeoffice","emobility","temperature","amber","unknown","consumerLookup","handle404","on404","hours","Array","from","formatTime","today","setDate","getDate","isoDate","Behavior","setRows","availableEnergy","setAvailableEnergy","modified","setModified","success","setSuccess","all","getConsumers","getPrediction","getAvailableEnergy","energy","filter","enterTouchDelay","Avatar","height","consumerId","find","handleChange","cells","handleSave","putPrediction","infoConsumers","disableGutters","paddingTop","TableContainer","maxHeight","xs","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","compareProps","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","consumerType","ListItemAvatar","ListItemSecondaryAction","Consumers","setConsumers","applyChangeActive","putConsumer","consumerHelp","paddingBottom","it","useParsedDate","useMemo","Feedback","openBehavior","setOpenBehavior","URLSearchParams","useLocation","search","get","dateParsed","validDate","isValid","isPast","feedback","setFeedback","barChartData","labels","datasets","palette","background","paper","useBarChartData","barChartOptions","responsive","scales","xAxis","yAxis","grid","drawBorder","divider","ticks","callback","tickValue","stepSize","font","family","typography","fontFamily","plugins","legend","tooltip","enabled","datalabels","contrastText","formatter","toFixed","useBarChartOptions","pieChartData","usePieChartData","pieChartOptions","usePieChartOptions","getFeedback","ShowChartOutlined","Grid","container","item","md","ChartDataLabels","wellBeing","Home","tasks","setTasks","getTasks","interactions","arr","length","textAlign","justifyContent","LoadingPage","mr","StyledGrid","styled","margin","ChangeLanguageDialog","i18n","changeLanguage","language","ListItemButton","Login","personalCode","setPersonalCode","setEmail","langDialogProps","openLangDialog","handleSubmit","requestPin","InfoDialogContent","InfoLogin","link","py","Link","href","InfoPersonalCode","minHeight","onSubmit","TextField","autoFocus","autoComplete","disabled","required","fullWidth","InputProps","endAdornment","InputAdornment","LoadingButton","loading","Fab","LanguageOutlined","Logout","logout","Page404","gutterBottom","ConsumerHeader","PastBehavior","openFeedback","setOpenFeedback","setValidated","CircularProgress","infoText2","Input","operators","Upload","cancelToken","setCancelToken","onUpload","file","postConsumption","onCancel","cancel","infoContent","ElectricalServicesOutlined","LaunchOutlined","htmlFor","accept","files","loadingPosition","Collapse","orientation","UserInfo","items","Email","MyLocation","idx","ConsumersInfo","ArrowRight","LanguageInfo","i18next","resolvedLanguage","setLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","colorModeValue","Brightness4Outlined","toggleColorMode","User","ExitToApp","Form","StyledContainer","Verify","setOtp","login","mail","WellBeing","setWellBeing","panel","setPanel","getWellBeing","x","y","onSaveClick","postWellBeing","onWellBeingChange","borderWidth","main","pointHitRadius","hoverRadius","useData","maintainAspectRatio","aspectRation","xScale","alignToPixels","yScale","onHover","chart","getElementsAtEventForMode","intersect","native","style","cursor","dragData","dragX","showTooltip","onDragStart","onDrag","onDragEnd","datasetIndex","useOptions","titleKey","TabContext","TabPanel","marginLeft","PublicRouter","path","exact","LoadingRouter","PrivateRouter","paths","commonPaths","homeOwnerPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","addAuth","patch","put","post","source","CancelToken","formData","FormData","append","Config","createContext","App","setMode","useDarkTheme","createTheme","lightGreen","secondary","components","MuiAppBar","defaultProps","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","root","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","setUser","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","setRetry","onRetry","isAuthenticated","subscribe","getUser","appBar","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","en","de","resources","resourcesToBackend","namespace","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","isLocalhost","Boolean","hostname","match","registerValidSW","swUrl","navigator","serviceWorker","register","registration","onupdatefound","installingWorker","installing","onstatechange","controller","onUpdate","onSuccess","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","URL","origin","fetch","contentType","indexOf","ready","unregister","reload","checkValidServiceWorker","serviceWorkerRegistration"],"mappings":"2IAAA,IAAIA,EAAM,CACT,wBAAyB,CACxB,IACA,GAED,wBAAyB,CACxB,IACA,IAGF,SAASC,EAAoBC,GAC5B,IAAIC,EAAoBC,EAAEJ,EAAKE,GAC9B,OAAOG,QAAQC,UAAUC,MAAK,WAC7B,IAAIC,EAAI,IAAIC,MAAM,uBAAyBP,EAAM,KAEjD,MADAM,EAAEE,KAAO,mBACHF,KAIR,IAAIG,EAAMX,EAAIE,GAAMU,EAAKD,EAAI,GAC7B,OAAOR,EAAoBK,EAAEG,EAAI,IAAIJ,MAAK,WACzC,OAAOJ,EAAoBU,EAAED,EAAI,MAGnCX,EAAoBa,KAAO,WAC1B,OAAOC,OAAOD,KAAKd,IAEpBC,EAAoBW,GAAK,IACzBI,EAAOC,QAAUhB,G,2KCjBV,SAASiB,EAAcC,GAAe,IAAD,IAClCC,EAAQ,UAAGD,EAAMC,gBAAT,QAAqB,QAC7BC,EAAgB,UAAGF,EAAME,wBAAT,QAA6B,IACnD,OACI,cAACC,EAAA,EAAD,CAAUC,aAAc,CAACC,WAAY,SAAUC,SAAU,UAC/CC,KAAMP,EAAMO,KACZL,iBAAkBA,EAClBM,QAASR,EAAMQ,QAHzB,SAII,cAACC,EAAA,EAAD,CAAOC,QAAQ,SAASF,QAASR,EAAMQ,QAASP,SAAUA,EAA1D,SAAqED,EAAMW,Y,kRCAjFC,EAAe,CACjBC,KAAM,CAACC,MAAO,YAAaC,SAAU,GAAIC,KAAMC,IAAcC,GAAI,KACjEC,OAAQ,CAACL,MAAO,oBAAqBC,SAAU,uBAAwBC,KAAMI,IAAqBF,GAAI,WACtGG,SAAU,CAACP,MAAO,sBAAuBC,SAAU,yBAA0BC,KAAMM,IAAcJ,GAAI,aACrGK,YACI,CAACT,MAAO,yBAA0BC,SAAU,4BAA6BC,KAAMQ,IAAQN,GAAI,gBAC/FO,KAAM,CAACX,MAAO,kBAAmBC,SAAU,qBAAsBC,KAAMU,IAAkBR,GAAI,SAC7FS,MAAO,CAACb,MAAO,mBAAoBC,SAAU,sBAAuBC,KAAMY,IAAWV,GAAI,UACzFW,QAAS,CAACf,MAAO,qBAAsBC,SAAU,wBAAyBC,KAAMc,IAASZ,GAAI,YAC7Fa,KAAM,CAACjB,MAAO,wBAAyBC,SAAU,2BAA4BC,KAAMgB,IAAMd,GAAI,eCNjG,IAAMe,EAAc,IAOPC,EAAgBC,IAAMC,MAAK,WACpC,IAAO1C,EAAK2C,cAAL3C,EACDkB,EDYH,WAEH,OADa0B,qBAAWC,IACXC,MACT,IAAK,UACD,MAAO,CAAC5B,EAAaC,KAAMD,EAAaS,SAAUT,EAAaa,MACnE,IAAK,YACD,MAAO,CAACb,EAAaC,KAAMD,EAAaO,OAAQP,EAAaS,SAAUT,EAAaa,MACxF,QACI,MAAO,CAACb,EAAaC,KAAMD,EAAaa,OCpB3BgB,GAErB,OACI,cAACC,EAAA,EAAD,CAAKC,UAAU,MAAMC,GAAI,CAACC,WAAY,CAACC,GAAI,GAAIC,MAAO,CAACD,GAAIb,IAA3D,SACI,cAACe,EAAA,EAAD,CAAQC,QAAM,EAAd,SACI,cAACC,EAAA,EAAD,CAAQ3C,MAAI,EAACG,QAAQ,aAArB,SACI,eAACgC,EAAA,EAAD,CAAKS,KAAK,eAAeP,GAAI,CAACG,MAAOd,GAArC,UACI,cAACmB,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,IACA,cAACC,EAAA,EAAD,CAAMC,gBAAc,EAApB,SACK3C,EAAa/B,KAAI,SAAC2E,GAAD,OACd,eAACC,EAAA,EAAD,CAAUC,QAAM,EAAef,UAAWgB,IAAYzC,GAAIsC,EAAEtC,GAA5D,UACI,cAAC0C,EAAA,EAAD,UAAc,cAACC,EAAA,EAAD,CAASlB,UAAWa,EAAExC,SACpC,cAAC8C,EAAA,EAAD,CAAcC,QAASrE,EAAE8D,EAAE1C,WAFT0C,EAAE1C,wBAWrD,kBAAM,KAEF,SAASkD,EAAQhE,GACpB,OAAO,eAAC0C,EAAA,EAAD,CAAKE,GAAI,CAACqB,SAAU,GAApB,UACH,cAACb,EAAA,EAAD,IACA,cAAC,IAAMc,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAAmBC,SAAUrE,EAAMqE,cAI9D,SAASC,EAAKtE,GACjB,OAAO,cAAC0C,EAAA,EAAD,CAAKE,GAAI,CAAC2B,QAAS,QAASF,SAAUrE,EAAMqE,WAGvD,IAAMzB,EAAK,CAAC4B,GAAI,CAAC1B,GAAG,GAAD,OAAKb,EAAL,OAAuBc,MAAO,CAACD,GAAG,eAAD,OAAiBb,EAAjB,SAE7C,SAASwC,GAAczE,GAC1B,IAAOc,EAASd,EAATc,MACD4D,EAAUC,cAEhB,OACI,cAACC,EAAA,EAAD,CAAOC,QAAQ,EAAOC,UAAU,OAAOC,IAAKL,EAA5C,SACI,cAACM,EAAA,EAAD,CAAQpC,GAAIA,EAAZ,SACI,eAACQ,EAAA,EAAD,WACI,cAAC6B,EAAA,EAAD,CAAYC,MAAM,UAAUxE,QAAQ,KAApC,SAA0CI,IAC1C,cAAC4B,EAAA,EAAD,CAAKyC,GAAG,SACPnF,EAAMqE,gB,8DC9BZe,OAxCf,WAEI,IAAMC,EAAUC,eACT5F,EAAK2C,cAAL3C,EACP,EAA0ByC,IAAMoD,SAAS,GAAzC,mBAAOC,EAAP,KAAcC,EAAd,KACMC,EAAQC,eACRC,EAAUC,aAAcH,EAAMI,YAAYC,KAAK,OAC/CnF,EFgBH,WAEH,OADa0B,qBAAWC,IACXC,MACT,IAAK,UACD,MAAO,CAAC5B,EAAaC,KAAMD,EAAaS,SAAUT,EAAaa,MACnE,IAAK,YACD,MAAO,CAACb,EAAaC,KAAMD,EAAaO,OAAQP,EAAaS,SAAUT,EAAaa,MACxF,QACI,MAAO,CAACb,EAAaC,KAAMD,EAAaa,OExB3BuE,GAErB,OAAKJ,EAEA,qCACG,cAAClD,EAAA,EAAD,CAAKE,GAAI,CAACqD,UAAW,UACrB,cAACC,GAAA,EAAD,CAAOtD,GAAI,CACPG,MAAO,OACPoD,SAAU,QACVC,OAAQ,EACRC,SAAU,SACVC,OAAQ,KACTC,UAAW,EANd,SAOI,cAACC,GAAA,EAAD,CACIhB,MAAOA,EACPiB,SAAU,SAACC,EAAOC,GACdlB,EAASkB,GACT,IAAMC,EAAchG,EAAa+F,GACd,MAAfC,GACAvB,EAAQwB,KAAKD,EAAY1F,KAGjC4F,YAAU,EATd,SAWKlG,EAAa/B,KAAI,SAAC2E,GAAD,OACd,cAACuD,GAAA,EAAD,CAAwBtH,GAAI+D,EAAE1C,MAAOkG,MAAOtH,EAAE8D,EAAE1C,OAAQE,KAAM,cAAC6C,EAAA,EAAD,CAASlB,UAAWa,EAAExC,mBAvBnF,M,mDCPlB,SAASiG,GAAiBjH,GAC7B,IAAM0F,EAAQC,eACRuB,EAAarB,aAAcH,EAAMI,YAAYC,KAAK,OAExD,OACI,eAACoB,GAAA,EAAD,CACI5G,KAAMP,EAAMO,KACZC,QAASR,EAAMQ,QACf0G,WAAYA,EAHhB,UAKKA,GACD,cAAClC,EAAA,EAAD,UACI,eAAC5B,EAAA,EAAD,WACI,cAACgE,GAAA,EAAD,CACIlC,MAAM,UACNmC,KAAK,QACLC,QAAStH,EAAMQ,QACfoC,GAAI,CAAC2E,YAAa,GAClBC,KAAK,QACLnD,SAAU,cAAC,KAAD,MAEd,cAACY,EAAA,EAAD,CAAYvE,QAAQ,KAApB,SAA0BV,EAAMc,aAIxC,cAAC2G,GAAA,EAAD,CAAapD,SAAUrE,EAAMc,QAC5Bd,EAAMqE,Y,4CC/BNqD,GAAyB,SAAC1H,GACnC,IAAON,EAAK2C,cAAL3C,EAEP,OACI,eAACuH,GAAD,CAAkBnG,MAAOpB,EAAE,iBACTa,KAAMP,EAAMO,KACZC,QAASR,EAAMQ,QAFjC,UAGI,cAACmH,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,UAAoB5H,EAAMW,YAE9B,eAACkH,GAAA,EAAD,WACI,cAACC,GAAA,EAAD,CAAQR,QAAStH,EAAMQ,QAAvB,SAAiCd,EAAE,0BACnC,cAACoI,GAAA,EAAD,CAAQR,QAAStH,EAAM+H,SAAvB,SAAkCrI,EAAE,6BCL7C,SAASsI,KACZ,MAA0BzC,mBAAgB,CAAChF,MAAM,IAAjD,mBAAO0H,EAAP,KAAcC,EAAd,KASA,MAAO,CAPO,CAAC3H,KAAM0H,EAAM1H,KAAMC,QADnB,kBAAM0H,GAAS,SAAAC,GAAS,kCAASA,GAAT,IAAoB5H,MAAM,QACfI,QAASsH,EAAMtH,SAC5CyH,uBAAY,SAACC,GAC7B,MAAsB,kBAAXA,EAA4BH,EAAS,CAAC3H,MAAM,EAAMI,QAAS0H,IACjEA,EAAOC,SACPD,EAAOC,SAASC,KAAKzH,WAC1BoH,EAAS,CAAC3H,MAAM,EAAMI,QAAS0H,EAAOC,SAASC,KAAKzH,QADZoH,EAAS,CAAC3H,MAAM,EAAMI,QAAS0H,EAAOC,SAASE,aAD1DN,EAAS,CAAC3H,MAAM,EAAMI,QAAS0H,EAAO1H,YAGpE,K,+DCfM8H,GAAb,WACI,WAAoBtJ,EAAwDuJ,GAAiC,0BAAzFvJ,UAAwF,KAAhCuJ,SADhF,uCAII,SAAMH,GACFI,QAAQC,IAAI,qCAAsCL,GAClDM,KAAK1J,QAAQ,CACToJ,KAAMA,EACNO,OAAQ,IACRN,WAAY,KACZO,QAAS,GACTC,OAAQ,GACRC,QAAS,OAZrB,mBAgBI,SAAMX,GAAmD,IAAD,IACpDK,QAAQC,IAAI,yCACZC,KAAKH,OAAO,CACRJ,SAAU,CACNC,KAAM,GACNO,OAAM,iBAAER,QAAF,IAAEA,OAAF,EAAEA,EAAUQ,cAAZ,QAAsB,IAC5BN,WAAU,iBAAEF,QAAF,IAAEA,OAAF,EAAEA,EAAUE,kBAAZ,QAA0B,cACpCO,QAAS,GACTC,OAAQ,GACRC,QAAS,UAzBzB,KA+BaC,GAAb,WACI,WAAoBC,GAAqB,0BAArBA,WADxB,uCAII,SAAMZ,GACEa,KAAKC,SAAW,GAAKR,KAAKM,SAASG,GAAGf,GAAYM,KAAKM,SAASI,UAL5E,mBAQI,SAAMjB,GACFO,KAAKM,SAASI,MAAMjB,OAT5B,K,iBCnCO,SAASkB,KACZ,IAAIC,EAAKC,aAAaC,QAAQ,WAC9B,GAAU,MAANF,EAAY,CACZ,IAAMG,EAAQ,CACV,gBACA,qBACA,sBACA,4BAEJH,EAAKI,KAAKC,UAAU,CACZC,SAAU,CACN,WAAc,CACVC,KAAM,sBAGdvI,KAAM,CACF,gBAAiB,CACbhC,GAAI,QACJwK,MAAO,gBACPF,SAAU,oBACVvH,KAAM,WAEV,qBAAsB,CAClB/C,GAAI,QACJwK,MAAO,qBACPF,SAAU,aACVvH,KAAM,aAEV,sBAAuB,CACnB/C,GAAI,aACJwK,MAAO,sBACPF,SAAU,oBACVvH,KAAM,WAEV,2BAA4B,CACxB/C,GAAI,kBACJwK,MAAO,2BACPF,SAAU,aACVvH,KAAM,cAGd0H,SAAUtK,OAAOuK,OAAP,MAAAvK,OAAM,CAAQ,IAAR,oBAAegK,EAAM/K,KAAI,SAACuL,GAAD,uBACpCA,EAAI,CACD,CAAC5H,KAAM,WAAY,CAACA,KAAM,WAAY,CAACA,KAAM,UAAW,CAACA,KAAM,WAAY,CAACA,KAAM,iBAClF,CAACA,KAAM,YAAa,CAACA,KAAM,cAAe,CAACA,KAAM,aAAc,CAACA,KAAM,eACtE,CAACA,KAAM,QAAS,CAACA,KAAM,OAAQ,CAACA,KAAM,QACxC3D,KAAI,SAACuL,EAAGC,GAAJ,MAAW,CACb5K,GAAI4K,EAAEC,WACN9H,KAAM4H,EAAE5H,KACR+H,QAAQ,aAGhBC,YAAa5K,OAAOuK,OAAP,MAAAvK,OAAM,CAAQ,IAAR,oBAAegK,EAAM/K,KAAI,SAAC4C,GAAD,uBACvCA,EAAO,CACJ,aAAc,CACVgJ,WAAW,EACXlC,KAAM,IAEV,aAAc,CACVkC,WAAW,EACXlC,KAAM,IAEV,aAAc,CACVkC,WAAW,EACXlC,KAAM,IAEV,aAAc,CACVkC,WAAW,EACXlC,KAAM,YAKlBxG,KAAMnC,OAAOuK,OAAP,MAAAvK,OAAM,CAAQ,IAAR,oBAAegK,EAAM/K,KAAI,SAACuL,GAAD,uBAAUA,EAAI,UACnDM,MAAO,CACH,4BAA6B,gBAC7B,6BAA8B,qBAC9B,6BAA8B,sBAC9B,6BAA8B,8BAI1ChB,aAAaiB,QAAQ,UAAWlB,GAGpC,OAAOI,KAAKe,MAAMnB,GAOf,SAASoB,GAAWpB,GACvBC,aAAaiB,QAAQ,UAAWd,KAAKC,UAAUL,ICzFnD,SAASqB,GAAWC,EAAWC,GAC3B,IAAK,IAAIC,KAAOF,EACZ,GAAIC,EAAQD,EAAKE,IACb,OAAOA,EAGf,OAAO,KAKX,SAASC,GAAkBC,GAAwD,IAAnCC,EAAkC,uDAF7D,GAGjB,OAAOD,EACF/L,MAAK,SAAAoG,GAAK,OAAI,IAAItG,SAAW,SAAAC,GAAO,OAAIkM,YAAW,kBAAMlM,EAAQqG,KAAQ4F,SACzEE,OAAM,SAAAjD,GAAM,OAAI,IAAInJ,SAAW,SAACC,EAASuJ,GAAV,OAAqB2C,YAAW,kBAAM3C,EAAOL,KAAS+C,SAmL/EG,IC3KXC,GD2KWD,G,qFA/KX,SAAmCE,EAAazC,GA+E5C,OAAOkC,GA9ES,IAAIhM,SAAW,SAACC,EAASuJ,GACrC,IAAIrJ,EAAc,IAAIoJ,GAAgBtJ,EAASuJ,GAG/C,GADAC,QAAQC,IAAR,+CAAoD6C,GAAOzC,IACtDA,EAAQ,OAAO3J,EAAEkK,QACtB,IAAME,EAAKD,KAEX,GAAIiC,EAAIC,SAAS,gBAAiB,CAC9B,MAAsB1C,EAAO2C,OAAtBpM,EAAP,EAAOA,KAAM0K,EAAb,EAAaA,MACb,MAAa,SAAT1K,GAAmBkK,EAAGhI,KAAKwI,GAAiB5K,EAAEiK,GAAG,IAC9CjK,EAAEkK,QACN,GAAIkC,EAAIC,SAAS,UAAW,CAC/B,MAAqB1C,EAAO2C,OAArB1B,EAAP,EAAOA,MAAO2B,EAAd,EAAcA,IAEd,OAAY,MADCnC,EAAGhI,KAAKwI,IACO,WAAR2B,EAAyBvM,EAAEiK,GAAG,CAACf,KAAM,CAACmC,MAAOI,GAAWrB,EAAGiB,OAAO,SAACN,GAAD,OAAeA,IAAMH,QACpG5K,EAAEkK,QAEb,IAAKP,EAAOD,QAAS,OAAO1J,EAAEkK,QAC9B,IAAMmB,EAAQ1B,EAAOD,QAAQ8C,cACvBpK,EAAOgI,EAAGiB,MAAMA,GACtB,GAAY,MAARjJ,EAAc,OAAOpC,EAAEkK,QAG3B,GAFIE,EAAGhI,KAAKA,GAAMhC,GAAGqM,WAAW,YAAWzM,EAAI,IAAI6J,GAAe7J,IAE9DoM,EAAIC,SAAS,WD2CzBhC,aAAaqC,WAAW,WCzCZ1M,EAAEiK,GAAG,SACF,GAAImC,EAAIC,SAAS,SACpBrM,EAAEiK,GAAG,CAACf,KAAMkB,EAAGhI,KAAKA,UACjB,GAAIgK,EAAIC,SAAS,cACpBrM,EAAEiK,GAAG,CAACf,KAAMkB,EAAGS,SAASzI,UACrB,GAAIgK,EAAIC,SAAS,gBACpBrM,EAAEiK,GAAG,CACDf,KAAM3I,OAAOD,KAAK8J,EAAGe,YAAY/I,IAAO5C,KAAI,SAAAmN,GAAI,MAAK,CAC7CvB,UAAWhB,EAAGe,YAAY/I,GAAMuK,GAAMvB,UACtCuB,KAAMA,aAIf,GAAIP,EAAIQ,SAAS,iBAAkB,CACtC,IAAMD,EAAOP,EAAIS,UAAUT,EAAIU,YAAY,KAAO,GAC5CC,EAAa3C,EAAGe,YAAY/I,GAAMuK,GAExC,GADArD,QAAQC,IAAIa,EAAGe,YAAY/I,KACtB2K,EAAY,OAAO/M,EAAEkK,MAAM,CAACT,OAAQ,IAAKN,WAAY,cAC1DnJ,EAAEiK,GAAG,CAACf,KAAM6D,SACT,GAAIX,EAAIQ,SAAS,sBACpB5M,EAAEiK,GAAG,CAACf,KAAM,CAAC,EAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAG,EAAG,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,GAAK,EAAG,UACrH,GAAIkD,EAAIQ,SAAS,gBAAiB,CACrC,IAAMI,EAAQZ,EAAIS,UAAUT,EAAIU,YAAY,KAAO,GAC7CpK,EAAO0H,EAAG1H,KAAKN,GAAM4K,GAC3B,IAAKtK,EAAM,OAAO1C,EAAEkK,MAAM,CAACT,OAAQ,MACnCzJ,EAAEiK,GAAG,CAACf,KAAMxG,SACL0J,EAAIC,SAAS,UACpBrM,EAAEiK,GAAwB,CACtBf,KAAM,CACF+D,gBAAgB,EAChBC,sBAAsB,EACtBC,YAAY,EACZC,eAAe,KAGhBhB,EAAIQ,SAAS,cACpB5M,EAAEiK,GAA4B,CAC1Bf,KAAM,CACFmE,WAAY,CACRC,KAAM,EACNC,OAAQ,KAEZC,cAAe,CACXC,KAAM,IACNC,IAAK,IACLC,IAAK,OAKjB3N,EAAEkK,c,kBAMd,SAAoCkC,EAAalD,EAAYS,GACzD,IAAMmC,EAAU,IAAIjM,SAAW,SAACC,EAASuJ,GACrC,IAAIrJ,EAAc,IAAIoJ,GAAgBtJ,EAASuJ,GAG/C,GADAC,QAAQC,IAAR,gDAAqD6C,GAAOzC,IACvDA,EAAQ,OAAO3J,EAAEkK,QACtB,IAAME,EAAKD,KAEX,GAAIiC,EAAIC,SAAS,aAEb,OADA/C,QAAQC,IAAI,6BAA8BL,GACnClJ,EAAEiK,GAAG,IAGhB,IAAKN,EAAOD,QAAS,OAAO1J,EAAEkK,QAC9B,IAAMmB,EAAQ1B,EAAOD,QAAQ8C,cACvBpK,EAAOgI,EAAGiB,MAAMA,GACtB,GAAY,MAARjJ,EAAc,OAAOpC,EAAEkK,QAE3B,GADIE,EAAGhI,KAAKA,GAAMhC,GAAGqM,WAAW,YAAWzM,EAAI,IAAI6J,GAAe7J,IAC9DoM,EAAIC,SAAS,iBACbrM,EAAEiK,GAAG,SACF,GAAImC,EAAIK,WAAW,eAAgB,CACtC,IAAME,GAAO,IAAIiB,MAAOC,cAAcC,MAAM,EAAG,IAC/C1D,EAAG1H,KAAKN,GAAMuK,GAAQzD,EAAKA,KAC3BsC,GAAWpB,GAEXpK,EAAEiK,GAAG,IAETjK,EAAEkK,WAEN,OAAIkC,EAAIC,SAAS,iBAAyBR,GAAeC,EAAS,KAC3DD,GAAeC,K,iBAG1B,SAAmCM,EAAalD,EAAYS,GAwBxD,OAAOkC,GAvBS,IAAIhM,SAAW,SAACC,EAASuJ,GACrC,IAAIrJ,EAAc,IAAIoJ,GAAgBtJ,EAASuJ,GAE/C,GADAC,QAAQC,IAAR,+CAAoD6C,GAAO,UAAWzC,EAAQ,QAAST,KACnF,OAACS,QAAD,IAACA,OAAD,EAACA,EAAQD,SAAS,OAAO1J,EAAEkK,QAC/B,IAAME,EAAKD,KACLkB,EAAQ1B,EAAOD,QAAQ8C,cACvBpK,EAAOgI,EAAGiB,MAAMA,GACtB,GAAY,MAARjJ,EAAc,OAAOpC,EAAEkK,QAI3B,GAHIE,EAAGhI,KAAKA,GAAMhC,GAAGqM,WAAW,YAAWzM,EAAI,IAAI6J,GAAe7J,IAGxD,MADCoM,EAAI2B,MAAM,KAAKC,MACV,OAAOhO,EAAEkK,QAEzB,GAAIkC,EAAIK,WAAW,gBAAiB,CAChC,IAAME,EAAOP,EAAIS,UAAUT,EAAIU,YAAY,KAAO,GAClD1C,EAAGe,YAAY/I,GAAMuK,GAAQ,CAACvB,WAAW,EAAMlC,KAAMA,EAAKA,MAC1DsC,GAAWpB,GAEXpK,EAAEiK,GAAG,SAELjK,EAAEkK,c,mBAMd,SAAqCkC,EAAalD,EAAYS,GAwB1D,OAAOkC,GAvBS,IAAIhM,SAAW,SAACC,EAASuJ,GACrC,IAAIrJ,EAAc,IAAIoJ,GAAgBtJ,EAASuJ,GAE/C,GADAC,QAAQC,IAAR,iDAAsD6C,GAAO,UAAWzC,EAAQ,QAAST,KACrF,OAACS,QAAD,IAACA,OAAD,EAACA,EAAQD,SAAS,OAAO1J,EAAEkK,QAC/B,IAAME,EAAKD,KACLkB,EAAQ1B,EAAOD,QAAQ8C,cACvBpK,EAAOgI,EAAGiB,MAAMA,GACtB,GAAY,MAARjJ,EAAc,OAAOpC,EAAEkK,QACvBE,EAAGhI,KAAKA,GAAMhC,GAAGqM,WAAW,YAAWzM,EAAI,IAAI6J,GAAe7J,IAElE,IAAMI,EAAKgM,EAAI2B,MAAM,KAAKC,MAC1B,GAAU,MAAN5N,EAAY,OAAOJ,EAAEkK,QAEzB,GAAIkC,EAAIK,WAAW,cAAe,CAC9B,IAAOvB,EAAUhC,EAAKA,KAAfgC,QAavB,SAA6B+C,EAAiBC,EAAuCC,GACjF,IAAMC,EAAgBH,EAAMI,UAAUH,GACtCD,EAAMG,GAAN,2BAA2BH,EAAMG,IAAmBD,GAdxCG,CAAgClE,EAAGS,SAASzI,IAAO,SAAAmM,GAAC,OAAIA,EAAEnO,GAAG6K,aAAe7K,EAAG6K,aAAY,CAACC,OAAQA,IACpGM,GAAWpB,GAEXpK,EAAEiK,GAAG,SAELjK,EAAEkK,gB,KChLLsE,KAAMC,OAAO,CAACC,QAASC,uCAMvBH,KAAMC,OAAO,CAACC,QAASC,uCAehCxC,GAVU,CACVyC,QAAS,IAAI1C,GACb/I,KAAM,QACN0L,eAAgB,WAYpB,IAGelF,GAHH,eACLwC,I,8GCvBA,SAAS2C,GAAgBnO,GAA8B,IAAD,EAClDkB,EAAmClB,EAAnCkB,GAAIF,EAA+BhB,EAA/BgB,KAAMF,EAAyBd,EAAzBc,MAAOC,EAAkBf,EAAlBe,SAAUqN,EAAQpO,EAARoO,KAClC,OACI,eAACC,GAAA,EAAD,CAAMzL,GAAI,CAAC0L,YAAaF,OAAOG,EAAY,eAAgBhK,QAAS,OAAQiK,cAAe,OAA3F,UACI,cAACC,GAAA,EAAD,CAAgB9L,UAAWgB,IAAYzC,GAAIA,EAA3C,SACI,eAACwB,EAAA,EAAD,CAAKE,GAAI,CAAC2B,QAAS,OAAQN,SAAU,GAArC,UACI,cAACyK,GAAA,EAAD,CAAW9L,GAAI,CACX+L,gBAAiBP,EAAO,iBAAmB,eAC3C7J,QAAS,OACTqK,WAAY,SACZC,QAAS,OAJb,SAMI,cAAChL,EAAA,EAAD,CAASlB,UAAW3B,EAAM4B,GAAI,CAACsC,MAAO,wBAE1C,eAAC4J,GAAA,EAAD,WACI,cAAC7J,EAAA,EAAD,CAAYvE,QAAQ,KAApB,SAA0BI,IAC1B,cAACmE,EAAA,EAAD,CAAYC,MAAM,gBAAgB6J,QAAM,EAAxC,SAA0ChO,YAIrDf,EAAMgP,aACP,cAAC5H,GAAA,EAAD,CAAYzE,UAAWgB,IAAYzC,GAAIlB,EAAMgP,YAAaxH,KAAK,QAAQ5E,GAAI,CAACqM,UAAW,SAAUC,EAAG,GAApG,SACI,cAACrL,EAAA,EAAD,CAASlB,UAAS,UAAE3C,EAAMmP,qBAAR,QAAyBC,YCjCpD,SAASC,KACZ,MAA0B9J,oBAAS,GAAnC,mBAAO0C,EAAP,KAAcC,EAAd,KACA,MAAO,CAAC,CAAC3H,KAAM0H,EAAOzH,QAAS,kBAAM0H,GAAS,KAASE,uBAAY,kBAAMF,GAAS,KAAO,KAkCtF,SAASoH,GAAWtP,GACvB,OACI,eAACiH,GAAD,CAAkBnG,MAAOd,EAAMc,MAAOP,KAAMP,EAAMO,KAAMC,QAASR,EAAMQ,QAAvE,UACI,cAACmH,GAAA,EAAD,UAAgB3H,EAAMuP,UACtB,cAAC1H,GAAA,EAAD,UACI,cAACC,GAAA,EAAD,CAAQR,QAAStH,EAAMQ,QAAvB,qB,wBCnChB,SAASgP,GAAcxP,GACnB,OAAO,cAACyP,GAAA,EAAD,CAAOC,WAAY1P,EAAM2P,kBAAmBjP,QAAQ,MAAMwE,MAAM,OAAhE,SAAwElF,EAAMgB,OAGzF,SAAS4O,GAAgB5P,GACrB,OACI,cAAC6P,GAAA,EAAD,CAAS/O,MAAOd,EAAM8P,YAAtB,SACI,cAAC1I,GAAA,EAAD,CACIlC,MAAM,UACNoC,QAAStH,EAAMsH,QACfE,KAAK,QACLnD,SAAU,cAACmL,GAAD,eAAmBxP,QAM7C,SAAS+P,GAAgB/P,GACrB,OACI,cAAC8H,GAAA,EAAD,CAAQkI,UAAW,cAACR,GAAD,eAAmBxP,IAC9BkF,MAAM,UACNoC,QAAStH,EAAMsH,QACfjD,SAAUrE,EAAM8P,cAYjBG,OAPf,SAA8BjQ,GAC1B,IAAM0F,EAAQC,eAEd,OADmBE,aAAcH,EAAMI,YAAYC,KAAK,OACjC,cAAC6J,GAAD,eAAqB5P,IACrC,cAAC+P,GAAD,eAAqB/P,KCtBjBkQ,OAff,SAAsBlQ,GAClB,IAAON,EAAK2C,cAAL3C,EACP,OACI,cAACyQ,GAAA,EAAD,CAAWC,SAAS,KAApB,SACI,eAAClK,GAAA,EAAD,CAAOxF,QAAQ,WAAW2P,QAAM,EAACzN,GAAI,CAAC0N,EAAG,EAAGC,GAAI,EAAGhM,QAAS,OAAQiK,cAAe,UAAnF,UACI,cAACvJ,EAAA,EAAD,UAAavF,EAAE,wBACf,cAACoI,GAAA,EAAD,CACIlF,GAAI,CAAC2N,GAAI,EAAGtB,UAAW,YACvB3H,QAAStH,EAAMwQ,MACfnM,SAAU3E,EAAE,iBCTjB,SAAS+Q,GAA2BC,EAAoBC,GACnE,IAAMlP,EAAOa,qBAAWC,IAClBqO,EAAa,SAACrI,GAAD,yBAAC,eAA0BA,GAA3B,IAAiCyD,KAAM,IAAIiB,KAAQxL,KAAI,iBAAEA,QAAF,IAAEA,OAAF,EAAEA,EAAMhC,UAAR,QAAc,aAExF,EAA6CoR,sBAAeD,EAAWF,GADjD,SAACC,GAAD,mBAAC,eAAuCA,GAAxC,IAAiDG,iBAAiB,IACFC,CAAcJ,IAA7FK,EAAP,EAAOA,MAAOC,EAAd,EAAcA,WACd,MAAO,CAACD,MAAOA,EAAOC,WAAY,SAAC1I,GAAD,OAAU0I,EAAWL,EAAWrI,KAAQ2I,gBAD1E,EAA0BA,iBCyEfC,OAlEf,SAAiBnR,GACb,IAAOgR,EAASP,GAAmB,CAACW,KAAM,YAAnCJ,MACP,EAA8B3B,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAA8B/L,qBAA9B,mBAAOgM,EAAP,KAAgBC,EAAhB,KACA,EAAgCjM,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACOhS,EAAK2C,cAAL3C,EACP,EAA0BsI,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACOC,EAA6B5R,EAA7B4R,eAAgBC,EAAa7R,EAAb6R,UACjBC,GAAUL,IAAaF,EAEvBQ,EAAc3J,uBAAY,WAC5BsJ,GAAY,GACZE,EAAeI,iBACV5S,KAAKoS,EAAYG,GACjBrG,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMP,GAAY,QAChC,CAACE,EAAgBD,IAEpBO,oBAAUH,EAAa,CAACA,IAExBG,qBAAU,WACNL,EAAU,CACN/Q,MAAOpB,EAAE,sBACT2E,SAAU,kBAAM,cAAC,GAAD,CACZyL,YAAapQ,EAAE,QACfsB,KAAM,cAACoO,GAAA,EAAD,IACN9H,QAASgK,SAGlB,CAAC5R,EAAGmS,EAAWP,IAElB,IAAMa,EAAc,WAChB,IAAMC,EAAW1S,EAAE,eAAgB,CAAC2S,eAAe,IACnD,OAAO,mCAAGD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,UAG1E,OACI,eAACtB,EAAD,WACKS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/BR,GACD,cAACpB,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAAC4P,GAAI,GAAlC,SACI,cAACC,GAAA,EAAD,CAAOC,QAAS,EAAhB,SACKnB,EAAQ1S,KAAI,SAAA8T,GACL,IAAMC,EAAahI,aAAM+H,EAAM3G,KAAM,aAAc,IAAIiB,MACjDmB,EAAOuE,EAAMlI,UACnB,OAAO,cAAC0D,GAAD,CACHjN,GAAE,6BAAwByR,EAAM3G,MAChChL,KAAMoN,EAAOyE,KAAsBC,KACnChS,MAAOpB,EAAE,qBAAsB,CAACsM,KAAM4G,IACtC7R,SAAUrB,EAASA,EAAP0O,EAAS,uBAA4B,yBACjDA,KAAMA,EACNY,YAAcZ,GAAI,yBAAsBuE,EAAM3G,YAAWuC,EACzDY,cAAgBf,GAAQ2E,WAAqBxE,WAOjE,cAACe,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC4C,EAAD,KAAoBd,IAC3D,cAACtR,EAAD,eAAmBwJ,Q,4GCxDzByJ,GAAmB,SAACC,EAAcC,GAAf,OAAgCD,EAAEE,WAAaD,EAAEC,UAAYF,EAAEG,gBAAkBF,EAAEE,eAC/FC,GAAOlR,IAAMC,MAAK,SAAUpC,GACrC,IAAOoT,EAAyFpT,EAAzFoT,cAAeD,EAA0EnT,EAA1EmT,SAAUG,EAAgEtT,EAAhEsT,aAAcC,EAAkDvT,EAAlDuT,YAAaC,EAAqCxT,EAArCwT,cAAeC,EAAsBzT,EAAtByT,mBACpEC,EAAQC,mBACRrF,EAXU,WAChB,IAAMsF,EAAetR,qBAAWuR,IAC1BC,EAAkBjO,aAAc,gCACtC,OAAK+N,EAAaG,KACW,SAAtBH,EAAaG,KADWD,EAQXE,GAAgB,WAAa,WAajD,GAXA9B,qBAAU,WACN,IAAM+B,EAAKP,EAAMQ,QACjB,GAAKD,EAGL,OAFAA,EAAGE,iBAAiB,aAAcb,EAAc,CAACc,SAAS,IAC1DH,EAAGE,iBAAiB,YAAaZ,EAAa,CAACa,SAAS,IACjD,WACHH,EAAGI,oBAAoB,aAAcf,GACrCW,EAAGI,oBAAoB,YAAad,MAEzC,CAACA,EAAaD,EAAcI,IAE3BN,EACA,OAAO,cAACkB,GAAA,EAAD,CACHC,IAAKb,EACL9Q,GAAI,CACA4R,OAAQ,EACRlG,YAAaA,EACbK,gBAAe,OAAE8E,QAAF,IAAEA,IAAsB,gBAE3CgB,YAAanB,EACboB,YAAanB,IAGrB,GAAiB,IAAbJ,EACA,OAAO,cAACmB,GAAA,EAAD,CACHC,IAAKb,EACL9Q,GAAI,CACA4R,OAAQ,EACRlG,YAAaA,GAEjBmG,YAAanB,EACboB,YAAanB,IAGrB,GAAiB,IAAbJ,EACA,OAAO,cAACmB,GAAA,EAAD,CACHC,IAAKb,EACL9Q,GAAI,CACA4R,OAAQ,EACRlG,YAAaA,EACbK,gBAAe,OAAE6E,QAAF,IAAEA,IAAiB,kBAEtCiB,YAAanB,EACboB,YAAanB,IAGrB,IAAMoB,EAAU,IAAM,GAAKxB,EAC3B,OACI,cAACmB,GAAA,EAAD,CACIC,IAAKb,EACL9Q,GAAI,CACA4R,OAAQ,EACRlG,YAAaA,EACbsG,gBAAgB,+BAAD,OAAiCD,EAAjC,qBAA8CnB,QAA9C,IAA8CA,IAAiB,UAA/D,YAA4EmB,EAA5E,QAEnBF,YAAanB,EACboB,YAAanB,MAGtBP,ICrFI,SAAS6B,GAAoBxV,GAA0C,IAAD,MACrEyV,EAIJ,GAAIzV,EAAE0V,QAAS,CACX,IAAMC,EAAQ3V,EAAE0V,QAAQ,GACxBD,EAASG,SAASC,iBAAiBF,EAAMG,QAASH,EAAMI,cAGxD,IADAN,EAASzV,EAAEyV,OACe,OAAnBA,EAAOO,SAAkBP,EAASA,EAAOQ,WAEpD,MAAO,CACHC,KAAW,QAAN,EAAAT,SAAA,mBAAQQ,kBAAR,eAAoBE,UAAW,EACpCC,QAAc,QAAN,EAAAX,SAAA,eAAQY,WAAY,GAI7B,IAAMC,GAAS,SAAC1C,EAAWC,GAAZ,MAA0B,CAAC9J,KAAKwM,IAAI3C,EAAGC,GAAI9J,KAAKyM,IAAI5C,EAAGC,KAChE4C,GAAe,SAACzW,GAAD,OAAyB,IAAbA,EAAEqE,QAA2B,cAAXrE,EAAEmD,MC0H7CuT,G,oDA7GX,WAAY/V,GAAe,IAAD,+BACtB,cAAMA,IA8CVgW,qBAAuB,SAAC3W,GACpB,IAAI,EAAKW,MAAMiW,YACY,EAAKhO,MAAzBiO,kBACkBJ,GAAazW,IAAtC,CAEAA,EAAE8W,iBACF,MAAsBtB,GAAoBxV,GAAnCkW,EAAP,EAAOA,IAAKE,EAAZ,EAAYA,YACAlH,IAARgH,QAAgChH,IAAXkH,GACzB,EAAKvN,SAAS,CACVgO,kBAAkB,EAClBE,SAAUb,EACVc,YAAaZ,EACba,OAAQf,EACRgB,UAAWd,EACXe,SAAU,EAAKxW,MAAMyW,KAAKlB,GAAKmB,WAAWjB,OA7DxB,EAiE1BkB,oBAAsB,SAACtX,GACnB,MAA8C,EAAK4I,MAA5CiO,EAAP,EAAOA,iBAAkBI,EAAzB,EAAyBA,OAAQC,EAAjC,EAAiCA,UACjC,GAAKL,EAAL,CAEA7W,EAAE8W,iBACF,MAAsBtB,GAAoBxV,GAAnCkW,EAAP,EAAOA,IAAKE,EAAZ,EAAYA,YACAlH,IAARgH,QAAgChH,IAAXkH,IACrBa,IAAWf,GAAOgB,IAAcd,GAChC,EAAKvN,SAAS,CAACoO,OAAQf,EAAKgB,UAAWd,OAzErB,EA6E1BmB,qBAAuB,SAACvX,GACpB,MAA8E,EAAK4I,MAA5EiO,EAAP,EAAOA,iBAAkBE,EAAzB,EAAyBA,SAAUE,EAAnC,EAAmCA,OAAQD,EAA3C,EAA2CA,YAAaE,EAAxD,EAAwDA,UAAWC,EAAnE,EAAmEA,QACnE,GAAKN,GAAqBJ,GAAazW,GAAvC,CAEA,IAAMmG,EAAQ,EAAKxF,MAAMyW,KAAK5X,KAAI,SAACgY,GAAD,OAAOjX,OAAOuK,OAAO,GAAI0M,EAAEH,eAC7D,EAAyBf,GAAOS,EAAUE,GAA1C,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA+BpB,GAAOU,EAAaE,GAAnD,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,GAAIH,IAAWC,GAAUC,IAAcC,EACnCzR,EAAMsR,GAAQG,IAAczR,EAAMsR,GAAQG,GAAa,GAAK,OAE5D,IAAK,IAAI1B,EAAMuB,EAAQvB,GAAOwB,EAAQxB,IAClC,IAAK,IAAIE,EAASuB,EAAWvB,GAAUwB,EAAWxB,IAC9CjQ,EAAM+P,GAAKE,GAAUe,EAAU,EAAI,EAK/C,EAAKtO,SAAS,CAACgO,kBAAkB,IACjC,EAAKlW,MAAMyG,SAASjB,KA/FE,EAkG1B0R,oBAAsB,SAAC3B,EAAaE,GAChC,MAAqE,EAAKxN,MAAnEiO,EAAP,EAAOA,iBAAkBE,EAAzB,EAAyBA,SAAUE,EAAnC,EAAmCA,OAAQD,EAA3C,EAA2CA,YAAaE,EAAxD,EAAwDA,UAExD,IAAKL,EAAkB,OAAO,EAC9B,MAAyBP,GAAOS,EAAUE,GAA1C,mBAAOQ,EAAP,KAAeC,EAAf,KACA,EAA+BpB,GAAOU,EAAaE,GAAnD,mBAAOS,EAAP,KAAkBC,EAAlB,KACA,OAAO1B,GAAOuB,GAAUvB,GAAOwB,GAAUtB,GAAUuB,GAAavB,GAAUwB,GAtG1E,EAAKhP,MAAQ,CACTiO,kBAAkB,EAClBE,SAAU,EACVC,YAAa,EACbC,OAAQ,EACRC,UAAW,EACXC,SAAS,GARS,E,sDAY1B,WACIW,OAAOhD,iBAAiB,UAAWtL,KAAK+N,sBACxCO,OAAOhD,iBAAiB,WAAYtL,KAAK+N,wB,kCAG7C,WACIO,OAAO9C,oBAAoB,UAAWxL,KAAK+N,sBAC3CO,OAAO9C,oBAAoB,WAAYxL,KAAK+N,wB,oBAGhD,WAAU,IAAD,OACEH,EAAQ5N,KAAK7I,MAAbyW,KACP,OAAO,mCACFA,EAAK5X,KAAI,SAAC0W,EAAKlL,GAAN,OACN,eAAC+M,GAAA,EAAD,WACI,cAAC9C,GAAA,EAAD,CAAWjQ,SAAUkR,EAAI8B,OAAQzU,GAAI,CACjCuD,SAAU,SACVmR,KAAM,EACN3I,gBAAiB,mBACjB6F,OAAQ,KAEXe,EAAImB,WAAW7X,KAAI,SAACsU,EAAUoE,GAAX,OAChB,cAAClE,GAAD,CACID,cAAe,EAAK8D,oBAAoB7M,EAAGkN,GAC3CpE,SAAUA,EACVG,aAAc,EAAK0C,qBACnBzC,YAAa,EAAKoD,oBAClBnD,cAAe+B,EAAI/B,cACnBC,mBAAoB8B,EAAI9B,oC,GAzCnBtR,IAAMqV,W,sCC5BxB,SAASC,GAAcC,GAClC,IAAMC,EAASC,0BAAeF,GAAQ,GAAMG,KAAO,KAAOC,KAAM,MAC1DC,EAASH,0BAAeF,GAAQ,GAAMM,KAAI,KAAOH,KAAO,MAC9DH,EAAO,GAAKA,GAAQ,GAAMA,EAAO,GAAMA,GACvC,MAAkBC,EAAOM,OAAOpZ,KAAI,SAAC2G,EAAO6G,GAAR,OAAkBjD,KAAK8O,MAAM1S,GAASuS,EAAOE,OAAO5L,GAAS7G,GAASkS,MAA1G,mBAAOb,EAAP,KAAUsB,EAAV,KAAajF,EAAb,KACA,MAAM,OAAN,OAAc2D,EAAd,aAAoBsB,EAApB,aAA0BjF,EAA1B,K,iPCcEkF,GAA2C,CAC7CC,QAAS,CACLrX,KAAM,cAAC,KAAD,IACNsX,KAAM,wBACNpT,MAAOqT,KAAKC,KACZC,SAAUF,KAAKG,MAEnBC,QAAS,CACL3X,KAAM,cAAC,KAAD,IACNsX,KAAM,wBACNpT,MAAO0T,KAAKJ,KACZC,SAAUG,KAAKF,MAEnBG,OAAQ,CACJ7X,KAAM,cAAC,KAAD,IACNsX,KAAM,uBACNpT,MAAO4T,KAAON,KACdC,SAAUK,KAAOJ,MAErBK,QAAS,CACL/X,KAAM,cAAC,KAAD,IACNsX,KAAM,wBACNpT,MAAOqT,KAAKC,KACZC,SAAUF,KAAKG,MAEnBM,cAAe,CACXhY,KAAM,cAAC,KAAD,IACNsX,KAAM,8BACNpT,MAAO+T,KAAKT,KACZC,SAAUQ,KAAKP,MAEnBQ,SAAU,CACNlY,KAAM,cAAC,KAAD,IACNsX,KAAM,yBACNpT,MAAO4S,KAAMU,KACbC,SAAUX,KAAMY,MAEpBS,WAAY,CACRnY,KAAM,cAAC,KAAD,IACNsX,KAAM,2BACNpT,MAAO8S,KAAIQ,KACXC,SAAUT,KAAIU,MAElBU,UAAW,CACPpY,KAAM,cAAC,KAAD,IACNsX,KAAM,0BACNpT,MAAOqT,KAAKC,KACZC,SAAUF,KAAKG,MAEnBW,YAAa,CACTrY,KAAM,cAAC,IAAD,IACNsX,KAAM,4BACNpT,MAAO0T,KAAKJ,KACZC,SAAUG,KAAKF,MAEnB5L,KAAM,CACF9L,KAAM,cAAC,KAAD,IACNsX,KAAM,qBACNpT,MAAO8S,KAAIQ,KACXC,SAAUT,KAAIU,MAElB3L,IAAK,CACD/L,KAAM,cAAC,KAAD,IACNsX,KAAM,oBACNpT,MAAOoU,KAAMd,KACbC,SAAUa,KAAMZ,MAEpB1L,IAAK,CACDhM,KAAM,cAAC,KAAD,IACNsX,KAAM,oBACNpT,MAAO4S,KAAMU,KACbC,SAAUX,KAAMY,MAEpBa,QAAS,CACLvY,KAAM,cAAC,KAAD,IACNsX,KAAM,wBACNpT,MAAO4T,KAAON,KACdC,SAAUK,KAAOJ,OAIZc,GAAiB,SAAChX,GAAD,OAA4BA,KAAQ4V,GAAYA,GAAU5V,GAAQ4V,GAAUmB,SCvG3F,SAASE,GAAatO,EAAqBuO,GACtD,OAAO,IAAIxa,SAAW,SAACC,EAASuJ,GAC5ByC,EACK/L,KAAKD,GACLmM,OAAM,SAACjD,GAA+C,IAAD,EAClB,OAA5B,UAAAA,EAAOC,gBAAP,eAAiBQ,QACjB3J,EAAQua,KAERhR,EAAOL,SCsB3B,IACMsR,GAAQC,MAAMC,KAAKD,MAAM,IAAIja,QAAQd,KAAI,SAAAuL,GAAC,OAD7B,SAACA,GAAD,OAAeA,EAAI,GAAK,IAAMA,EAAI,GAAKA,EACN0P,CAAW1P,MAEzD2P,GAAQ,IAAI9M,KACZjB,GAAO,IAAIiB,KACjBjB,GAAKgO,QAAQD,GAAME,UAAY,GAC/B,IAAMC,GAAUlO,GAAKkB,cAAcC,MAAM,EAAG,IAqI7BgN,OA5Hf,SAAkBna,GACd,IAAOgR,EAASP,GAAmB,CAACW,KAAM,aAAnCJ,MACP,EAAwBzL,qBAAxB,mBAAOkR,EAAP,KAAa2D,EAAb,KACA,EAA8C7U,qBAA9C,mBAAO8U,EAAP,KAAwBC,EAAxB,KACA,EAAgC/U,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACA,EAAgCnM,oBAAS,GAAzC,mBAAOgV,EAAP,KAAiBC,EAAjB,KACA,EAA0BxS,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACA,EAA8B3J,KAA9B,mBAAOyS,EAAP,KAAgBC,EAAhB,KACOhb,EAAK2C,cAAL3C,EACP,EAA8B2P,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACOO,EAA6B7R,EAA7B6R,UAAWD,EAAkB5R,EAAlB4R,eACZE,GAAUL,IAAagF,EAEvB1E,EAAc3J,uBAAY,WAC5BsJ,GAAY,GACZxS,QAAQyb,IAAI,CACR/I,EAAegJ,eACfnB,GAAU7H,EAAeiJ,cAAcX,KAAU,iBAAO,CAACzP,WAAW,EAAOlC,KAAM,OACjFqJ,EAAekJ,mBAAmBZ,MACnC9a,MAAK,YAAuC,IAAD,qBAApCgZ,EAAoC,KAAzB5N,EAAyB,KAAZuQ,EAAY,KACpCrE,EAAa0B,EACd4C,QAAO,SAACpN,GAAD,OAAOA,EAAErD,UAChB1L,KAAI,SAAC+O,GAAO,IAAD,IACR,EAAsC4L,GAAe5L,EAAEpL,MAAhD0C,EAAP,EAAOA,MAAOuT,EAAd,EAAcA,SAAUH,EAAxB,EAAwBA,KAAMtX,EAA9B,EAA8BA,KAC9B,MAAO,CACHqW,OACI,cAACxH,GAAA,EAAD,CAAS/O,MAAO,mCAAGpB,EAAE4Y,KAAW2C,gBAAiB,EAAjD,SACI,cAACC,GAAA,EAAD,CACIxa,QAAQ,UACRkC,GAAI,CAACG,MAAO,GAAIoY,OAAQ,GAAIxM,gBAAiBzJ,GAC7Cb,SAAUrD,MAItBoa,WAAYxN,EAAEnO,GACdiX,WAAU,oBAAElM,EAAYjC,KAAK8S,MAAK,SAAC/K,GAAD,OAAOA,EAAE8K,aAAexN,EAAEnO,aAAlD,aAAE,EAAqD8I,YAAvD,QAA+DoR,GAAM9a,KAAI,kBAAM,KACzF2U,cAAetO,EACfuO,mBAAoBgF,MAGhC6B,EAAkB,iBAACS,QAAD,IAACA,OAAD,EAACA,EAAQlc,IAAI4Y,WAAb,QAA+B,IACjD2C,EAAQ1D,GACR8D,GAAY,KACb7I,GACErG,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMP,GAAY,QAChC,CAAChS,EAAGkS,EAAgBD,IAEvBO,oBAAUH,EAAa,CAACA,IAExB,IAAMuJ,EAAelT,uBAAY,SAACmT,GAC9BnB,GAAQ,SAAAjS,GAAS,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWtJ,KAAI,SAAC0W,EAAKlL,GAAN,mBAAC,eAAgBkL,GAAjB,IAAsBmB,WAAY6E,EAAMlR,WAC5EmQ,GAAY,KACb,IAEGgB,EAAapT,uBAAY,WACtBqO,GACLA,GAAQ7E,EAAe6J,cAAcvB,GAASzD,EAAK5X,KAAI,SAACgY,GAAD,MAAQ,CAACuE,WAAYvE,EAAEuE,WAAY7S,KAAMsO,EAAEH,gBAC7FtX,MAAK,WACFsb,EAAWhb,EAAE,kBACb8a,GAAY,KACb7I,GACFrG,MAAM3C,QAAQC,OACpB,CAAC6N,EAAM7E,EAAgBD,EAAU+I,EAAYhb,IAEhDwS,qBAAU,WACNL,EAAU,CACN/Q,MAAOpB,EAAE,2BAA4B,CAACsM,KAAMA,KAC5C3H,SAAU,kBAAM,qCACZ,cAAC,GAAD,CAAsByL,YAAapQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBsG,QAASgK,IAC9E,cAAC,GAAD,CAAsB3B,kBAAmB4K,EACnBzK,YAAapQ,EAAE,QACfsB,KAAM,cAAC6R,GAAA,EAAD,IACNvL,QAASkU,YAGxC,CAAC9b,EAAGmS,EAAW2J,EAAYlK,EAAUiJ,IAExC,IAAMpI,EAAc,WAChB,IAAMC,EAAW1S,EAAE,gBAAiB,CAAC2S,eAAe,IAC9CqJ,EAAgBhc,EAAE,gBAAiB,CAAC2S,eAAe,IACzD,OAAO,qCACFD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,OAC5DoJ,EAAc7c,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmBvD,SAAUiO,WAIhE,OACI,eAACtB,EAAD,WACKS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/B0E,GACD,cAACtG,GAAA,EAAD,CAAWwL,gBAAc,EAACvL,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,EAAGrX,QAAS,QAArE,SACI,cAACsX,GAAA,EAAD,CACIjZ,GAAI,CAACyD,SAAU,OAAQyV,UAAW,CAACC,GAAI,sBAAuBjZ,GAAI,uBADtE,SAEI,eAACkZ,GAAA,EAAD,CAAOC,cAAY,EAACzU,KAAK,QAAQ5E,GAAI,CAACsZ,WAAY,OAAQC,eAAgB,YAA1E,UACI,eAACC,GAAA,EAAD,WACI,eAAChF,GAAA,EAAD,WACI,cAAC9C,GAAA,EAAD,CAAW5T,QAAQ,OAAOkC,GAAI,CAAC4R,OAAQ,KACtCmF,GAAM9a,KAAI,SAAC2G,GAAD,OACP,eAAC8O,GAAA,EAAD,CAAW+H,MAAM,SAASzZ,GAAI,CAAC4R,OAAQ,GAAvC,UAA4C8H,OAAO9W,GAAnD,wBAEP6U,GACD,eAACjD,GAAA,EAAD,WACI,cAAC9C,GAAA,EAAD,CAAW1R,GAAI,CAAC4R,OAAQ,KACvB6F,EAAgBxb,KAAI,SAACuL,GAAD,OACjB,cAACkK,GAAA,EAAD,CAAW1R,GAAI,CAAC4R,OAAQ,EAAG7F,gBAAiBvE,EAAGmS,IAAK,mBAIhE,cAACC,GAAA,EAAD,UACI,cAAC,GAAD,CAAoB/F,KAAMA,EAAMhQ,SAAU6U,aAM1D,cAAC,KAAD,CAAQmB,KAAMlC,EAAU5Z,QAASjB,EAAE,qBACnC,cAAC4P,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC4C,EAAD,KAAoBd,IAC3D,cAACtR,EAAD,2BAAmB0a,GAAnB,IAA4Bxa,SAAS,aACrC,cAACF,EAAD,eAAmBwJ,Q,mFC7IlBmT,GAAe,SAACzJ,EAAUC,GAAX,OAAwByJ,GAAiB1J,EAAE/I,SAAUgJ,EAAEhJ,WACtEyS,GAAmB,SAAC1J,EAAkBC,GAAnB,OAC5BD,EAAEzQ,OAAS0Q,EAAE1Q,MACbyQ,EAAExT,KAAOyT,EAAEzT,IACXwT,EAAE1I,SAAW2I,EAAE3I,QA4CJqS,GA1CMza,IAAMC,MAAK,SAACpC,GAC7B,IAAON,EAAK2C,cAAL3C,EACAwK,EAAiDlK,EAAjDkK,SAAU2S,EAAuC7c,EAAvC6c,UAAWC,EAA4B9c,EAA5B8c,YAAaC,EAAe/c,EAAf+c,YACnCrZ,IAAWmZ,EACXG,EAAoB9S,EAASK,OAAS7K,EAAE,iBAAmBA,EAAE,iBAC7Dud,EAAevd,EAAE,iBAAmBwK,EAAS1H,MAC7C0a,EAAe1D,GAAetP,EAAS1H,MAC7C,OACI,eAACiB,EAAA,EAAD,CACUN,UAAMoL,EACN7K,OAAQA,EACR4D,QAAS,kBAAMuV,GAAaA,EAAU3S,IAHhD,UAII,cAACiT,GAAA,EAAD,UACI,cAACjC,GAAA,EAAD,CAAQtY,GAAI,CAAC+L,gBAAiBuO,EAAahY,OAAQb,SAAU6Y,EAAalc,SAE9E,cAAC8C,EAAA,EAAD,CAAcC,QAASkZ,IACvB,eAACG,GAAA,EAAD,WACKN,GACD,cAACjN,GAAA,EAAD,CAAS/O,MAAOkc,EAAhB,SACI,cAAC5V,GAAA,EAAD,CACIC,KAAK,MACL,cAAa2V,EACb1V,QAAS,kBAAMwV,EAAY5S,IAC3B1C,KAAK,QAJT,SAKK0C,EAASK,OAAS,cAAC,KAAD,IAAgB,cAAC,KAAD,QAI1CwS,GACD,cAAC3V,GAAA,EAAD,CACIC,KAAK,MACL,cAAY,SACZC,QAAS,kBAAMyV,EAAY7S,IAC3B1C,KAAK,QAJT,SAKI,cAAC,KAAD,WA1BG0C,EAASzK,MAgC7Bid,ICSYW,OA9Df,SAAmBrd,GACf,IAAOgR,EAASP,GAAmB,CAACW,KAAM,cAAnCJ,MACP,EAAkCzL,qBAAlC,mBAAO6S,EAAP,KAAkBkF,EAAlB,KACA,EAA0BtV,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACA,EAA8BtC,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACO5R,EAAK2C,cAAL3C,EACAkS,EAA6B5R,EAA7B4R,eAAgBC,EAAa7R,EAAb6R,UACvB,EAAgCtM,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACMI,GAAUsG,IAAc3G,EAExBM,EAAc3J,uBAAY,WAC5BsJ,GAAY,GACZE,EAAegJ,eACVxb,KAAKke,EAAc3L,GACnBrG,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMP,GAAY,QAChC,CAACE,EAAgBD,IAEpBO,oBAAUH,EAAa,CAACA,IAExB,IAAMwL,EAAoBnV,uBAAY,SAAC8B,GACnC,OAAO0H,EAAe4L,YAAf,2BAA+BtT,GAA/B,IAAyCK,QAASL,EAASK,UAC7DnL,MAAK,kBAAMwS,EAAegJ,kBAC1Bxb,KAAKke,EAAc3L,GACnBrG,MAAM3C,QAAQC,OACpB,CAACgJ,EAAgBD,IAEpBO,qBAAU,kBAAML,EAAU,CACtB/Q,MAAOpB,EAAE,kBACT2E,SAAU,kBAAM,cAAC,GAAD,CAAsByL,YAAapQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBsG,QAASgK,SAC9F,CAAC5R,EAAGmS,EAAWP,IAEnB,IAAMa,EAAc,WAChB,IAAMC,EAAW1S,EAAE,iBAAkB,CAAC2S,eAAe,IAC/CoL,EAAe/d,EAAE,gBAAiB,CAAC2S,eAAe,IACxD,OAAO,qCACFD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,OAC5DmL,EAAa5e,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmBvD,SAAUiO,WAI/D,OACI,eAACtB,EAAD,WACKS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/BqG,GACD,cAACjI,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,EAAG8B,cAAe,IAA5D,SACI,cAACxX,GAAA,EAAD,CAAOxF,QAAQ,WAAf,SACI,cAAC4C,EAAA,EAAD,UACK8U,EAAUvZ,KAAI,SAAC8e,GAAD,OACX,cAAC,GAAD,CAA0BzT,SAAUyT,EAAIb,YAAaS,GAAlCI,EAAGle,aAMtC,cAACM,EAAD,eAAmBwJ,IACnB,cAAC+F,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC4C,EAAD,KAAoBd,Q,4DCvE1DuM,GAAgB,SAAC5R,GAAD,OAAkB6R,mBAAQ,kBAAMjT,aAAMoB,EAAM,aAAc,IAAIiB,QAAS,CAACjB,KC0MtF8R,OA/Ef,SAAkB9d,GAA2B,IAAD,IACjCgR,EAASP,GAAmB,CAACW,KAAM,aAAnCJ,MACAtR,EAAK2C,cAAL3C,EACP,EAA8B2P,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAAwC/L,oBAAS,GAAjD,mBAAOwY,EAAP,KAAqBC,EAArB,KAEMhS,EADQ,IAAIiS,gBAAgBC,eAAcC,QAC7BC,IAAI,QACjBC,EAAaT,GAAc5R,GAC3BsS,EAAYC,aAAQF,IAAeG,aAAOH,GACzCxM,EAA6B7R,EAA7B6R,UAAWD,EAAkB5R,EAAlB4R,eAElB,EAAgCrM,qBAAhC,mBAAOkZ,EAAP,KAAiBC,EAAjB,KACA,EAAgCnZ,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACA,EAA0B1J,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KAEMgN,EAxH4E,SAACpW,GACnF,IAAM7C,EAAQC,eACPjG,EAAK2C,cAAL3C,EACP,OAAOme,mBAAQ,iBAAO,CAClBe,OAAQ,CAAClf,EAAE,gCACXmf,SAAU,CACN,CACI7X,MAAOtH,EAAE,kCACT6I,KAAM,CAACA,EAAKoE,MACZgC,gBAAiBqJ,KAAI,KACrB1J,YAAa5I,EAAMoZ,QAAQC,WAAWC,OAE1C,CACIhY,MAAOtH,EAAE,qCACT6I,KAAM,CAACA,EAAKqE,QACZ+B,gBAAiB4J,KAAK,KACtBjK,YAAa5I,EAAMoZ,QAAQC,WAAWC,WAG9C,CAACtZ,EAAO6C,EAAKoE,KAAMpE,EAAKqE,OAAQlN,IAqGfuf,CAAe,iBAACR,QAAD,IAACA,OAAD,EAACA,EAAU/R,kBAAX,QAAyB,CAACC,KAAM,EAAGC,OAAQ,IACzEsS,EAtF4C,WAClD,IAAMxZ,EAAQC,eACd,OAAOkY,mBAAQ,iBAAO,CAClBsB,YAAY,EACZC,OAAQ,CACJC,MAAO,CAAC9a,SAAS,GACjB+a,MAAO,CACHnZ,SAAU,QACVoZ,KAAM,CACFC,YAAY,EACZta,MAAOQ,EAAMoZ,QAAQW,SAEzBC,MAAO,CACHC,SAAU,SAAAC,GAAS,OAAIA,EAAY,QACnC/Q,QAAS,GACTgR,SAAU,EACV3a,MAAOQ,EAAMoZ,QAAQxM,KAAKvO,QAC1B+b,KAAM,CAACC,OAAQra,EAAMsa,WAAWC,eAI5CC,QAAS,CACLC,OAAQ,CACJha,SAAU,SACVyY,OAAQ,CACJkB,KAAM,CAACC,OAAQra,EAAMsa,WAAWC,YAChC/a,MAAOQ,EAAMoZ,QAAQxM,KAAKvO,UAGlCqc,QAAS,CAACC,SAAS,GACnBC,WAAY,CACRpb,MAAOQ,EAAMoZ,QAAQ/a,QAAQwc,aAC7BT,KAAM,CACFC,OAAQra,EAAMsa,WAAWC,WACzBzY,KAAM,IAEVgZ,UAAW,SAAAhb,GAAK,OAAIA,EAAMib,QAAQ,GAAK,aAG/C,CAAC/a,IA+CmBgb,GAClBC,EArGsF,SAACpY,GAC7F,IAAM7C,EAAQC,eACPjG,EAAK2C,cAAL3C,EACP,OAAOme,mBAAQ,iBAAO,CAClBe,OAAQ,CAAClf,EAAE,wBAAyBA,EAAE,uBAAwBA,EAAE,wBAChEmf,SAAU,CACN,CACItW,KAAM,CAACA,EAAKuE,KAAMvE,EAAKwE,IAAKxE,EAAKyE,KAAKnO,KAAI,SAAAuL,GAAC,OAAQ,IAAJA,KAC/CuE,gBAAiB,CAACmJ,KAAM,KAAQD,KAAO,KAAQG,KAAI,MACnD1J,YAAa5I,EAAMoZ,QAAQC,WAAWC,WAG9C,CAACtZ,EAAO6C,EAAKuE,KAAMvE,EAAKwE,IAAKxE,EAAKyE,IAAKtN,IAyFtBkhB,CAAe,iBAACnC,QAAD,IAACA,OAAD,EAACA,EAAU5R,qBAAX,QAA4B,CAACC,KAAM,EAAGC,IAAK,EAAGC,IAAK,IACjF6T,EA/C4C,WAClD,IAAMnb,EAAQC,eACd,OAAOkY,mBAAQ,iBAAO,CAClBsB,YAAY,EACZC,OAAQ,CACJC,MAAO,CAAC9a,SAAS,GACjB+a,MAAO,CAAC/a,SAAS,IAErB2b,QAAS,CACLC,OAAQ,CACJha,SAAU,SACVyY,OAAQ,CACJkB,KAAM,CAACC,OAAQra,EAAMsa,WAAWC,YAChC/a,MAAOQ,EAAMoZ,QAAQxM,KAAKvO,UAGlCqc,QAAS,CAACC,SAAS,GACnBC,WAAY,CACRpb,MAAOQ,EAAMoZ,QAAQ/a,QAAQwc,aAC7BT,KAAM,CACFC,OAAQra,EAAMsa,WAAWC,WACzBzY,KAAM,IAEVgZ,UAAW,SAAAhb,GAAK,OAAIA,EAAMib,QAAQ,GAAK,UAG/C,CAAC/a,IAqBmBob,GAClBhP,GAAUL,IAAagN,EAEvB1M,EAAc3J,uBAAY,WACvBkW,GACL1M,EAAemP,YAAY/U,GACtB5M,KAAKsf,EAAa/M,GAClBrG,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMP,GAAY,QAChC,CAACE,EAAgB0M,EAAWtS,EAAM2F,IAgBrC,GAdAO,oBAAUH,EAAa,CAACA,IAExBG,qBAAU,WACNL,EAAU,CACN/Q,MAAOpB,EAAE,2BAA4B,CAACsM,KAAMqS,IAC5Cha,SAAU,kBAAM,qCACZ,cAAC,GAAD,CAAsBrD,KAAM,cAAC,KAAD,IAAiBsG,QAASgK,EAAUxB,YAAapQ,EAAE,UAC/E,cAAC,GAAD,CAAsBoQ,YAAapQ,EAAE,uBACfsB,KAAM,cAACggB,GAAA,EAAD,IACN1Z,QAAS,kBAAM0W,GAAgB,cAG9D,CAACK,EAAY3e,EAAGmS,EAAWP,KAEzBgN,EAAW,OAAO,cAAC,KAAD,CAAUpd,GAAI,MACrC,GAAI6c,EAAc,OAAO,cAAC,KAAD,CAAU7c,GAAI,sBAAwB8K,IAE/D,IAAMmG,EAAc,WAChB,IAAMC,EAAW1S,EAAE,gBAAiB,CAAC2S,eAAe,IACpD,OAAO,mCAAGD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,UAG1E,OAAO,eAACtB,EAAD,WACFS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/B0M,GACD,cAACtO,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,GAA1C,SACI,eAACqF,GAAA,EAAD,CAAMC,WAAS,EAACxO,QAAS,EAAzB,UACI,cAACuO,GAAA,EAAD,CAAME,MAAI,EAACpF,GAAI,GAAIqF,GAAI,EAAvB,SACI,cAAClb,GAAA,EAAD,CAAOxF,QAAQ,WAAWkC,GAAI,CAAC0N,EAAG,EAAG6K,OAAQ,OAAQ5W,QAAS,OAAQqK,WAAY,YAAlF,SACI,cAAC,KAAD,CAAKsR,QAAS,CAACmB,MACV9Y,KAAMoW,EACNhO,QAASuO,EAAiB/D,OAAQ,UAG/C,cAAC8F,GAAA,EAAD,CAAME,MAAI,EAACpF,GAAI,GAAIqF,GAAI,EAAvB,SACI,cAAClb,GAAA,EAAD,CAAOxF,QAAQ,WAAWkC,GAAI,CAAC0N,EAAG,EAAG6K,OAAQ,OAAQ5W,QAAS,OAAQqK,WAAY,YAAlF,SACI,cAAC,KAAD,CAAKsR,QAAS,CAACmB,MACV9Y,KAAMoY,EACNhQ,QAASkQ,aAM9B,cAAC9gB,EAAD,eAAmBwJ,IACnB,cAAC+F,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC4C,EAAD,KAAoBd,QCzL7DzQ,GAAwD,CAC1DO,OAAQ,CAACL,MAAO,oBAAqBC,SAAU,uBAAwBC,KAAMI,IAAqBF,GAAI,WACtGG,SAAU,CAACP,MAAO,sBAAuBC,SAAU,yBAA0BC,KAAMM,IAAcJ,GAAI,aACrGS,MAAO,CAACb,MAAO,mBAAoBC,SAAU,sBAAuBC,KAAMY,IAAWV,GAAI,UACzFW,QAAS,CAACf,MAAO,qBAAsBC,SAAU,wBAAyBC,KAAMc,IAASZ,GAAI,YAC7FogB,UAAW,CAACxgB,MAAO,wBAAyBC,SAAU,2BAA4BC,KAAMgB,IAAMd,GAAI,eAkFvFqgB,OA/Ef,SAAcvhB,GACV,IAAOgR,EAASP,GAAmB,CAACW,KAAM,SAAnCJ,MACAtR,EAAK2C,cAAL3C,EACAmS,EAA6B7R,EAA7B6R,UAAWD,EAAkB5R,EAAlB4R,eACZnQ,EAAOa,qBAAWC,IACxB,EAA0BgD,qBAA1B,mBAAOic,EAAP,KAAcC,EAAd,KACA,EAA0BzZ,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACA,EAAgCpM,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACMI,GAAUL,IAAa+P,EAE7BtP,qBAAU,WACNL,EAAU,CACN/Q,MAAOpB,EAAE,cACT2E,SAAU,kBAAM,kCAErB,CAAC3E,EAAGmS,IAEP,IAAME,EAAc3J,uBAAY,WAC5BsJ,GAAY,GACZE,EAAe8P,WACVtiB,KAAKqiB,EAAU9P,GACfrG,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMP,GAAY,QAChC,CAACC,EAAUC,IAER+P,EAAe9D,mBAAQ,WACzB,IAAM+D,EAAM,IAAIhI,MAKhB,OAJK,OAAL4H,QAAK,IAALA,OAAA,EAAAA,EAAOlV,iBAAkBsV,EAAI/a,KAAKjG,GAAaS,UAChC,eAAX,OAAJI,QAAI,IAAJA,OAAA,EAAAA,EAAMe,QAAN,OAA8Bgf,QAA9B,IAA8BA,OAA9B,EAA8BA,EAAOhV,aAAcoV,EAAI/a,KAAKjG,GAAaO,SACpE,OAALqgB,QAAK,IAALA,OAAA,EAAAA,EAAOjV,uBAAwBqV,EAAI/a,KAAKjG,GAAaiB,UAChD,OAAL2f,QAAK,IAALA,OAAA,EAAAA,EAAO/U,gBAAiBmV,EAAI/a,KAAKjG,GAAa0gB,WACvCM,IACR,CAACJ,EAAO/f,IAIX,OAFAyQ,oBAAUH,EAAa,CAACA,IAGpB,eAACf,EAAD,WACKS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/ByP,GACD,eAACrR,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,GAA1C,UACK+F,EAAaE,QAAU,GACxB,eAACnf,EAAA,EAAD,CAAK8P,GAAI,EAAT,UACI,cAACvN,EAAA,EAAD,CAAYvE,QAAQ,KAAKohB,UAAU,SAASvP,WAAS,EAAClO,SAAU3E,EAAE,0BAClE,cAACuF,EAAA,EAAD,CAAYvE,QAAQ,KAAKohB,UAAU,SAASzd,SAAU3E,EAAE,gCAG3DiiB,EAAaE,OAAS,GACvB,eAACpP,GAAA,EAAD,CAAOC,QAAS,EAAhB,UACI,cAACzN,EAAA,EAAD,CAAYvE,QAAQ,KAApB,SAA0BhB,EAAE,qBAE3BiiB,EAAa9iB,KAAI,SAACsiB,EAAM9U,GAAP,OACd,wBAAC8B,GAAD,2BACQgT,GADR,IAEIrgB,MAAOpB,EAAEyhB,EAAKrgB,OACdC,SAAUrB,EAAEyhB,EAAKpgB,UACjBkK,IAAKoB,WAKhBmV,IAAUA,EAAMjV,sBACb,cAAC7J,EAAA,EAAD,CAAK8P,GAAI,GAAT,SACI,cAACrE,GAAD,2BACQvN,GAAaiB,SADrB,IAEIf,MAAOpB,EAAEkB,GAAaiB,QAAQf,OAC9BC,SAAUrB,EAAEkB,GAAaiB,QAAQd,UACjCqN,MAAM,UAMtB,cAACrO,EAAD,eAAmBwJ,QC7FzB3G,GAAK,CAAC2B,QAAS,OAAQwd,eAAgB,SAAUnT,WAAY,SAAUuM,OAAQ,SAmBtE6G,OAjBR,SAAqBhiB,GACxB,IAAON,EAAK2C,cAAL3C,EACP,OACI,cAACyQ,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAIA,GAA7B,SACI,eAACsD,GAAA,EAAD,CAAOmK,QAAM,EAAC3P,QAAQ,WAAWkC,GAAI,CAACG,MAAO,OAAQuN,EAAG,GAAxD,UACI,cAACrL,EAAA,EAAD,CAAYvE,QAAQ,KAAKohB,UAAU,SAASzd,SAAU3E,EAAE,gBACxD,cAACgD,EAAA,EAAD,CAAK6N,GAAI,IACT,cAACnM,EAAA,EAAD,IACA,eAACqO,GAAA,EAAD,CAAO3N,UAAU,MAAMlC,GAAI,CAACmf,eAAgB,WAAYvP,GAAI,GAA5D,UACI,cAAC1K,GAAA,EAAD,CAAQnF,UAAWgB,IAAYzC,GAAG,UAAU0B,GAAI,CAACqf,GAAI,GAAI5d,SAAU3E,EAAE,YACrE,cAACoI,GAAA,EAAD,CAAQR,QAAStH,EAAMwQ,MAAOnM,SAAU3E,EAAE,oB,gFCgBxDwiB,GAAaC,aAAOlB,KAAPkB,CAAa,CAC5BC,OAAQ,EACRvT,QAAS,EACTtK,QAAS,OACTiK,cAAe,SACfI,WAAY,WAGhB,SAASyT,GAAqBriB,GAI1B,MAAkBqC,cAAX3C,EAAP,EAAOA,EAAG4iB,EAAV,EAAUA,KACJC,EAAiBpgB,IAAMiG,aAAY,SAACoa,GAAD,OACjCF,EAAKC,eAAeC,GACflX,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMjS,EAAMQ,eAC3B,CAAC8hB,EAAMtiB,IACb,OAAO,cAACiH,GAAD,yBAAkBnG,MAAOpB,EAAE,oBAAwBM,GAAnD,aACH,eAACsD,EAAA,EAAD,CAAMV,GAAI,CAAC4P,GAAI,GAAf,UACI,cAACiQ,GAAA,EAAD,CAAgBnb,QAAS,kBAAMib,EAAe,OAA9C,SACI,cAACze,EAAA,EAAD,CAAcC,QAASrE,EAAE,oBAE7B,cAAC+iB,GAAA,EAAD,CAAgBnb,QAAS,kBAAMib,EAAe,OAA9C,SACI,cAACze,EAAA,EAAD,CAAcC,QAASrE,EAAE,yBA+H1BgjB,OAzHf,SAAe1iB,GACX,MAAwCuF,mBAAS,IAAjD,mBAAOod,EAAP,KAAqBC,EAArB,KACA,EAA0Brd,mBAAS,IAAnC,mBAAO0E,EAAP,KAAc4Y,EAAd,KACA,EAA0B7a,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACOjS,EAAK2C,cAAL3C,EACD2F,EAAUC,eACTsM,EAAkB5R,EAAlB4R,eACP,EAA0CvC,KAA1C,mBAAOyT,EAAP,KAAwBC,EAAxB,KACA,EAA8B1T,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAAgC/L,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KAEMsR,EAAe5a,uBAAY,SAAC/I,GAC9BA,EAAE8W,iBACFzE,GAAY,GACZE,EAAeqR,WAAWN,EAAc1Y,GACnC7K,MACG,kBAAMiG,EAAQwB,KAAK,UAAW,CAACoD,MAAOA,OACtC,SAAC5K,GACGsS,EAAStS,GACTqS,GAAY,MAEnBpG,UACN,CAACsG,EAAgBvM,EAASsM,EAAU1H,EAAO0Y,IAExCO,EAAoB,WACtB,IAAM9Q,EAAW1S,EAAE,qBAAsB,CAAC2S,eAAe,IACzD,OAAO,mCAAGD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmBvD,SAAUiO,UAG1D6Q,EAAY,WACd,IAAM7Q,EAAO5S,EAAE,aAAc,CAAC2S,eAAe,IACvC+Q,EAAO1jB,EAAE,mBACf,OAAO,qCACF4S,EAAKzT,KAAI,SAAAuL,GAAC,OAAIA,EAAI,cAACnF,EAAA,EAAD,UAAamF,IAAkB,cAAC1H,EAAA,EAAD,CAAK2gB,GAAI,OAC3D,cAACC,GAAA,EAAD,CAAM3gB,UAAU,IAAI4gB,KAAMH,EAAM/e,SAAU+e,QAI5CI,EAAmB,WACrB,IAAMpR,EAAW1S,EAAE,qBAAsB,CAAC2S,eAAe,IACzD,OAAO,mCAAGD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAACrN,EAAA,EAAD,CAAYZ,SAAUiO,UAGzD,OACI,qCACI,cAACnC,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAAC4P,GAAI,GAAlC,SACI,cAAC9P,EAAA,EAAD,UACI,eAACue,GAAA,EAAD,CAAMC,WAAS,EAACxO,QAAS,EAAzB,UACI,eAACwP,GAAD,CAAYf,MAAI,EAACpF,GAAI,GAAIqF,IAAE,EAA3B,UACI,cAACnc,EAAA,EAAD,CAAYsN,WAAS,EAAC5P,UAAU,KAAKjC,QAAQ,KAA7C,oBACA,cAACuE,EAAA,EAAD,CAAYtC,UAAU,KAAKjC,QAAQ,KAAnC,SAAyChB,EAAE,mBAC3C,eAACgD,EAAA,EAAD,CAAK8P,GAAI,EAAT,UACI,cAAC2Q,EAAD,IACA,cAACzgB,EAAA,EAAD,CAAK2gB,GAAI,IACT,cAACpe,EAAA,EAAD,UAAavF,EAAE,iBACf,cAACgD,EAAA,EAAD,CAAK2gB,GAAI,IACT,cAACG,EAAD,UAGR,eAACtB,GAAD,CAAYf,MAAI,EAACpF,GAAI,GAAIqF,IAAE,EAACxe,GAAI,CAAC6gB,UAAW,KAA5C,UACI,cAACvI,GAAA,EAAD,CAAQtY,GAAI,CAACwf,OAAQ,MAAOzT,gBAAiB,oBAC7C,cAAC1J,EAAA,EAAD,CAAYtC,UAAU,KAAKjC,QAAQ,KAAnC,SAAyChB,EAAE,mBAC3C,uBAAMgkB,SAAUV,EAAhB,UACI,cAACW,GAAA,EAAD,CACIC,WAAS,EACTC,aAAa,QACbC,SAAUrS,EACVhS,GAAG,QACHuH,MAAOtH,EAAE,uBACTgB,QAAQ,WACR0hB,OAAO,SACP5c,MAAOyE,EACPxD,SAAU,SAAApH,GAAC,OAAIwjB,EAASxjB,EAAEyV,OAAOtP,QACjCue,UAAQ,EACRC,WAAS,IAEb,cAACL,GAAA,EAAD,CACIlkB,GAAG,kBACHqkB,SAAUrS,EACVzK,MAAOtH,EAAE,yBACTgB,QAAQ,WACR0hB,OAAO,SACP5c,MAAOmd,EACPlc,SAAU,SAAApH,GAAC,OAAIujB,EAAgBvjB,EAAEyV,OAAOtP,QACxCue,UAAQ,EACRC,WAAS,EACTC,WAAY,CACRC,aACI,cAACC,GAAA,EAAD,CAAgBhe,SAAS,MAAzB,SACI,cAACiB,GAAA,EAAD,CAAYE,QAASgK,EAArB,SACI,cAAClC,GAAA,EAAD,CAAclK,MAAM,mBAKxC,cAACkf,GAAA,EAAD,CACI5hB,KAAK,SACLwhB,WAAS,EACTtjB,QAAQ,YACRwE,MAAM,UACNtC,GAAI,CAACqD,UAAW,GAChBoe,QAAS5S,EACTpN,SAAU3E,EAAE,+BAOpC,eAAC4kB,GAAA,EAAD,CAAK5jB,QAAQ,WACRI,MAAOpB,EAAE,mBACTwF,MAAM,UACNsC,KAAK,SACLF,QAASyb,EAJd,UAI8B,cAACwB,GAAA,EAAD,CAAkB3hB,GAAI,CAACqf,GAAI,KAJzD,eAKA,cAACI,GAAD,eAA0BS,IAC1B,cAACxT,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC2T,EAAD,KAA0B7R,IACjE,cAACtR,EAAD,eAAmBwJ,QC9JhBib,OAff,SAAgBxkB,GACZ,IAAOgR,EAASP,GAAmB,CAACW,KAAM,WAAnCJ,MACAnK,EAAQvB,eAARuB,KACA+K,EAAkB5R,EAAlB4R,eASP,OAPAM,qBAAU,WACNN,EACK6S,SACAnZ,MAAM3C,QAAQC,KACdxJ,MAAK,kBAAMyH,EAAK,UACtB,CAAC+K,EAAgB/K,IAEb,cAACmK,EAAD,UAAO,cAAC5M,EAAA,EAAD,OCSHsgB,OAtBf,SAAiB1kB,GACb,IAAON,EAAK2C,cAAL3C,EACP,OACI,eAACgD,EAAA,EAAD,CAAKE,GAAI,CACL2B,QAAS,OACTiK,cAAe,SACfI,WAAY,SACZuM,OAAQ,OACR4G,eAAgB,UALpB,UAOI,cAAC9c,EAAA,EAAD,CAAYvE,QAAQ,KAAK2D,SAAS,MAAMsgB,cAAY,IACpD,cAAC1f,EAAA,EAAD,CAAYvE,QAAQ,KAAK6R,WAAS,EAAClO,SAAU3E,EAAE,oBAC/C,cAACoI,GAAA,EAAD,CACI5C,MAAM,UACNxE,QAAQ,YACRiC,UAAW2gB,IACXpiB,GAAG,IAJP,SAKExB,EAAE,iB,UCWVia,GAAQC,MAAMC,KAAKD,MAAM,IAAIja,QAAQd,KAAI,SAAAuL,GAAC,OAD7B,SAACA,GAAD,OAAeA,EAAI,GAAK,IAAMA,EAAI,GAAKA,EACN0P,CAAW1P,MASzDwa,GAAiB,SAAC5kB,GACpB,IAAON,EAAK2C,cAAL3C,EACP,EAA4B8Z,GAAexZ,EAAMwC,MAA1C0C,EAAP,EAAOA,MAAOlE,EAAd,EAAcA,KAAMsX,EAApB,EAAoBA,KACpB,OACI,cAACzI,GAAA,EAAD,CAAS/O,MAAO,mCAAGpB,EAAE4Y,KAAW2C,gBAAiB,EAAjD,SACI,cAACC,GAAA,EAAD,CAAQxa,QAAQ,UAAUkC,GAAI,CAAC+L,gBAAiBzJ,EAAOnC,MAAO,GAAIoY,OAAQ,IAAK9W,SAAUrD,OAsJtF6jB,OAjJf,SAAsB7kB,GAClB,IAAOgR,EAASP,GAAmB,CAACW,KAAM,iBAAnCJ,MACP,EAAwBzL,qBAAxB,mBAAOkR,EAAP,KAAa2D,EAAb,KACA,EAA8C7U,qBAA9C,mBAAO8U,EAAP,KAAwBC,EAAxB,KACA,EAAgC/U,oBAAS,GAAzC,mBAAOgV,EAAP,KAAiBC,EAAjB,KACA,EAAgCjV,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACA,EAAwCnM,oBAAS,GAAjD,mBAAOuf,EAAP,KAAqBC,EAArB,KACA,EAAkCxf,qBAAlC,mBAAOkF,EAAP,KAAkBua,EAAlB,KACA,EAA0Bhd,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACA,EAA8B3J,KAA9B,mBAAOyS,EAAP,KAAgBC,EAAhB,KACOhb,EAAK2C,cAAL3C,EACP,EAA8B2P,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KAEMtF,EADQ,IAAIiS,gBAAgBC,eAAcC,QAC7BC,IAAI,QACjBC,EAAaT,GAAc5R,GAC3BsS,EAAYC,aAAQF,IAAeG,aAAOH,GAC1CvM,GAAUL,IAAagF,EAEtB5E,EAA6B7R,EAA7B6R,UAAWD,EAAkB5R,EAAlB4R,eAEZG,EAAc3J,uBAAY,WACvBkW,IACL5M,GAAY,GACZxS,QAAQyb,IAAI,CACR/I,EAAegJ,eACfhJ,EAAeiJ,cAAc7O,GAC7B4F,EAAekJ,mBAAmB9O,KACnC5M,MAAK,YAAuC,IAAD,qBAApCgZ,EAAoC,KAAzB5N,EAAyB,KAAZuQ,EAAY,KACpCrE,EAAa0B,EACd4C,QAAO,SAACpN,GAAD,OAAOA,EAAErD,UAChB1L,KAAI,SAAC+O,GAAO,IAAD,IACFsP,EAAe1D,GAAe5L,EAAEpL,MACtC,MAAQ,CACJ6U,OAAQ,cAAC,GAAD,CAAgB7U,KAAMoL,EAAEpL,OAChC4Y,WAAYxN,EAAEnO,GACdiX,WAAU,oBAAElM,EAAYjC,KAAK8S,MAAK,SAAC/K,GAAD,OAAOA,EAAE8K,aAAexN,EAAEnO,aAAlD,aAAE,EAAqD8I,YAAvD,QAA+DoR,GAAM9a,KAAI,kBAAM,KACzF2U,cAAe0J,EAAahY,MAC5BuO,mBAAoByJ,EAAazE,aAG7CuM,EAAaxa,EAAYC,WACzB6P,EAAkB,iBAACS,QAAD,IAACA,OAAD,EAACA,EAAQlc,IAAI4Y,WAAb,QAA+B,IACjD2C,EAAQ1D,GACR8D,GAAY,MACb,SAACnb,GACAsS,EAAStS,GACT+a,OAAQ7L,MAEPjD,MAAM3C,QAAQC,KACdqJ,SAAQ,kBAAMP,GAAY,SAChC,CAAC4M,EAAW1M,EAAgBD,EAAU3F,IAEzCkG,oBAAUH,EAAa,CAACA,IAExB,IAAMuJ,EAAelT,uBAAY,SAACmT,GAC9BnB,GAAQ,SAAAjS,GAAS,cAAIA,QAAJ,IAAIA,OAAJ,EAAIA,EAAWtJ,KAAI,SAAC0W,EAAKlL,GAAN,mBAAC,eAAgBkL,GAAjB,IAAsBmB,WAAY6E,EAAMlR,WAC5EmQ,GAAY,KACb,IAEGgB,GAAapT,uBAAY,WACtBqO,IAAQhM,GACbmH,EAAe6J,cAAczP,EAAMyK,EAAK5X,KAAI,SAACgY,GAAD,MAAQ,CAACuE,WAAYvE,EAAEuE,WAAY7S,KAAMsO,EAAEH,gBAClFtX,MAAK,WACFsb,EAAWhb,EAAE,kBACb8a,GAAY,GACZuK,GAAgB,KACjBpT,GACFrG,MAAM3C,QAAQC,OACpB,CAACgJ,EAAgB5F,EAAMyK,EAAM9E,EAAU+I,EAAYhb,EAAG+K,IA0BzD,GAxBAyH,qBAAU,WACNoM,GAAazM,EAAU,CACnB/Q,MAAOpB,EAAE,2BAA4B,CAACsM,KAAMqS,IAC5Cha,SAAU,kBAAM,qCACZ,cAAC,GAAD,CAAsByL,YAAapQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBsG,QAASgK,SAC/D/C,IAAd9D,GACD,cAAC,GAAD,CAAsBqF,YAAapQ,EAAE,WACfsB,KAAM,cAACikB,GAAA,EAAD,CAAkBvkB,QAAQ,gBAAgB8G,KAAK,QAAQtC,MAAM,mBAE1EqJ,IAAd9D,IAA4BA,GAC7B,cAAC,GAAD,CAAsBkF,kBAAmB4K,EACnBzK,YAAapQ,EAAE,QACfsB,KAAM,cAAC6R,GAAA,EAAD,IACNvL,QAASkU,KAE9B/Q,GACD,cAAC,GAAD,CAAsBqF,YAAapQ,EAAE,YACfsB,KAAM,cAAC+R,GAAA,EAAD,IACNzL,QAAS,kBAAMyd,GAAgB,cAI9D,CAACzG,EAAWD,EAAY7C,GAAYjB,EAAUjJ,EAAUO,EAAWnS,EAAG+K,KAEpE6T,EAAW,OAAO,cAAC,KAAD,CAAUpd,GAAG,MACpC,GAAI4jB,EAAc,OAAO,cAAC,KAAD,CAAU5jB,GAAI,kBAAoB8K,IAE3D,IAAMmG,GAAc,WAChB,IAAMC,EAAW1S,EAAE,qBAAsB,CAAC2S,eAAe,IACnDqJ,EAAgBhc,EAAE,gBAAiB,CAAC2S,eAAe,IACnD6S,EAAYxlB,EAAE,gBAAiB,CAAC2S,eAAe,IACrD,OAAO,qCACFD,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,OAC5DoJ,EAAc7c,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmBvD,SAAUiO,OACvD4S,EAAUrmB,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,WAItE,OACI,eAACtB,EAAD,WACKS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/B0E,GACD,cAACtG,GAAA,EAAD,CAAWwL,gBAAc,EAACvL,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,EAAGrX,QAAS,QAArE,SACI,cAACsX,GAAA,EAAD,CACIjZ,GAAI,CAACyD,SAAU,OAAQyV,UAAW,CAACC,GAAI,sBAAuBjZ,GAAI,uBADtE,SAEI,eAACkZ,GAAA,EAAD,CAAOC,cAAY,EAACzU,KAAK,QAAQ5E,GAAI,CAACsZ,WAAY,OAAQC,eAAgB,YAA1E,UACI,eAACC,GAAA,EAAD,WACI,eAAChF,GAAA,EAAD,WACI,cAAC9C,GAAA,EAAD,CAAW5T,QAAQ,OAAOkC,GAAI,CAAC4R,OAAQ,KACtCmF,GAAM9a,KAAI,SAAC2G,GAAD,OACP,eAAC8O,GAAA,EAAD,CAAW+H,MAAM,SAASzZ,GAAI,CAAC4R,OAAQ,GAAvC,UAA4C8H,OAAO9W,GAAnD,wBAEP6U,GACD,eAACjD,GAAA,EAAD,WACI,cAAC9C,GAAA,EAAD,CAAW5T,QAAQ,OAAOkC,GAAI,CAAC4R,OAAQ,KACtC6F,EAAgBxb,KAAI,SAACuL,GAAD,OACjB,cAACkK,GAAA,EAAD,CAAW1R,GAAI,CAAC4R,OAAQ,EAAG7F,gBAAiBvE,EAAGmS,IAAK,mBAIhE,cAACC,GAAA,EAAD,UACI,cAAC,GAAD,CAAoB/F,KAAMA,EAAMhQ,SAAU6U,EAAcrF,SAAUxL,aAMlF,cAAC,KAAD,CAAQgS,KAAMlC,EAAU5Z,QAASjB,EAAE,qBACnC,cAAC4P,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC4C,GAAD,KAAoBd,IAC3D,cAACtR,EAAD,2BAAmB0a,GAAnB,IAA4Bxa,SAAS,aACrC,cAACF,EAAD,eAAmBwJ,Q,8BCjKzB4b,GAAQhD,aAAO,QAAPA,CAAgB,CAC1B5d,QAAS,SAGP6gB,GAAY,CACd,CAACpb,KAAM,iBAAkBoZ,KAAM,yCAuGpBiC,OAjGf,SAAgBrlB,GACZ,IAAOgR,EAASP,GAAmB,CAACW,KAAM,WAAnCJ,MACP,EAA8BhJ,KAA9B,mBAAOyS,EAAP,KAAgBC,EAAhB,KACA,EAA0B1S,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACOjS,EAAK2C,cAAL3C,EACAkS,EAA6B5R,EAA7B4R,eAAgBC,EAAa7R,EAAb6R,UACvB,EAA8BxC,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAAsC/L,qBAAtC,mBAAO+f,EAAP,KAAoBC,EAApB,KACM9T,IAAa6T,EAEbE,EAAWpd,uBAAY,SAACqd,GAC1B,IAAIhU,EAAJ,CACA,MAA+BG,EAAe8T,gBAAgBD,GAAvDta,EAAP,EAAOA,QAASma,EAAhB,EAAgBA,YAChBC,EAAeD,GACfna,EAAQ/L,MAAK,kBAAMsb,EAAWhb,EAAE,0BAAyBiS,GACpDM,SAAQ,kBAAMsT,OAAehX,MAC7BjD,MAAM3C,QAAQC,QACpB,CAAC6I,EAAUG,EAAgB8I,EAAY/I,EAAUjS,IAE9CimB,EAAWvd,uBAAY,WACzBmd,GAAe,SAAApd,GACF,OAATA,QAAS,IAATA,KAAWyd,cAGhB,IAEH1T,qBAAU,kBAAML,EAAU,CACtB/Q,MAAOpB,EAAE,qBACT2E,SAAU,kBAAM,cAAC,GAAD,CAAsByL,YAAapQ,EAAE,QAASsB,KAAM,cAAC,KAAD,IAAiBsG,QAASgK,SAC9F,CAAC5R,EAAGmS,EAAWP,IAEnB,IAAMc,EAAW1S,EAAE,cAAe,CAAC2S,eAAe,IAC5CwT,EAAc,mCAAGzT,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,SAEnF,OACI,eAACtB,EAAD,WACI,cAACb,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,GAA1C,SACI,eAACqF,GAAA,EAAD,CAAMC,WAAS,EAACxO,QAAS,EAAzB,UACI,eAACuO,GAAA,EAAD,CAAME,MAAI,EAACpF,GAAI,GAAIjZ,GAAI,EAAvB,UACI,cAACmC,EAAA,EAAD,CAAYvE,QAAQ,KAAKikB,cAAY,EAArC,SAAuCjlB,EAAE,2BACzC,cAACuF,EAAA,EAAD,CAAYC,MAAM,iBAAiBqN,WAAS,EAA5C,SAA8C7S,EAAE,iCAChD,cAACwG,GAAA,EAAD,UACI,eAAC5C,EAAA,EAAD,WACI,6BACI,cAAC2B,EAAA,EAAD,CACIrC,GAAI,CAAC2N,GAAI,GAAK/L,GAAI,GAClBU,MAAM,iBACNX,QAAQ,QACR7D,QAAQ,UAJZ,SAIuBhB,EAAE,yBAE5B0lB,GAAUvmB,KAAI,SAAAsiB,GAAI,OACf,eAACsB,GAAA,EAAD,CAAgC9f,UAAU,IAAI4gB,KAAMpC,EAAKiC,KAAMtO,OAAO,SAAtE,UACI,cAACqI,GAAA,EAAD,UAAgB,cAAC2I,GAAA,EAAD,MAChB,cAAChiB,EAAA,EAAD,CAAcC,QAASod,EAAKnX,OAC5B,cAACpG,EAAA,EAAD,UAAc,cAACmiB,GAAA,EAAD,QAHG5E,EAAKnX,iBAS1C,eAACiX,GAAA,EAAD,CAAME,MAAI,EAACpF,GAAI,GAAIjZ,GAAI,EAAvB,UACI,cAACmC,EAAA,EAAD,CAAYvE,QAAQ,KAAKikB,cAAY,EAArC,SAAuCjlB,EAAE,yBACzC,cAACuF,EAAA,EAAD,CAAYC,MAAM,iBAAiBqN,WAAS,EAA5C,SAA8C7S,EAAE,+BAChD,eAAC+S,GAAA,EAAD,CAAO3N,UAAU,MAAM4N,QAAS,EAAhC,UACI,cAAChQ,EAAA,EAAD,CAAKE,GAAI,CAACqB,SAAU,GAApB,SACI,wBAAO+hB,QAAQ,wBAAf,UACI,cAACb,GAAD,CACIc,OAAO,oGACPxmB,GAAG,wBACH+C,KAAK,OACLiE,SAAU,SAACpH,GAAD,aAAO,UAAAA,EAAEyV,cAAF,eAAUoR,QAASV,EAASnmB,EAAEyV,OAAOoR,MAAM,OAEhE,cAAC9B,GAAA,EAAD,CACIC,QAAS5S,EACTuS,WAAS,EACTxc,KAAK,QACL9G,QAAQ,YACRiC,UAAU,OACVwjB,gBAAgB,QAChBnW,UAAW,cAAC,IAAD,IAPf,SAQEtQ,EAAE,wBAGZ,cAAC0mB,GAAA,EAAD,CAAUrhB,GAAI0M,EAAU4U,YAAY,aAApC,SACI,cAACve,GAAA,EAAD,CAAQN,KAAK,QAAQF,QAASqe,EAA9B,SAAyCjmB,EAAE,yBAM/D,cAAC4P,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAASsW,GAAiBxU,IACxD,cAACtR,EAAD,aAAeE,SAAS,WAAcwa,IACtC,cAAC1a,EAAD,eAAmBwJ,Q,oGCpG/B,SAAS+c,GAAStmB,GACd,IAAMyB,EAAOa,qBAAWC,IAClBgkB,EAAQ,CACV,CAACvlB,KAAM,cAACwlB,GAAA,EAAD,IAAUlU,KAAM7Q,EAAKwI,OAC5B,CAACjJ,KAAM,cAACylB,GAAA,EAAD,IAAenU,KAAM7Q,EAAKsI,WAErC,OAAO,mCAAGwc,EAAM1nB,KAAI,SAAC8e,EAAI+I,GAAL,OAChB,eAACjjB,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UAAe+Z,EAAG3c,OAClB,cAAC8C,EAAA,EAAD,UAAe6Z,EAAGrL,SAFP,WAAaoU,QAOpC,SAASC,GAAc3mB,GACnB,IAAON,EAAK2C,cAAL3C,EACP,OAAO,eAAC+D,EAAA,EAAD,CAAoCC,QAAM,EAACf,UAAWgB,IAAYzC,GAAI,aAAtE,UACH,cAAC0C,EAAA,EAAD,UAAc,cAAC,KAAD,MACd,cAACE,EAAA,EAAD,UAAepE,EAAE,mBACjB,cAACkE,EAAA,EAAD,UAAc,cAACgjB,GAAA,EAAD,QAHI,qBAO1B,SAASC,GAAa7mB,GAClB,IAAON,EAAK2C,cAAL3C,EACP,EAAgC6F,mBAAiBuhB,KAAQC,kBAAzD,mBAAOvE,EAAP,KAAiBwE,EAAjB,KACOrV,EAAY3R,EAAZ2R,SAED4Q,EAAiBpgB,IAAMiG,aAAY,SAACoa,GAAD,OACjCA,GAAYsE,KAAQvE,eAAeC,GAC9BpjB,MAAK,kBAAM4nB,EAAYxE,KAAW7Q,GAClCrG,MAAM3C,QAAQC,OACvB,CAAC+I,IACL,OAAO,mCACH,eAAClO,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UAAc,cAACqjB,GAAA,EAAD,MACd,eAACC,GAAA,EAAD,CACIlD,WAAS,EACT9e,MAAM,UACNM,MAAOgd,EACP2E,WAAS,EACT1gB,SAAW,SAACC,EAAOlB,GAAR,OAAkB+c,EAAe/c,IALhD,UAOI,cAAC4hB,GAAA,EAAD,CAAc5hB,MAAM,KAApB,SAA0B9F,EAAE,kBAC5B,cAAC0nB,GAAA,EAAD,CAAc5hB,MAAM,KAApB,SAA0B9F,EAAE,sBAVtB,uBAgBtB,SAAS2nB,GAAcrnB,GAAY,IAAD,EACxBsnB,EAAYhlB,qBAAWuR,IACvB0T,EAAc,UAAGD,EAAUvT,YAAb,QAAqB,OAClCrU,EAAK2C,cAAL3C,EAKP,OACI,eAAC+D,EAAA,EAAD,WACI,cAACG,EAAA,EAAD,UAAc,cAAC4jB,GAAA,EAAD,MACd,eAACN,GAAA,EAAD,CACIlD,WAAS,EACT9e,MAAM,UACNM,MAAO+hB,EACPJ,WAAS,EACT1gB,SAZS,SAACC,EAAYlB,GAC9BA,GAAS8hB,EAAUG,gBAA2B,SAAVjiB,EAAmBA,OAAQ+I,IAM3D,UAOI,cAAC6Y,GAAA,EAAD,CAAc5hB,MAAM,OAApB,kBACA,cAAC4hB,GAAA,EAAD,CAAc5hB,MAAM,QAApB,SAA6B9F,EAAE,sBAC/B,cAAC0nB,GAAA,EAAD,CAAc5hB,MAAM,OAApB,SAA4B9F,EAAE,0BAXxB,sBAkEPgoB,OA5Cf,SAAc1nB,GACV,IAAOgR,EAASP,GAAmB,CAACW,KAAM,SAAnCJ,MACP,EAA8B3B,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAA0BtJ,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACMtM,EAAUC,eACT5F,EAAK2C,cAAL3C,EACAmS,EAAa7R,EAAb6R,UACDpQ,EAAOa,qBAAWC,IAiBxB,OAfA2P,qBAAU,WACNL,EAAU,CACN/Q,MAAOpB,EAAE,mBACT2E,SAAU,kBACN,qCACI,cAAC,GAAD,CAAsByL,YAAapQ,EAAE,QAASsB,KAAM,cAACoO,GAAA,EAAD,IAAiB9H,QAASgK,IAC9E,cAAC,GAAD,CACItQ,KAAM,cAAC2mB,GAAA,EAAD,IACNrgB,QAAS,kBAAMjC,EAAQwB,KAAK,YAC5BiJ,YAAapQ,EAAE,oBAIhC,CAAC2F,EAASiM,EAAU5R,EAAGmS,IAGtB,eAACb,EAAD,WACI,eAACb,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,GAA1C,UACI,cAAC1V,GAAA,EAAD,CAAOxF,QAAQ,WAAW2P,QAAM,EAAhC,SACI,eAAC/M,EAAA,EAAD,WACI,cAACgjB,GAAD,IACA,cAACjjB,EAAA,EAAD,CAAS3C,QAAQ,QAAQiC,UAAU,OACpB,eAAdlB,EAAKe,MAAyB,cAACmkB,GAAD,IAC/B,cAACE,GAAD,CAAclV,SAAUA,IACxB,cAAC0V,GAAD,SAGPrZ,MAEL,cAACsB,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAAS,cAAC3H,GAAA,EAAD,CAAmBvD,SAAU3E,EAAE,oBAAyB2R,IAC/F,cAACtR,EAAD,eAAmBwJ,QCjJzBqe,GAAOzF,aAAO,OAAPA,CAAe,CACxBpf,MAAO,OACPkD,UAAW,IAOT4hB,GAAkB1F,aAAO,MAAPA,CAAc,CAClC5d,QAAS,OACTiK,cAAe,SACfI,WAAY,WA+DDkZ,OA5Df,SAAgB9nB,GACZ,MAAsBuF,mBAAiB,IAAvC,mBAAOqG,EAAP,KAAYmc,EAAZ,KACA,EAA0B/f,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACOjS,EAAK2C,cAAL3C,EACDqK,EAAWmU,eACX7Y,EAAUC,eAChB,EAAgCC,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACOzH,EAASF,EAAS9B,MAAlBgC,MACA2H,EAAkB5R,EAAlB4R,eAEDoR,EAAe5a,uBAAY,SAAC/I,GAC9BA,EAAE8W,iBACFzE,GAAY,GACZE,EAAeoW,MAAM/d,EAAO2B,GACvBxM,MAAK,kBAAMiG,EAAQwB,KAAK,QAAM,SAAAwB,GAC3BsJ,EAAStJ,GACTqJ,GAAY,MAEfpG,MAAM3C,QAAQC,OACpB,CAACgJ,EAAgB3H,EAAO5E,EAASuG,EAAK+F,IAEnC2J,EAAelT,uBAAY,SAAA/I,GAAC,OAAI0oB,EAAO1oB,EAAEyV,OAAOtP,SAAQ,IAE9D,OAAKyE,EAEA,qCACG,eAACkG,GAAA,EAAD,CAAWxN,UAAU,OAAOyN,SAAS,KAAKxN,GAAI,CAAC4P,GAAI,GAAnD,UACI,cAACvN,EAAA,EAAD,CAAYvE,QAAQ,KAAK6R,WAAS,EAAlC,SAAoC7S,EAAE,uBAAwB,CAACuoB,KAAMhe,MACrE,cAAChF,EAAA,EAAD,CAAYvE,QAAQ,KAAK6R,WAAS,EAAlC,SAAoC7S,EAAE,oCACtC,eAACmoB,GAAD,WACI,cAAC3M,GAAA,EAAD,CAAQtY,GAAI,CAACwf,OAAQ,MAAOzT,gBAAiB,oBAC7C,cAAC1J,EAAA,EAAD,CAAYsN,WAAS,EAAC5P,UAAU,KAAKjC,QAAQ,KAA7C,SAAmDhB,EAAE,kBACrD,eAACkoB,GAAD,CAAMlE,SAAUV,EAAhB,UACI,cAACW,GAAA,EAAD,CACIG,SAAUrS,EACVmS,WAAS,EACTnkB,GAAG,MACHuH,MAAM,MACNtG,QAAQ,WACR0hB,OAAO,SACP5c,MAAOoG,EACPnF,SAAU6U,EACVyI,UAAQ,EACRC,WAAS,IACb,cAACI,GAAA,EAAD,CACIC,QAAS5S,EACTjP,KAAK,SACLwhB,WAAS,EACTtjB,QAAQ,YACRwE,MAAM,UACNtC,GAAI,CAACqD,UAAW,GANpB,SAOEvG,EAAE,2BAIhB,cAACK,EAAD,eAAmBwJ,OAhCR,cAAC,KAAD,CAAUrI,GAAI,O,oBC5B/B8K,I,QAAO,IAAIiB,MAAOC,cAAcC,MAAM,EAAG,KA6GhC+a,OA3Gf,SAAmBloB,GAA2B,IAAD,IAClCgR,EAASP,GAAmB,CAACW,KAAM,cAAnCJ,MACAtR,EAAK2C,cAAL3C,EACP,EAA8B2P,KAA9B,mBAAOgC,EAAP,KAAkBC,EAAlB,KACA,EAA8BtJ,KAA9B,mBAAOyS,EAAP,KAAgBC,EAAhB,KACA,EAA0B1S,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACA,EAAkCpM,qBAAlC,mBAAO+b,EAAP,KAAkB6G,EAAlB,KACA,EAAgC5iB,oBAAS,GAAzC,mBAAOgV,EAAP,KAAiBC,EAAjB,KACA,EAA0BjV,mBAAS,KAAnC,mBAAO6iB,EAAP,KAAcC,EAAd,KACA,EAAgC9iB,oBAAS,GAAzC,mBAAOkM,EAAP,KAAiBC,EAAjB,KACMI,GAAUL,IAAa6P,EAEtB1P,EAA6B5R,EAA7B4R,eAAgBC,EAAa7R,EAAb6R,UACjBpQ,EAAOa,qBAAWC,IAElBwP,EAAc3J,uBAAY,WAC5BsJ,GAAY,GACZ+H,GAAU7H,EAAe0W,aAAatc,KAAO,iBAAO,CAACuc,EAAG,EAAGC,EAAG,MACzDppB,KAAK+oB,EAAcxW,GACnBM,SAAQ,kBAAMP,GAAY,QAChC,CAACE,EAAgBD,IAEpBO,oBAAUH,EAAa,CAACA,IAExB,IAAM0W,EAAcrgB,uBAAY,WACvBkZ,GACL1P,EAAe8W,cAAcpH,GACxBliB,MAAK,kBAAMsb,EAAWhb,EAAE,oBAAmBiS,GAC3CvS,MAAK,kBAAMob,GAAY,MACvBlP,MAAM3C,QAAQC,OACpB,CAACgJ,EAAgB0P,EAAW3P,EAAU+I,EAAYhb,IAE/CipB,EAAoBvgB,uBAAY,SAACkZ,GACnC6G,EAAa7G,GACb9G,GAAY,KACb,IACGjS,ECrD4D,SAACggB,EAAGC,GACtE,IAAM9iB,EAAQC,eACd,OAAOkY,mBAAQ,iBAAO,CAClBgB,SAAU,CAAC,CACPtW,KAAM,CAAC,CAACggB,IAAGC,IAAG3R,EAAG,KACjB+R,YAAa,EACbta,YAAa5I,EAAMoZ,QAAQW,QAC3Bva,MAAOQ,EAAMoZ,QAAQxM,KAAKvO,QAC1B4K,gBAAiBjJ,EAAMoZ,QAAQ/a,QAAQ8kB,KACvCC,eAAgB,GAChBC,YAAa,OAEjB,CAACrjB,EAAO6iB,EAAGC,IDyCFQ,CAAO,iBAAC1H,QAAD,IAACA,OAAD,EAACA,EAAWiH,SAAZ,QAAiB,EAAjB,iBAAoBjH,QAApB,IAAoBA,OAApB,EAAoBA,EAAWkH,SAA/B,QAAoC,GAClD7X,ECxCiG,SAAClK,GACxG,IAAO/G,EAAK2C,cAAL3C,EACP,OAAOme,mBAAQ,iBAAO,CAClBoL,qBAAqB,EACrBC,aAAc,EACd9J,OAAQ,CACJ+J,OAAQ,CACJC,eAAe,EACfvT,IAAK,GACLD,IAAK,EACL8J,MAAO,CACHG,SAAU,EACVtb,SAAS,GAEbgb,KAAM,CAAChb,SAAS,GAChBzD,MAAO,CACHyD,SAAS,EACT+N,KAAM5S,EAAE,kBAAoB,+DAAeA,EAAE,mBAGrD2pB,OAAQ,CACJD,eAAe,EACfvT,IAAK,GACLD,IAAK,EACL8J,MAAO,CACHG,SAAU,EACVtb,SAAS,GAEbgb,KAAM,CAAChb,SAAS,GAChBzD,MAAO,CACHyD,SAAS,EACT+N,KAAM,CAAC5S,EAAE,2BAA6B,+DAAeA,EAAE,6BAInE4pB,QAAS,SAAUjqB,GACDA,EAAEkqB,MAAMC,0BAA0BnqB,EAAG,UAAW,CAACoqB,WAAW,IAAO,GACvE5H,OAAQxiB,EAAEqqB,OAAO5U,OAAO6U,MAAMC,OAAS,OAC5CvqB,EAAEqqB,OAAO5U,OAAO6U,MAAMC,OAAS,WAExC1J,QAAS,CACL2J,SAAU,CACNC,OAAO,EACPC,aAAa,EACbC,YAAa,kBAAM,MACnBC,OAAQ,kBAAM,MACdC,UAAW,SAAC7qB,EAAQ8qB,EAAmB9d,EAAe7G,GAClDnG,EAAEyV,OAAO6U,MAAMC,OAAS,UACxBnjB,EAASjB,KAGjB2a,OAAQ,CAAC5b,SAAS,GAClB6b,QAAS,CAACC,SAAS,OAEvB,CAAC5Z,EAAU/G,IDdC0qB,CAAWzB,GAE3BzW,qBAAU,WACNL,EAAU,CACN/Q,MAAOpB,EAAE,yBACT2E,SAAU,WACN,MAAc,MAAV+jB,EAAsB,6BACnB,qCACH,cAAC,GAAD,CAAsBpnB,KAAM,cAAC,KAAD,IAAiBsG,QAASgK,EAAUxB,YAAapQ,EAAE,UAC/E,cAAC,GAAD,CAAsBiQ,kBAAmB4K,EACnBvZ,KAAM,cAAC6R,GAAA,EAAD,IACNvL,QAASmhB,EACT3Y,YAAapQ,EAAE,kBAIlD,CAACA,EAAGmS,EAAW4W,EAAanX,EAAUiJ,EAAU6N,IAEnD,IAAMhW,EAAW1S,EAAE,kBAAmB,CAAC2S,eAAe,IAChDwT,EAAc,mCAAGzT,EAASvT,KAAI,SAAAyT,GAAI,OAAI,cAAC1K,GAAA,EAAD,CAAmB2K,WAAS,EAAClO,SAAUiO,SAE7E+X,GAAyB,YAAd5oB,EAAKe,KAAqB,8CAAgD,gDAC3F,OAAO,eAACwO,EAAD,WACFS,GAAY,cAACrN,EAAA,EAAD,IACZ0N,GAAU,cAAC,GAAD,CAActB,MAAOuB,IAC/BuP,GACD,cAACnR,GAAA,EAAD,CAAWC,SAAS,KAAKxN,GAAI,CAACgZ,WAAY,GAAID,gBAAc,EAA5D,SACI,eAAC2O,GAAA,EAAD,CAAY9kB,MAAO4iB,EAAnB,UACI,cAACmC,GAAA,EAAD,CAAU/kB,MAAM,IAAhB,SACI,eAACU,GAAA,EAAD,CAAOxF,QAAQ,WAAWkC,GAAI,CAAC0N,EAAG,GAAlC,UACI,cAACrL,EAAA,EAAD,CAAYvE,QAAQ,KAApB,SAA0BhB,EAAE,8BAC5B,cAACgD,EAAA,EAAD,CAAK6N,GAAI,IACT,eAACkC,GAAA,EAAD,CAAO3N,UAAU,MAAMlC,GAAI,CAACmf,eAAgB,WAAYvP,GAAI,GAA5D,UACI,cAAC1K,GAAA,EAAD,CACIpH,QAAQ,YACR4G,QAAS,kBAAM+gB,EAAS,MACxBhkB,SAAU3E,EAAE,SAChB,cAACoI,GAAA,EAAD,CACIlF,GAAI,CAAC4nB,WAAY,GACjB9pB,QAAQ,YACR4G,QAAS,kBAAM+gB,EAAS,MACxBhkB,SAAU3E,EAAE,gBAI5B,eAAC6qB,GAAA,EAAD,CAAU/kB,MAAM,IAAhB,UACI,cAACP,EAAA,EAAD,CAAYvE,QAAQ,KAAK2b,MAAM,SAAS9J,WAAS,EAAjD,SAAmD7S,EAAE2qB,MACrD,cAACnkB,GAAA,EAAD,CAAOxF,QAAQ,WAAWkC,GAAI,CAAC0N,EAAG,GAAlC,SACI,cAAC,KAAD,CAAQ/H,KAAMA,EAAMoI,QAASA,EAASwK,OAAQ,IAAKpY,MAAO,WAGlE,cAACwnB,GAAA,EAAD,CAAU/kB,MAAM,IAAhB,SACI,eAACU,GAAA,EAAD,CAAOmK,QAAM,EAAC3P,QAAQ,WAAWkC,GAAI,CAAC0N,EAAG,GAAzC,UACI,cAACrL,EAAA,EAAD,CAAYvE,QAAQ,KAApB,SAA0BhB,EAAE,gCAC5B,cAACgD,EAAA,EAAD,CAAK6N,GAAI,IACT,cAACkC,GAAA,EAAD,CAAO3N,UAAU,MAAMlC,GAAI,CAACmf,eAAgB,WAAYvP,GAAI,GAA5D,SACI,cAAC1K,GAAA,EAAD,CAAQpH,QAAQ,YAAYiC,UAAWgB,IAAYzC,GAAG,IAAtD,SAA2DxB,EAAE,yBAOjF,cAAC,KAAD,CAAQ+c,KAAMlC,EAAU5Z,QAASjB,EAAE,qBACnC,cAAC4P,GAAD,aAAYxO,MAAOpB,EAAE,QAAS6P,QAASsW,GAAiBxU,IACxD,cAACtR,EAAD,2BAAmB0a,GAAnB,IAA4Bxa,SAAS,aACrC,cAACF,EAAD,eAAmBwJ,QEzGpB,SAASkhB,GAAazqB,GACzB,OACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAO0qB,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY1qB,MAClC,cAAC,KAAD,CAAO2qB,OAAK,EAACD,KAAK,SAAlB,SAA2B,cAAC,GAAD,eAAW1qB,MACtC,cAAC,KAAD,CAAO2qB,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAAC,GAAD,eAAW1qB,MACjC,cAAC,KAAD,CAAO2qB,OAAK,EAACD,KAAI,UAAK1c,qBAAL,KAAjB,SAAiD,cAAC,GAAD,eAAWhO,MAC5D,cAAC,KAAD,UAAO,cAAC,GAAD,SAKZ,SAAS4qB,GAAc5qB,GAC1B,OACI,eAAC,KAAD,WACI,cAAC,KAAD,CAAO0qB,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY1qB,MADtC,IAEI,cAAC,KAAD,UAAO,cAAC,GAAD,eAAiBA,MAF5B,OAOD,SAAS6qB,GAAc7qB,GAC1B,IAAMyB,EAAOa,qBAAWC,IACxB,QAAagM,IAAT9M,EAAoB,OAAO,cAAC2C,EAAA,EAAD,IAE/B,IAAM0mB,EAEM,kBAAM,cAAC,KAAD,CAAOJ,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY1qB,OAF9C8qB,EAGI,kBAAM,cAAC,KAAD,CAAOJ,KAAK,QAAZ,SAAoB,cAAC,GAAD,eAAU1qB,OAHxC8qB,EAIO,kBAAM,cAAC,KAAD,CAAOJ,KAAK,WAAZ,SAAuB,cAAC,GAAD,eAAa1qB,OAJjD8qB,EAKS,kBAAM,cAAC,KAAD,CAAOJ,KAAK,aAAZ,SAAyB,cAAC,GAAD,eAAe1qB,OALvD8qB,EAMQ,kBAAM,cAAC,KAAD,CAAOJ,KAAK,YAAZ,SAAwB,cAAC,GAAD,eAAc1qB,OANpD8qB,EAOY,kBAAM,cAAC,KAAD,CAAOJ,KAAK,gBAAZ,SAA4B,cAAC,GAAD,eAAkB1qB,OAPhE8qB,EAQS,kBAAM,cAAC,KAAD,CAAOJ,KAAK,aAAZ,SAAyB,cAAC,GAAD,eAAe1qB,OARvD8qB,EASQ,kBAAM,cAAC,KAAD,CAAOJ,KAAK,YAAZ,SAAwB,cAAC,GAAD,eAAc1qB,OATpD8qB,EAUI,kBAAM,cAAC,KAAD,CAAOH,OAAK,EAACD,KAAK,IAAlB,SAAsB,cAAC,GAAD,eAAU1qB,OAV1C8qB,EAWI,kBAAM,cAAC,KAAD,CAAOH,OAAK,EAACD,KAAI,UAAK1c,qBAAL,KAAjB,SAAiD,cAAC,GAAD,eAAUhO,OAGrE+qB,EAAc,CAbR,kBAAM,cAAC,KAAD,CAAOL,KAAK,UAAZ,SAAsB,cAAC,GAAD,eAAY1qB,MAa/B8qB,GACjBA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,IACAA,KAEEE,EAAiB,CAACF,KAExB,OACI,eAAC,KAAD,WACmB,cAAdrpB,EAAKe,MAAwBwoB,EAC7BD,EACD,cAAC,KAAD,UAAO,cAAC,GAAD,S,wBC9DnB,SAASE,GAAU3iB,GACf,OAAOA,EAASC,KAAKA,K,ICSnBqJ,GAAiB,I,WDDnB,WAAY3D,GAAmB,IAAD,iCAJbid,iBAIa,OAHbC,0BAGa,OAFbld,aAEa,EAC1BpF,KAAKoF,QAAUA,EACfpF,KAAKqiB,YAAc,IAAIE,KAAgB1hB,aAAaC,QAAQ,UAC5Dd,KAAKsiB,qBAAuBtiB,KAAKqiB,YAC5BG,KAAKxsB,cAAI,SAAC6L,GAAD,OAAoB,MAATA,GAA2B,KAAVA,MAE1CyM,OAAOhD,iBAAiB,WAAW,WAC/B,IAAMzJ,EAAQhB,aAAaC,QAAQ,SAC/Be,IAAU,EAAKwgB,YAAY1lB,OAAO,EAAK0lB,YAAYI,KAAK5gB,M,+CAIpE,WACI,OAAO7B,KAAKsiB,uB,wBAGhB,SAAWxI,EAAsB1Y,GAC7B,OAAOpB,KAAKoF,QACPmQ,IAAI,eAAgB,CAACzS,OAAQ,CAAC,KAAQgX,EAAc,MAAS1Y,O,mBAGtE,SAAMA,EAAe2B,GAAc,IAAD,OAC9B,OAAO/C,KAAKoF,QACPmQ,IAA6B,SAAU,CAACzS,OAAQ,CAAC,MAAS1B,EAAO,IAAO2B,KACxExM,KAAK6rB,IACL7rB,MAAK,SAACkJ,GACH,IAAOoC,EAASpC,EAAToC,MACPhB,aAAaiB,QAAQ,QAASD,GAC9B,EAAKwgB,YAAYI,KAAK5gB,Q,oBAIlC,WAAwB,IAAD,OACnB,OAAO7B,KAAKoF,QACPmQ,IAAI,UAAWvV,KAAK0iB,WACpBtZ,SAAQ,WACLvI,aAAaqC,WAAW,SACxB,EAAKmf,YAAYI,KAAK,W,qBAIlC,WACI,OAAOziB,KAAKoF,QACPmQ,IAAyB,QAASvV,KAAK0iB,WACvCnsB,KAAK6rB,M,0BAGd,WACI,OAAOpiB,KAAKoF,QACPmQ,IAA+B,aAAcvV,KAAK0iB,WAClDnsB,KAAK6rB,M,yBAGd,SAAY/gB,GACR,OAAOrB,KAAKoF,QACPud,MAAM,cAAgBthB,EAASzK,GAAI,CAAC8I,KAAM,CAACgC,OAAQL,EAASK,SAAU1B,KAAK0iB,a,gCAGpF,SAAmBvf,GACf,OAAOnD,KAAKoF,QACPmQ,IAAwB,qBAAuBpS,EAAMnD,KAAK0iB,WAC1DnsB,KAAK6rB,M,sBAGd,WACI,OAAOpiB,KAAKoF,QACPmQ,IAAyB,SAAUvV,KAAK0iB,WACxCnsB,KAAK6rB,M,4BAGd,WACI,OAAOpiB,KAAKoF,QACPmQ,IAAqC,eAAgBvV,KAAK0iB,WAC1DnsB,KAAK6rB,M,2BAGd,SAAcjf,GACV,OAAOnD,KAAKoF,QACPmQ,IAA+D,gBAAkBpS,EAAMnD,KAAK0iB,WAC5FnsB,KAAK6rB,M,2BAGd,SAAcjf,EAAcxB,GACxB,OAAO3B,KAAKoF,QACPwd,IAAI,gBAAkBzf,EAAM,CAACzD,KAAMiC,GAAc3B,KAAK0iB,a,0BAG/D,SAAavf,GACT,OAAOnD,KAAKoF,QACPmQ,IAA8B,eAAiBpS,EAAMnD,KAAK0iB,WAC1DnsB,KAAK6rB,M,2BAGd,SAAc3J,GACV,OAAOzY,KAAKoF,QACPyd,KAAK,cAAe,CAACnjB,KAAM+Y,GAAYzY,KAAK0iB,a,yBAGrD,SAAYvf,GACR,OAAOnD,KAAKoF,QACPmQ,IAA6B,aAAepS,EAAMnD,KAAK0iB,WACvDnsB,KAAK6rB,M,6BAGd,SAAgBxF,GACZ,IAAMkG,EAAS9d,KAAM+d,YAAYD,SAC3BE,EAAW,IAAIC,SAErB,OADAD,EAASE,OAAO,SAAUtG,EAAMA,EAAKzb,MAC9B,CACHmB,QAAStC,KAAKoF,QAAQyd,KAAK,gBAAiBG,EAAUhjB,KAAK0iB,QAAQ,CAACjG,YAAaqG,EAAOjhB,SACxF4a,YAAaqG,K,0BAIrB,SAAapjB,GACT,OAAOM,KAAKoF,QACPyd,KAAK,YAAa,CAACnjB,KAAMA,GAAO,M,qBAGzC,SAAgBS,GACZ,OAAO,2BAAIA,GAAX,IAAmBD,QAAS,CAAC8C,cAAc,GAAD,OAAKhD,KAAKqiB,YAAY1lB,c,KCvHjD,CAAmBwmB,GAAO/d,SACpC1L,GAAcJ,IAAM8pB,cAAyB,CAACxsB,GAAI,GAAIwK,MAAO,GAAIzH,KAAM,GAAIuH,SAAU,KACrF8J,GAAmB1R,IAAM8pB,cAA4B,CAC9DlY,UAAMxF,EACNkZ,gBAAiB,SAACxf,OAmFPikB,OArEf,WACI,MCvC2B,WAC3B,IAAMpY,EAAkBjO,aAAc,gCACtC,EAAwBN,qBAAxB,mBAAOwO,EAAP,KAAaoY,EAAb,KACM7E,EAAYzJ,mBAAQ,iBAAO,CAAC9J,KAAMA,EAAM0T,gBAAiB0E,KAAW,CAACA,EAASpY,IAC9EqY,EAAerY,EAAgB,SAATA,EAAkBD,EAwD9C,MAAO,CAvDqB+J,mBAAQ,kBAAMwO,aAAY,CAClDvN,QAAS,CACL/K,KAAMqY,EAAe,OAAS,QAC9BroB,QAAS,CACL8kB,KAAMyD,KAAW,KACjB/L,aAAc,QAElBgM,UAAW,CACP1D,KAAMyD,KAAW,OAGzBE,WAAY,CACRC,UAAW,CACPC,aAAc,CACVnmB,UAAW6lB,EAAe,EAAI,EAC9BlnB,MAAO,YAGfynB,iBAAkB,CACdD,aAAc,CACVE,OAAO,IAGfC,QAAS,CACLH,aAAc,CACVha,QAAS,IAGjBoa,QAAS,CACLJ,aAAc,CACVhsB,QAAS,WACT2P,QAAQ,IAGhB0c,OAAQ,CACJC,eAAgB,CACZC,KAAM,CACF9mB,SAAU,QACVC,OAAQ,OACR8mB,MAAO,UAInBC,YAAa,CACTH,eAAgB,CACZI,yBAA0B,CAEtB,8BAA+B,CAC3BhnB,OAAQ,gBAM5B,CAACgmB,IACU9E,GDrBY+F,GAA3B,mBAAO3nB,EAAP,KAAc4hB,EAAd,KACA,EAAwB/hB,qBAAxB,mBAAO9D,EAAP,KAAa6rB,EAAb,KACA,EAAoC/nB,qBAApC,mBAAOgoB,EAAP,KAAmBC,EAAnB,KACA,EAA0BxlB,KAA1B,mBAAOuB,EAAP,KAAcoI,EAAd,KACM8b,EAAmBrlB,uBAAY,SAACG,GAAD,OAAeqJ,GAAe8b,aAAanlB,GAAM+C,MAAM3C,QAAQC,OAAM,IACnGoI,EAASH,sBAAY,GAAI,CAAC8c,SAAUF,IAApCzc,MACP,EpC1BqC,WACrC,MAA0BzL,mBAA8E,CACpGhF,MAAM,EACNI,QAAS,GACTgf,SAAU,eAHd,mBAAO1X,EAAP,KAAcC,EAAd,KAMM0lB,EAAcxlB,uBAAY,SAACzH,EAAiBgf,GAAlB,OAC5BzX,EAAS,CAAC3H,MAAM,EAAMI,QAASA,EAASgf,SAAUA,MAAY,IAC5DkO,EAAUzlB,uBAAY,SAACkB,GACzBpB,GAAS,SAAAC,GAEL,OADAA,EAAUwX,SAASrW,GACZ,2BAAInB,GAAX,IAAsB5H,MAAM,SAEjC,IACH,MAAO,CAAC,CACJA,KAAM0H,EAAM1H,KACZwH,SAAU,kBAAM8lB,GAAQ,IACxBrtB,QAAS,kBAAMqtB,GAAQ,IACvBltB,QAASsH,EAAMtH,SAChBitB,GoCM0CE,GAA7C,mBAAOC,EAAP,KAA8BH,EAA9B,KACA,EAA0BroB,mBAAS,GAAnC,mBAAOiL,EAAP,KAAcwd,EAAd,KACMC,EAAU7lB,uBAAY,kBAAM4lB,GAAS,SAAA7lB,GAAS,OAAIA,EAAY,OAAI,IAClE+lB,EAAkBzsB,EAExByQ,qBAAU,WACNN,GAAe2b,aACVY,WAAU,SAAC3oB,GAAD,OAAWgoB,EAAchoB,QACzC,IAEH0M,qBAAU,WACDqb,EAGD3b,GAAewc,UACVhvB,KAAKkuB,EAAS3b,GACdrG,MAAM3C,QAAQY,OAJnB+jB,OAAQ/e,KAMb,CAACgf,EAAY5b,EAAUnB,IAE1B,MAA4BjL,mBAAsB,CAACzE,MAAO,GAAIuD,SAAU,kBAAM,gCAA9E,mBAAOgqB,EAAP,KAAexc,EAAf,KAEA,OACI,eAACyc,EAAA,EAAD,CAAe5oB,MAAOA,EAAtB,UACI,cAAC6oB,EAAA,EAAD,SACgBhgB,IAAfgf,GACD,cAAC,IAAMrpB,SAAP,CAAgBC,SAAU,cAACC,EAAA,EAAD,IAA1B,SACI,cAACyP,GAAiB2a,SAAlB,CAA2BhpB,MAAO8hB,EAAlC,SACI,eAAC,IAAD,CAAQmH,SAAQ,UAAKzgB,qBAAL,KAAgC0gB,oBAAqBd,EAArE,WACML,GAAc,cAAC9C,GAAD,CAAc7Y,eAAgBA,KAC7C2b,GAAcW,GACf,cAAC3rB,GAAYisB,SAAb,CAAsBhpB,MAAO/D,EAA7B,SACI,eAACuP,EAAD,WACI,eAAC1M,EAAD,WACI,cAACG,GAAD,CAAe3D,MAAOutB,EAAOvtB,MAAOuD,SAAUgqB,EAAOhqB,aACrD,cAACnC,EAAD,IACA,cAAC8B,EAAD,UACI,cAAC2qB,EAAA,EAAD,CAAsBC,YAAaC,IAAnC,SACI,cAAChE,GAAD,CACIjZ,eAAgBA,GAChBC,UAAWA,WAK3B,cAAC,GAAD,SAIP0b,IAAeW,GAChB,cAACtD,GAAD,CAAehZ,eAAgBA,GAAgBpB,MAAOyd,IAEtD,cAAC,GAAD,eAA4BF,IAC5B,cAAChuB,EAAD,2BAAmBwJ,GAAnB,IAA0BtJ,SAAS,sB,2FE/FrD6uB,GAAkC,CAAC,GAAMC,KAAI,GAAMC,MACnDC,GAAYC,MAAmB,SAAC1M,EAAU2M,EAAWxP,GACvD,OAAO,YAAa6C,EAApB,YAAgC2M,EAAhC,UACK/vB,MAAK,SAAC6vB,GAAD,OAAetP,EAAS,KAAMsP,MACnC3jB,OAAM,SAAC/B,GAAD,OAAWoW,EAASpW,EAAO,YAG1C+Y,KAAK8M,IAAIH,IACJG,IAAIC,MACJD,IAAIE,MACJC,KAAK,CAEFC,YAAa,KACbC,cAAe,CACXC,aAAa,EACbC,OAAQ,SAACnqB,EAAOmqB,EAAQC,GACpB,GAAIpqB,aAAiByH,KAAM,IACvB,OAAO4iB,aAAWrqB,EAAOmqB,EAAS,CAACG,OAAQhB,GAAKc,KAClD,MAAOvwB,GACLsJ,QAAQY,MAAMlK,GAElB,OAAOmG,IAGfyI,QAAS,CAEL8hB,SAAS,GAAD,OAAK/hB,qBAAL,mCAILsU,GAAf,EAAeA,ICzBT0N,GAAcC,QACW,cAA7B9Y,OAAOpN,SAASmmB,UAEe,UAA7B/Y,OAAOpN,SAASmmB,UAEhB/Y,OAAOpN,SAASmmB,SAASC,MAAM,2DA0CnC,SAASC,GAAgBC,EAAernB,GACtCsnB,UAAUC,cACPC,SAASH,GACTjxB,MAAK,SAACqxB,GACLA,EAAaC,cAAgB,WAC3B,IAAMC,EAAmBF,EAAaG,WACd,MAApBD,IAGJA,EAAiBE,cAAgB,WACA,cAA3BF,EAAiB1oB,QACfqoB,UAAUC,cAAcO,YAI1BnoB,QAAQC,IACN,+GAKEI,GAAUA,EAAO+nB,UACnB/nB,EAAO+nB,SAASN,KAMlB9nB,QAAQC,IAAI,sCAGRI,GAAUA,EAAOgoB,WACnBhoB,EAAOgoB,UAAUP,WAO5BnlB,OAAM,SAAC/B,GACNZ,QAAQY,MAAM,4CAA6CA,MCjGjE,IAYe0nB,GAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,8BAAqB/xB,MAAK,YAAkD,IAA/CgyB,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCAdO,KAASC,OACL,cAAC,IAAMC,WAAP,UACI,cAAC,GAAD,MAEJ1c,SAAS2c,eAAe,SFYrB,SAAkB5oB,GACvB,GAA6C,kBAAmBsnB,UAAW,CAGzE,GADkB,IAAIuB,IAAI7jB,qBAAwBmJ,OAAOpN,SAASwZ,MACpDuO,SAAW3a,OAAOpN,SAAS+nB,OAIvC,OAGF3a,OAAOhD,iBAAiB,QAAQ,WAC9B,IAAMkc,EAAK,UAAMriB,qBAAN,sBAEPgiB,KAgEV,SAAiCK,EAAernB,GAE9C+oB,MAAM1B,EAAO,CACXtnB,QAAS,CAAE,iBAAkB,YAE5B3J,MAAK,SAACkJ,GAEL,IAAM0pB,EAAc1pB,EAASS,QAAQqV,IAAI,gBAEnB,MAApB9V,EAASQ,QACO,MAAfkpB,IAA8D,IAAvCA,EAAYC,QAAQ,cAG5C3B,UAAUC,cAAc2B,MAAM9yB,MAAK,SAACqxB,GAClCA,EAAa0B,aAAa/yB,MAAK,WAC7B+X,OAAOpN,SAASqoB,eAKpBhC,GAAgBC,EAAOrnB,MAG1BsC,OAAM,WACL3C,QAAQC,IAAI,oEAtFVypB,CAAwBhC,EAAOrnB,GAI/BsnB,UAAUC,cAAc2B,MAAM9yB,MAAK,WACjCuJ,QAAQC,IACN,+GAMJwnB,GAAgBC,EAAOrnB,OEjC/BspB,GAKArB,O","file":"static/js/main.4316d126.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t304,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t305,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 295;\nmodule.exports = webpackAsyncContext;","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {SettingsOutlined} from \"@mui/icons-material\";\nimport AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_well_being_title', subtitle: 'card_well_being_subtitle', icon: Mood, to: '/wellBeing'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user.type) {\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [destinations.home, destinations.user];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user.type) {\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [destinations.home, destinations.user];\n    }\n}\n\n","import {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nconst sx = {ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}};\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props>) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={sx}>\n                <Toolbar>\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle children={props.title}/>\n            {props.children}\n        </Dialog>\n    );\n}\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {AxiosError} from \"axios\";\nimport {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\ninterface ResponseType {\n    title: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((reason: AxiosError<ResponseType> | string) => {\n        if (typeof reason === 'string') return setState({open: true, message: reason});\n        if (!reason.response) return setState({open: true, message: reason.message});\n        if (!reason.response.data.title) return setState({open: true, message: reason.response.statusText});\n        setState({open: true, message: reason.response.data.title});\n    }, []);\n    return [props, pushMessage] as const\n}\n","export interface Executor {\n    ok<T>(data: T): void\n\n    error(response?: {status: number, statusText?: string}): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok<T>(data: T) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error(response?: {status: number, statusText?: string}) {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: response?.status ?? 400,\n                statusText: response?.statusText ?? \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok<T>(data: T): void {\n        if (Math.random() > 0.6) this.executor.ok(data); else this.executor.error();\n    }\n\n    error(response?: {status: number, statusText?: string}) {\n        this.executor.error(response);\n    }\n}\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"homeowner@test.com\",\n            \"faultyuser@test.com\",\n            \"faultyhomeowner@test.com\"\n        ];\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        id: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"homeowner@test.com\": {\n                        id: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    },\n                    \"faultyuser@test.com\": {\n                        id: 'faultyuser',\n                        email: 'faultyuser@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faultyhomeowner@test.com\": {\n                        id: 'faultyhomeowner',\n                        email: 'faultyhomeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    },\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {type: 'laundry'}, {type: 'cooking'}, {type: 'dishes'}, {type: 'hygiene'}, {type: 'entertainment'},\n                        {type: 'wellness'}, {type: 'homeoffice'}, {type: 'emobility'}, {type: 'temperature'},\n                        {type: 'high'}, {type: 'med'}, {type: 'low'},\n                    ].map((v, i) => ({\n                        id: i.toString(),\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                predictions: Object.assign({}, ...users.map((user) => ({\n                    [user]: {\n                        \"2021-01-10\": {\n                            validated: false,\n                            data: []\n                        },\n                        \"2021-01-04\": {\n                            validated: true,\n                            data: []\n                        },\n                        \"2021-01-02\": {\n                            validated: false,\n                            data: []\n                        },\n                        \"2021-01-01\": {\n                            validated: true,\n                            data: []\n                        },\n\n                    }\n                }))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faultyuser@test.com\",\n                    \"fakeToken.thistokenisfake6\": \"faultyhomeowner@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","import {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {Backend} from \"./Backend\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {ConsumerModel, FeedbackModel, TaskModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nconst defaultDelay = 50;\n\nfunction delayedPromise<T>(promise: Promise<T>, delay = defaultDelay): Promise<T> {\n    return promise\n        .then(value => new Promise<T>(resolve => setTimeout(() => resolve(value), delay)))\n        .catch(reason => new Promise<T>((resolve, reject) => setTimeout(() => reject(reason), delay)));\n}\n\nclass FakeBackend implements Backend {\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request-pin')) {\n                const {code, email} = config.params;\n                if (code === 'test' && db.user[email]!!) return e.ok({})\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, otp} = config.params;\n                const user = db.user[email]\n                if (user != null && otp === \"123456\") return e.ok({data: {token: findInDict(db.token, (v: string) => v === email)}})\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok({data: db.user[user]})\n            } else if (url.endsWith('/consumers')) {\n                e.ok({data: db.consumer[user]})\n            } else if (url.endsWith('/predictions')) {\n                e.ok({\n                    data: Object.keys(db.predictions[user]).map(date => ({\n                            validated: db.predictions[user][date].validated,\n                            date: date\n                        })\n                    )\n                })\n            } else if (url.includes('/predictions/')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                const prediction = db.predictions[user][date];\n                console.log(db.predictions[user])\n                if (!prediction) return e.error({status: 404, statusText: 'Not found'})\n                e.ok({data: prediction})\n            } else if (url.includes('/available-energy/')) {\n                e.ok({data: [0, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 1, 1, 0.8, 0.6, 0.6, 0.4, 0.3, 0.5, 0.7, 0.3, 0, 0]})\n            } else if (url.includes('/well-being/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                const mood = db.mood[user][index]\n                if (!mood) return e.error({status: 404})\n                e.ok({data: mood})\n            } else if (url.endsWith('/tasks')) {\n                e.ok<{ data: TaskModel }>({\n                    data: {\n                        todoPrediction: true,\n                        todoVerifyPrediction: true,\n                        todoUpload: true,\n                        todoWellBeing: true\n                    }\n                })\n            } else if (url.includes('/feedback/')) {\n                e.ok<{ data: FeedbackModel }>({\n                    data: {\n                        totalUsage: {\n                            self: 4,\n                            others: 3.6\n                        },\n                        relativeUsage: {\n                            high: 0.25,\n                            med: 0.35,\n                            low: 0.4\n                        }\n                    }\n                })\n            } else {\n                e.error()\n            }\n        });\n        return delayedPromise(promise);\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token];\n            if (user == null) return e.error();\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n            if (url.endsWith('/consumptions')) {\n                e.ok({});\n            } else if (url.startsWith('/well-being')) {\n                const date = new Date().toISOString().slice(0, 10);\n                db.mood[user][date] = data.data;\n                saveFakeDB(db);\n\n                e.ok({})\n            }\n            e.error();\n        })\n        if (url.endsWith('/consumptions')) return delayedPromise(promise, 3000);\n        return delayedPromise(promise);\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = {validated: true, data: data.data};\n                saveFakeDB(db);\n\n                e.ok({})\n            } else {\n                e.error()\n            }\n        })\n        return delayedPromise(promise);\n    }\n\n    patch<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig<any>): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PATCH Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumers')) {\n                const {active} = data.data;\n                meldArrayElement<ConsumerModel>(db.consumer[user], c => c.id.toString() === id.toString(), {active: active})\n                saveFakeDB(db);\n\n                e.ok({})\n            } else {\n                e.error()\n            }\n        })\n        return delayedPromise(promise);\n    }\n}\n\nfunction meldArrayElement<T>(array: Array<T>, elementMatcher: (value: T) => boolean, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {InfoOutlined} from \"@mui/icons-material\";\nimport {Box, Card, CardActionArea, CardContent, CardMedia, IconButton, SvgIcon, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nexport interface DestinationCardProps {\n    to: string\n    icon: React.ElementType\n    title: string\n    subtitle: string\n    done?: boolean\n    secondaryTo?: string\n    secondaryIcon?: React.ElementType\n}\n\nexport function DestinationCard(props: DestinationCardProps) {\n    const {to, icon, title, subtitle, done} = props;\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\", display: \"flex\", flexDirection: \"row\"}}>\n            <CardActionArea component={RouterLink} to={to}>\n                <Box sx={{display: \"flex\", flexGrow: 1}}>\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{subtitle}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n            {props.secondaryTo &&\n            <IconButton component={RouterLink} to={props.secondaryTo} size=\"large\" sx={{alignSelf: \"center\", m: 1}}>\n                <SvgIcon component={props.secondaryIcon ?? InfoOutlined}/>\n            </IconButton>\n            }\n        </Card>\n    )\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nfunction AttentionIcon(props: { requiresAttention?: boolean, icon: JSX.Element }) {\n    return <Badge invisible={!props.requiresAttention} variant=\"dot\" color=\"info\">{props.icon}</Badge>\n}\n\nfunction SmallIconButton(props: Props) {\n    return (\n        <Tooltip title={props.description}>\n            <IconButton\n                color=\"inherit\"\n                onClick={props.onClick}\n                size=\"large\"\n                children={<AttentionIcon {...props}/>}\n            />\n        </Tooltip>\n    )\n}\n\nfunction LargeIconButton(props: Props) {\n    return (\n        <Button startIcon={<AttentionIcon {...props}/>}\n                color=\"inherit\"\n                onClick={props.onClick}\n                children={props.description}\n        />\n    )\n}\n\nfunction ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    if (breakpoint) return <SmallIconButton {...props}/>\n    return <LargeIconButton {...props}/>\n}\n\nexport default ResponsiveIconButton;\n\n","import {Button, Container, Paper, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction RetryMessage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper variant=\"outlined\" square sx={{p: 2, mt: 3, display: \"flex\", flexDirection: \"column\"}}>\n                <Typography>{t('error_please_retry')}</Typography>\n                <Button\n                    sx={{mt: 5, alignSelf: \"flex-end\"}}\n                    onClick={props.retry}\n                    children={t('retry')}/>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default RetryMessage;\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: new Date(), user: user?.id ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {BarChartOutlined, CheckCircleOutlined, InfoOutlined, RadioButtonUncheckedOutlined} from \"@mui/icons-material\";\nimport {Container, DialogContentText, LinearProgress, Stack} from \"@mui/material\";\nimport {parse} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard} from \"./common/DestinationCard\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {PredictionDateEntry} from \"./service/Model\";\n\nfunction Archive(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [entries, setEntries] = useState<PredictionDateEntry[]>();\n    const [progress, setProgress] = useState(true);\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n    const failed = !progress && !entries;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getPredictions()\n            .then(setEntries, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false))\n    }, [backendService, setError])\n\n    useEffect(initialLoad, [initialLoad])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            children: () => <ResponsiveIconButton\n                description={t('info')}\n                icon={<InfoOutlined/>}\n                onClick={openInfo}\n            />\n        });\n    }, [t, setAppBar, openInfo])\n\n    const InfoContent = () => {\n        const infoText = t('info_archive', {returnObjects: true}) as string[]\n        return <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {entries &&\n            <Container maxWidth=\"sm\" sx={{pt: 1}}>\n                <Stack spacing={1}>\n                    {entries.map(entry => {\n                            const parsedDate = parse(entry.date, 'yyyy-MM-dd', new Date())\n                            const done = entry.validated;\n                            return <DestinationCard\n                                to={`/pastbehavior?date=${entry.date}`}\n                                icon={done ? CheckCircleOutlined : RadioButtonUncheckedOutlined}\n                                title={t('archive_entry_date', {date: parsedDate})}\n                                subtitle={t(done ? t('archive_already_done') : t('archive_please_check'))}\n                                done={done}\n                                secondaryTo={(done && `/feedback?date=${entry.date}`) || undefined}\n                                secondaryIcon={(done && BarChartOutlined) || undefined}\n                            />\n                        }\n                    )}\n                </Stack>\n            </Container>\n            }\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n    readonly?: boolean\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        if (this.props.readonly) return;\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import {green, red, yellow} from \"@mui/material/colors\";\nimport {decomposeColor} from \"@mui/system/colorManipulator\";\n\nexport default function colorGradient(fade: number): string {\n    const color1 = decomposeColor(fade >= 0.5 ? yellow[500] : green[500]);\n    const color2 = decomposeColor(fade >= 0.5 ? red[500] : yellow[500]);\n    fade = 2 * (fade >= 0.5 ? fade - 0.5 : fade);\n    const [r, g, b] = color1.values.map((value, index) => Math.floor(value + (color2.values[index] - value) * fade));\n    return `rgb(${r}, ${g}, ${b})`;\n}\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\ninterface Consumer {\n    icon: JSX.Element\n    tKey: string\n    color: string\n    colorAlt: string\n}\n\nconst consumers: { [index: string]: Consumer } = {\n    laundry: {\n        icon: <LocalLaundryService/>,\n        tKey: 'consumer_type_laundry',\n        color: blue[shadeDefault],\n        colorAlt: blue[shadeAlt]\n    },\n    cooking: {\n        icon: <Restaurant/>,\n        tKey: 'consumer_type_cooking',\n        color: pink[shadeDefault],\n        colorAlt: pink[shadeAlt]\n    },\n    dishes: {\n        icon: <FreeBreakfast/>,\n        tKey: 'consumer_type_dishes',\n        color: purple[shadeDefault],\n        colorAlt: purple[shadeAlt]\n    },\n    hygiene: {\n        icon: <Bathtub/>,\n        tKey: 'consumer_type_hygiene',\n        color: blue[shadeDefault],\n        colorAlt: blue[shadeAlt]\n    },\n    entertainment: {\n        icon: <Movie/>,\n        tKey: 'consumer_type_entertainment',\n        color: teal[shadeDefault],\n        colorAlt: teal[shadeAlt]\n    },\n    wellness: {\n        icon: <Spa/>,\n        tKey: 'consumer_type_wellness',\n        color: green[shadeDefault],\n        colorAlt: green[shadeAlt]\n    },\n    homeoffice: {\n        icon: <Computer/>,\n        tKey: 'consumer_type_homeoffice',\n        color: red[shadeDefault],\n        colorAlt: red[shadeAlt]\n    },\n    emobility: {\n        icon: <Power/>,\n        tKey: 'consumer_type_emobility',\n        color: blue[shadeDefault],\n        colorAlt: blue[shadeAlt]\n    },\n    temperature: {\n        icon: <AcUnit/>,\n        tKey: 'consumer_type_temperature',\n        color: pink[shadeDefault],\n        colorAlt: pink[shadeAlt]\n    },\n    high: {\n        icon: <Help/>,\n        tKey: 'consumer_type_high',\n        color: red[shadeDefault],\n        colorAlt: red[shadeAlt]\n    },\n    med: {\n        icon: <Help/>,\n        tKey: 'consumer_type_med',\n        color: amber[shadeDefault],\n        colorAlt: amber[shadeAlt]\n    },\n    low: {\n        icon: <Help/>,\n        tKey: 'consumer_type_low',\n        color: green[shadeDefault],\n        colorAlt: green[shadeAlt]\n    },\n    unknown: {\n        icon: <Help/>,\n        tKey: 'consumer_type_unknown',\n        color: purple[shadeDefault],\n        colorAlt: purple[shadeAlt]\n    }\n}\n\nexport const consumerLookup = (type: string): Consumer => type in consumers ? consumers[type] : consumers.unknown\n","export default function handle404<T>(promise: Promise<T>, on404: () => T) {\n    return new Promise<T>((resolve, reject) => {\n        promise\n            .then(resolve)\n            .catch((reason: { response?: { status: number } }) => {\n                if (reason.response?.status === 404) {\n                    resolve(on404())\n                } else {\n                    reject(reason)\n                }\n            })\n    })\n}\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport colorGradient from \"./common/ColorGradient\";\nimport {consumerLookup} from \"./common/ConsumerTools\";\nimport handle404 from \"./common/Handle404\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\n\nconst today = new Date();\nconst date = new Date();\ndate.setDate(today.getDate() + 1)\nconst isoDate = date.toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [availableEnergy, setAvailableEnergy] = useState<string[]>();\n    const [progress, setProgress] = useState(true);\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n    const failed = !progress && !rows;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        Promise.all([\n            backendService.getConsumers(),\n            handle404(backendService.getPrediction(isoDate), () => ({validated: false, data: []})),\n            backendService.getAvailableEnergy(isoDate)\n        ]).then(([consumers, predictions, energy]) => {\n            const cellStates = consumers\n                .filter((c) => c.active)\n                .map((c) => {\n                    const {color, colorAlt, tKey, icon} = consumerLookup(c.type);\n                    return {\n                        header: (\n                            <Tooltip title={<>{t(tKey)}</>} enterTouchDelay={0}>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    sx={{width: 30, height: 30, backgroundColor: color}}\n                                    children={icon}\n                                />\n                            </Tooltip>\n                        ),\n                        consumerId: c.id,\n                        cellStates: predictions.data.find((p) => p.consumerId === c.id)?.data ?? hours.map(() => 0),\n                        colorSelected: color,\n                        colorBeingSelected: colorAlt\n                    }\n                });\n            setAvailableEnergy(energy?.map(colorGradient) ?? [])\n            setRows(cellStates);\n            setModified(false);\n        }, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [t, backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!rows) return;\n        rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    const InfoContent = () => {\n        const infoText = t('info_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {rows &&\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) =>\n                                    <TableCell align=\"center\" sx={{border: 0}}>{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            {availableEnergy &&\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {availableEnergy.map((v) =>\n                                    <TableCell sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                            }\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            }\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.id === b.id &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = t('consumer_type_' + consumer.type);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.id}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, LinearProgress, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>();\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [progress, setProgress] = useState(true);\n    const failed = !consumers && !progress;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) => {\n        return backendService.putConsumer({...consumer, active: !consumer.active})\n            .then(() => backendService.getConsumers())\n            .then(setConsumers, setError)\n            .catch(console.log);\n    }, [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const InfoContent = () => {\n        const infoText = t('info_consumers', {returnObjects: true}) as string[]\n        const consumerHelp = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {consumerHelp.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {consumers &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers.map((it) =>\n                            <ConsumerCard key={it.id} consumer={it} clickActive={applyChangeActive}/>\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            }\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import {ShowChartOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, Grid, LinearProgress, Paper, useTheme} from \"@mui/material\";\nimport {blue, green, red, yellow} from \"@mui/material/colors\";\nimport {ChartData, ChartOptions, Plugin as ChartPlugin} from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {Bar, Pie} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {FeedbackModel} from \"./service/Model\";\n\nconst useBarChartData: (data: { self: number, others: number }) => ChartData<\"bar\"> = (data) => {\n    const theme = useTheme();\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        labels: [t('feedback_energy_consumption')],\n        datasets: [\n            {\n                label: t('feedback_my_energy_consumption'),\n                data: [data.self],\n                backgroundColor: red[\"800\"],\n                borderColor: theme.palette.background.paper,\n            },\n            {\n                label: t('feedback_other_energy_consumption'),\n                data: [data.others],\n                backgroundColor: blue[\"800\"],\n                borderColor: theme.palette.background.paper,\n            },\n        ],\n    }), [theme, data.self, data.others, t]);\n};\nconst usePieChartData: (data: { high: number, med: number, low: number }) => ChartData<\"pie\"> = (data) => {\n    const theme = useTheme();\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        labels: [t('feedback_high_energy'), t('feedback_med_energy'), t('feedback_low_energy')],\n        datasets: [\n            {\n                data: [data.high, data.med, data.low].map(v => v * 100),\n                backgroundColor: [green[\"800\"], yellow[\"800\"], red[\"800\"]],\n                borderColor: theme.palette.background.paper,\n            },\n        ],\n    }), [theme, data.high, data.med, data.low, t]);\n}\nconst useBarChartOptions: () => ChartOptions<\"bar\"> = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        responsive: true,\n        scales: {\n            xAxis: {display: false},\n            yAxis: {\n                position: \"right\",\n                grid: {\n                    drawBorder: false,\n                    color: theme.palette.divider\n                },\n                ticks: {\n                    callback: tickValue => tickValue + \" kWh\",\n                    padding: 10,\n                    stepSize: 1,\n                    color: theme.palette.text.primary,\n                    font: {family: theme.typography.fontFamily}\n                }\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    font: {family: theme.typography.fontFamily},\n                    color: theme.palette.text.primary\n                }\n            },\n            tooltip: {enabled: false},\n            datalabels: {\n                color: theme.palette.primary.contrastText,\n                font: {\n                    family: theme.typography.fontFamily,\n                    size: 20,\n                },\n                formatter: value => value.toFixed(1) + \" kWh\"\n            }\n        }\n    }), [theme]);\n}\nconst usePieChartOptions: () => ChartOptions<\"pie\"> = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        responsive: true,\n        scales: {\n            xAxis: {display: false},\n            yAxis: {display: false}\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    font: {family: theme.typography.fontFamily},\n                    color: theme.palette.text.primary\n                }\n            },\n            tooltip: {enabled: false},\n            datalabels: {\n                color: theme.palette.primary.contrastText,\n                font: {\n                    family: theme.typography.fontFamily,\n                    size: 20,\n                },\n                formatter: value => value.toFixed(1) + \"%\"\n            }\n        }\n    }), [theme]);\n}\n\nfunction Feedback(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Feedback'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [openBehavior, setOpenBehavior] = useState(false);\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n    const {setAppBar, backendService} = props;\n\n    const [feedback, setFeedback] = useState<FeedbackModel>()\n    const [progress, setProgress] = useState(true);\n    const [error, setError] = useSnackBar();\n\n    const barChartData = useBarChartData(feedback?.totalUsage ?? {self: 0, others: 0});\n    const barChartOptions = useBarChartOptions();\n    const pieChartData = usePieChartData(feedback?.relativeUsage ?? {high: 0, med: 0, low: 0});\n    const pieChartOptions = usePieChartOptions();\n    const failed = !progress && !feedback;\n\n    const initialLoad = useCallback(() => {\n        if (!validDate) return;\n        backendService.getFeedback(date)\n            .then(setFeedback, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, validDate, date, setError]);\n\n    useEffect(initialLoad, [initialLoad])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            children: () => <>\n                <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                <ResponsiveIconButton description={t('card_behavior_title')}\n                                      icon={<ShowChartOutlined/>}\n                                      onClick={() => setOpenBehavior(true)}/>\n            </>\n        })\n    }, [dateParsed, t, setAppBar, openInfo])\n\n    if (!validDate) return <Redirect to={'/'}/>\n    if (openBehavior) return <Redirect to={'/pastbehavior?date=' + date}/>\n\n    const InfoContent = () => {\n        const infoText = t('info_feedback', {returnObjects: true}) as string[]\n        return <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n    }\n\n    return <Track>\n        {progress && <LinearProgress/>}\n        {failed && <RetryMessage retry={initialLoad}/>}\n        {feedback &&\n        <Container maxWidth=\"lg\" sx={{paddingTop: 1}}>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={6}>\n                    <Paper variant=\"outlined\" sx={{p: 2, height: \"100%\", display: \"flex\", alignItems: \"flex-end\"}}>\n                        <Bar plugins={[ChartDataLabels as ChartPlugin<\"bar\">]}\n                             data={barChartData}\n                             options={barChartOptions} height={300}/>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper variant=\"outlined\" sx={{p: 2, height: \"100%\", display: \"flex\", alignItems: \"flex-end\"}}>\n                        <Pie plugins={[ChartDataLabels as ChartPlugin<\"pie\">]}\n                             data={pieChartData}\n                             options={pieChartOptions}/>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n        }\n        <AlertSnackbar {...error}/>\n        <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps} />\n    </Track>\n}\n\nexport default Feedback;","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Box, Container, LinearProgress, Stack, Typography,} from \"@mui/material\";\nimport React, {useCallback, useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard, DestinationCardProps} from \"./common/DestinationCard\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {TaskModel} from \"./service/Model\";\n\nconst destinations: { [key: string]: DestinationCardProps } = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    wellBeing: {title: 'card_well_being_title', subtitle: 'card_well_being_subtitle', icon: Mood, to: '/wellBeing'},\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar, backendService} = props;\n    const user = useContext(UserContext);\n    const [tasks, setTasks] = useState<TaskModel>()\n    const [error, setError] = useSnackBar();\n    const [progress, setProgress] = useState(true);\n    const failed = !progress && !tasks;\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getTasks()\n            .then(setTasks, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [setError, backendService]);\n\n    const interactions = useMemo(() => {\n        const arr = new Array<DestinationCardProps>();\n        tasks?.todoPrediction && arr.push(destinations.behavior);\n        user?.type === 'homeowner' && tasks?.todoUpload && arr.push(destinations.upload);\n        tasks?.todoVerifyPrediction && arr.push(destinations.archive);\n        tasks?.todoWellBeing && arr.push(destinations.wellBeing);\n        return arr;\n    }, [tasks, user]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {tasks &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                {interactions.length <= 0 &&\n                <Box pt={8}>\n                    <Typography variant=\"h3\" textAlign=\"center\" paragraph children={t('home_well_done_title')}/>\n                    <Typography variant=\"h5\" textAlign=\"center\" children={t('home_well_done_subtitle')}/>\n                </Box>\n                }\n                {interactions.length > 0 &&\n                <Stack spacing={1}>\n                    <Typography variant=\"h5\">{t('home_item_todos')}</Typography>\n\n                    {interactions.map((item, index) =>\n                        <DestinationCard\n                            {...item}\n                            title={t(item.title)}\n                            subtitle={t(item.subtitle)}\n                            key={index}\n                        />\n                    )}\n                </Stack>\n                }\n                {tasks && !tasks.todoVerifyPrediction &&\n                    <Box pt={10}>\n                        <DestinationCard\n                            {...destinations.archive}\n                            title={t(destinations.archive.title)}\n                            subtitle={t(destinations.archive.subtitle)}\n                            done={true}\n                        />\n                    </Box>\n                }\n            </Container>\n            }\n            <AlertSnackbar {...error}/>\n        </Track>\n    );\n}\n\nexport default Home;\n","import {useTranslation} from \"react-i18next\";\nimport {Box, Button, Container, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst sx = {display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"};\n\nexport function LoadingPage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"xs\" sx={sx}>\n            <Paper square variant=\"outlined\" sx={{width: \"100%\", p: 2}}>\n                <Typography variant=\"h5\" textAlign=\"center\" children={t('logging_in')}/>\n                <Box mt={5}/>\n                <LinearProgress/>\n                <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                    <Button component={RouterLink} to=\"/logout\" sx={{mr: 2}} children={t('logout')}/>\n                    <Button onClick={props.retry} children={t('retry')}/>\n                </Stack>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default LoadingPage;\n","import {InfoOutlined, LanguageOutlined} from \"@mui/icons-material\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    DialogContentText,\n    Fab,\n    Grid,\n    IconButton,\n    InputAdornment,\n    Link,\n    List,\n    ListItemButton,\n    ListItemText,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction ChangeLanguageDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const {t, i18n} = useTranslation();\n    const changeLanguage = React.useCallback((language: string) =>\n            i18n.changeLanguage(language)\n                .catch(console.log)\n                .finally(() => props.onClose())\n        , [i18n, props])\n    return <ResponsiveDialog title={t('change_language')} {...props}>\n        <List sx={{pt: 0}}>\n            <ListItemButton onClick={() => changeLanguage('en')}>\n                <ListItemText primary={t('lang_english')}/>\n            </ListItemButton>\n            <ListItemButton onClick={() => changeLanguage('de')}>\n                <ListItemText primary={t('lang_german')}/>\n            </ListItemButton>\n        </List>\n    </ResponsiveDialog>\n}\n\nfunction Login(props: Props) {\n    const [personalCode, setPersonalCode] = useState('');\n    const [email, setEmail] = useState('');\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {backendService} = props;\n    const [langDialogProps, openLangDialog] = useInfoDialog();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [progress, setProgress] = useState(false);\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.requestPin(personalCode, email)\n            .then(\n                () => history.push('/verify', {email: email}),\n                (e) => {\n                    setError(e);\n                    setProgress(false);\n                })\n            .catch()\n    }, [backendService, history, setError, email, personalCode]);\n\n    const InfoDialogContent = () => {\n        const infoText = t('info_personal_code', {returnObjects: true}) as string[];\n        return <>{infoText.map(text => <DialogContentText children={text}/>)}</>\n    }\n\n    const InfoLogin = () => {\n        const text = t('info_login', {returnObjects: true}) as string[]\n        const link = t('info_login_link')\n        return <>\n            {text.map(v => v ? <Typography>{v}</Typography> : <Box py={1}/>)}\n            <Link component=\"a\" href={link} children={link}/>\n        </>\n    }\n\n    const InfoPersonalCode = () => {\n        const infoText = t('info_personal_code', {returnObjects: true}) as string[];\n        return <>{infoText.map(text => <Typography children={text}/>)}</>\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"lg\" sx={{pt: 5}}>\n                <Box>\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                            <Box pt={8}>\n                                <InfoLogin/>\n                                <Box py={2}/>\n                                <Typography>{t('info_login2')}</Typography>\n                                <Box py={2}/>\n                                <InfoPersonalCode/>\n                            </Box>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md sx={{minHeight: 400}}>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    disabled={progress}\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    disabled={progress}\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={personalCode}\n                                    onChange={e => setPersonalCode(e.target.value)}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={openInfo}>\n                                                    <InfoOutlined color=\"inherit\"/>\n                                                </IconButton>\n                                            </InputAdornment>),\n                                    }}\n                                />\n                                <LoadingButton\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                    loading={progress}\n                                    children={t('login_submit')}\n                                />\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Box>\n            </Container>\n            <Fab variant=\"extended\"\n                 title={t('change_language')}\n                 color=\"primary\"\n                 size=\"medium\"\n                 onClick={openLangDialog}><LanguageOutlined sx={{mr: 1}}/>ENG / DEU</Fab>\n            <ChangeLanguageDialog {...langDialogProps}/>\n            <InfoDialog title={t('info')} content={<InfoDialogContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </>\n    )\n}\n\nexport default Login;\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import {Box, Button, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link} from \"react-router-dom\";\n\nfunction Page404(props: {}) {\n    const {t} = useTranslation();\n    return (\n        <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            height: '70vh',\n            justifyContent: 'center'\n        }}>\n            <Typography variant=\"h1\" children=\"404\" gutterBottom/>\n            <Typography variant=\"h5\" paragraph children={t('page_not_found')}/>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to='/'\n            >{t('go_back')}</Button>\n        </Box>\n    )\n}\n\nexport default Page404;\n","import {BarChartOutlined, CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    CircularProgress,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport colorGradient from \"./common/ColorGradient\";\nimport {consumerLookup} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nconst ConsumerHeader = (props: { type: string }) => {\n    const {t} = useTranslation();\n    const {color, icon, tKey} = consumerLookup(props.type);\n    return (\n        <Tooltip title={<>{t(tKey)}</>} enterTouchDelay={0}>\n            <Avatar variant=\"rounded\" sx={{backgroundColor: color, width: 30, height: 30}} children={icon}/>\n        </Tooltip>\n    )\n}\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'PastBehavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [availableEnergy, setAvailableEnergy] = useState<string[]>();\n    const [modified, setModified] = useState(false);\n    const [progress, setProgress] = useState(true);\n    const [openFeedback, setOpenFeedback] = useState(false);\n    const [validated, setValidated] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n    const failed = !progress && !rows;\n\n    const {setAppBar, backendService} = props;\n\n    const initialLoad = useCallback(() => {\n        if (!validDate) return;\n        setProgress(true);\n        Promise.all([\n            backendService.getConsumers(),\n            backendService.getPrediction(date),\n            backendService.getAvailableEnergy(date)\n        ]).then(([consumers, predictions, energy]) => {\n            const cellStates = consumers\n                .filter((c) => c.active)\n                .map((c) => {\n                    const consumerType = consumerLookup(c.type);\n                    return ({\n                        header: <ConsumerHeader type={c.type}/>,\n                        consumerId: c.id,\n                        cellStates: predictions.data.find((p) => p.consumerId === c.id)?.data ?? hours.map(() => 0),\n                        colorSelected: consumerType.color,\n                        colorBeingSelected: consumerType.colorAlt\n                    });\n                });\n            setValidated(predictions.validated);\n            setAvailableEnergy(energy?.map(colorGradient) ?? []);\n            setRows(cellStates);\n            setModified(false);\n        }, (e) => {\n            setError(e);\n            setRows(undefined);\n        })\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [validDate, backendService, setError, date]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!rows || validated) return;\n        backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n                setOpenFeedback(true);\n            }, setError)\n            .catch(console.log);\n    }, [backendService, date, rows, setError, setSuccess, t, validated]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                {validated === undefined &&\n                <ResponsiveIconButton description={t('loading')}\n                                      icon={<CircularProgress variant=\"indeterminate\" size=\"small\" color=\"inherit\"/>}/>\n                }\n                {validated !== undefined && !validated &&\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n                }\n                {validated &&\n                <ResponsiveIconButton description={t('feedback')}\n                                      icon={<BarChartOutlined/>}\n                                      onClick={() => setOpenFeedback(true)}/>\n                }\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t, validated])\n\n    if (!validDate) return <Redirect to='/'/>\n    if (openFeedback) return <Redirect to={'/feedback?date=' + date}/>\n\n    const InfoContent = () => {\n        const infoText = t('info_past_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        const infoText2 = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n            {infoText2.map(text => <DialogContentText paragraph children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {rows &&\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) =>\n                                    <TableCell align=\"center\" sx={{border: 0}}>{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            {availableEnergy &&\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {availableEnergy.map((v) =>\n                                    <TableCell sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                            }\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange} readonly={validated}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            }\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {ElectricalServicesOutlined, LaunchOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {\n    Box,\n    Button,\n    Collapse,\n    Container,\n    DialogContentText,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    Stack,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport {CancelTokenSource} from \"axios\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n    const [cancelToken, setCancelToken] = useState<CancelTokenSource | undefined>();\n    const progress = !!cancelToken;\n\n    const onUpload = useCallback((file: File) => {\n        if (progress) return;\n        const {promise, cancelToken} = backendService.postConsumption(file);\n        setCancelToken(cancelToken);\n        promise.then(() => setSuccess(t('file_upload_success')), setError)\n            .finally(() => setCancelToken(undefined))\n            .catch(console.log);\n    }, [progress, backendService, setSuccess, setError, t])\n\n    const onCancel = useCallback(() => {\n        setCancelToken(prevState => {\n            prevState?.cancel();\n            return undefined;\n        });\n    }, [])\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const infoText = t('info_upload', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">{t('network_operators')}</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                        <ListItemIcon><LaunchOutlined/></ListItemIcon>\n                                    </ListItemButton>)\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <Stack direction=\"row\" spacing={1}>\n                            <Box sx={{flexGrow: 1}}>\n                                <label htmlFor=\"contained-button-file\">\n                                    <Input\n                                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                        id=\"contained-button-file\"\n                                        type=\"file\"\n                                        onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                                    />\n                                    <LoadingButton\n                                        loading={progress}\n                                        fullWidth\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                        component=\"span\"\n                                        loadingPosition=\"start\"\n                                        startIcon={<CloudUploadOutlined/>}\n                                    >{t('action_upload')}</LoadingButton>\n                                </label>\n                            </Box>\n                            <Collapse in={progress} orientation=\"horizontal\">\n                                <Button size=\"large\" onClick={onCancel}>{t('cancel')}</Button>\n                            </Collapse>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\nimport {\n    Container,\n    DialogContentText,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nfunction UserInfo(props: {}) {\n    const user = useContext(UserContext);\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_settings')}/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {LoadingButton} from \"@mui/lab\";\nimport {Avatar, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useHistory, useLocation} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledContainer = styled('div')({\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Verify(props: Props) {\n    const [otp, setOtp] = useState<string>('')\n    const [error, setError] = useSnackBar()\n    const {t} = useTranslation();\n    const location = useLocation<{ email: string }>();\n    const history = useHistory();\n    const [progress, setProgress] = useState(false);\n    const {email} = location.state;\n    const {backendService} = props;\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.login(email, otp)\n            .then(() => history.push('/'), reason => {\n                setError(reason);\n                setProgress(false)\n            })\n            .catch(console.log)\n    }, [backendService, email, history, otp, setError]);\n\n    const handleChange = useCallback(e => setOtp(e.target.value), []);\n\n    if (!email) return <Redirect to={'/'}/>\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\" sx={{pt: 8}}>\n                <Typography variant=\"h4\" paragraph>{t('verify_we_sent_a_pin', {mail: email})}</Typography>\n                <Typography variant=\"h5\" paragraph>{t('verify_please_check_your_email')}</Typography>\n                <StyledContainer>\n                    <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                    <Typography paragraph component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            disabled={progress}\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={otp}\n                            onChange={handleChange}\n                            required\n                            fullWidth/>\n                        <LoadingButton\n                            loading={progress}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</LoadingButton>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default Verify;\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {TabContext, TabPanel} from \"@mui/lab\";\nimport {Box, Button, Container, DialogContentText, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, Prompt} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport handle404 from \"./common/Handle404\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {WellBeingModel} from \"./service/Model\";\nimport {useData, useOptions} from \"./wellBeing/Chart\";\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction WellBeing(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'WellBeing'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [wellBeing, setWellBeing] = useState<WellBeingModel>();\n    const [modified, setModified] = useState(false);\n    const [panel, setPanel] = useState(\"0\");\n    const [progress, setProgress] = useState(true);\n    const failed = !progress && !wellBeing;\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        handle404(backendService.getWellBeing(date), () => ({x: 5, y: 5}))\n            .then(setWellBeing, setError)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const onSaveClick = useCallback(() => {\n        if (!wellBeing) return;\n        backendService.postWellBeing(wellBeing)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, wellBeing, setError, setSuccess, t]);\n\n    const onWellBeingChange = useCallback((wellBeing: WellBeingModel) => {\n        setWellBeing(wellBeing);\n        setModified(true);\n    }, []);\n    const data = useData(wellBeing?.x ?? 0, wellBeing?.y ?? 0);\n    const options = useOptions(onWellBeingChange);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_well_being_title'),\n            children: () => {\n                if (panel !== \"1\") return <></>\n                return <>\n                    <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                    <ResponsiveIconButton requiresAttention={modified}\n                                          icon={<CheckCircleOutlined/>}\n                                          onClick={onSaveClick}\n                                          description={t('save')}/>\n                </>\n            }\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified, panel])\n\n    const infoText = t('info_well_being', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    const titleKey = user.type === \"student\" ? \"well_being_please_select_well_being_student\" : \"well_being_please_select_well_being_homeowner\";\n    return <Track>\n        {progress && <LinearProgress/>}\n        {failed && <RetryMessage retry={initialLoad}/>}\n        {wellBeing &&\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}} disableGutters>\n            <TabContext value={panel}>\n                <TabPanel value=\"0\">\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('well_being_question_home')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => setPanel('1')}\n                                children={t('yes')}/>\n                            <Button\n                                sx={{marginLeft: 2}}\n                                variant=\"contained\"\n                                onClick={() => setPanel('2')}\n                                children={t('no')}/>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"1\">\n                    <Typography variant=\"h5\" align=\"center\" paragraph>{t(titleKey)}</Typography>\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Bubble data={data} options={options} height={100} width={100}/>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <Paper square variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('well_being_come_back_later')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button variant=\"contained\" component={RouterLink} to=\"/\">{t('go_back')}</Button>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n            </TabContext>\n        </Container>\n        }\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default WellBeing;","import {useTheme} from \"@mui/material\";\nimport {ChartData, ChartOptions} from \"chart.js\";\nimport {useMemo} from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nexport const useData: (x: number, y: number) => ChartData<\"bubble\"> = (x, y) => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        datasets: [{\n            data: [{x, y, r: 20}],\n            borderWidth: 1,\n            borderColor: theme.palette.divider,\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.primary.main,\n            pointHitRadius: 25,\n            hoverRadius: 0,\n        }]\n    }), [theme, x, y]);\n}\nexport const useOptions: (onChange: (value: { x: number, y: number }) => void) => ChartOptions<\"bubble\"> = (onChange) => {\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        maintainAspectRatio: true,\n        aspectRation: 1,\n        scales: {\n            xScale: {\n                alignToPixels: true,\n                max: 10,\n                min: 0,\n                ticks: {\n                    stepSize: 1,\n                    display: true\n                },\n                grid: {display: false},\n                title: {\n                    display: true,\n                    text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                },\n            },\n            yScale: {\n                alignToPixels: true,\n                max: 10,\n                min: 0,\n                ticks: {\n                    stepSize: 1,\n                    display: true\n                },\n                grid: {display: false},\n                title: {\n                    display: true,\n                    text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                },\n            }\n        },\n        onHover: function (e: any) {\n            const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n            if (point.length) e.native.target.style.cursor = 'grab'\n            else e.native.target.style.cursor = 'default'\n        },\n        plugins: {\n            dragData: {\n                dragX: true,\n                showTooltip: false,\n                onDragStart: () => null,\n                onDrag: () => null,\n                onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                    e.target.style.cursor = 'default'\n                    onChange(value);\n                },\n            },\n            legend: {display: false},\n            tooltip: {enabled: false}\n        }\n    }), [onChange, t]);\n}\n","import {LinearProgress} from \"@mui/material\";\nimport React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport Archive from \"./Archive\";\nimport Behavior from \"./Behavior\";\nimport Consumers from \"./Consumers\";\nimport Feedback from \"./Feedback\";\nimport Home from \"./Home\";\nimport LoadingPage from \"./LoadingPage\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport Page404 from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\nimport BackendService from \"./service/BackendService\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Verify from \"./Verify\";\nimport WellBeing from \"./WellBeing\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    return (\n        <Switch>\n            <Route path=\"/verify\"><Verify {...props}/></Route>\n            <Route exact path=\"/login\"><Login {...props}/></Route>\n            <Route exact path=\"/\"><Login {...props}/></Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}><Login {...props}/></Route>\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n\nexport function LoadingRouter(props: { backendService: BackendService, retry: () => void }) {\n    return (\n        <Switch>\n            <Route path=\"/logout\"><Logout {...props}/></Route>,\n            <Route><LoadingPage {...props}/></Route>,\n        </Switch>\n    )\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return <LinearProgress/>;\n\n    const paths = {\n        logout: () => <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: () => <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: () => <Route path=\"/user\"><User {...props}/></Route>,\n        archive: () => <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: () => <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: () => <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: () => <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        wellBeing: () => <Route path=\"/wellBeing\"><WellBeing {...props}/></Route>,\n        feedback: () => <Route path=\"/feedback\"><Feedback {...props}/></Route>,\n        root: () => <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: () => <Route exact path={`${process.env.PUBLIC_URL}/`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout(),\n        paths.user(),\n        paths.home(),\n        paths.root(),\n        paths.archive(),\n        paths.consumers(),\n        paths.behavior(),\n        paths.wellBeing(),\n        paths.pastbehavior(),\n        paths.feedback()\n    ]\n    const homeOwnerPaths = [paths.upload()];\n\n    return (\n        <Switch>\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    FeedbackModel,\n    LoginResponse,\n    PredictionDateEntry,\n    PredictionModel,\n    TaskModel,\n    UserModel,\n    WellBeingModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<{ data: T }>): T {\n    return response.data.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) this.accessToken.next(token)\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable;\n    }\n\n    requestPin(personalCode: string, email: string) {\n        return this.backend\n            .get('/request-pin', {params: {'code': personalCode, 'email': email}});\n    }\n\n    login(email: string, otp: string) {\n        return this.backend\n            .get<{ data: LoginResponse }>('/login', {params: {'email': email, 'otp': otp}})\n            .then(unpack)\n            .then((response) => {\n                const {token} = response;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => {\n                localStorage.removeItem(\"token\");\n                this.accessToken.next(null)\n            });\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<{ data: UserModel }>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<{ data: ConsumerModel[] }>('/consumers', this.addAuth())\n            .then(unpack);\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .patch('/consumers/' + consumer.id, {data: {active: consumer.active}}, this.addAuth());\n    }\n\n    getAvailableEnergy(date: string): Promise<number[]> {\n        return this.backend\n            .get<{ data: number[] }>('/available-energy/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getTasks(): Promise<TaskModel> {\n        return this.backend\n            .get<{ data: TaskModel }>('/tasks', this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<PredictionDateEntry[]> {\n        return this.backend\n            .get<{ data: PredictionDateEntry[] }>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<{ validated: boolean, data: PredictionModel[] }> {\n        return this.backend\n            .get<{ data: { validated: boolean, data: PredictionModel[] } }>('/predictions/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    putPrediction(date: string, predictions: PredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {data: predictions}, this.addAuth());\n    }\n\n    getWellBeing(date: string): Promise<WellBeingModel> {\n        return this.backend\n            .get<{ data: WellBeingModel }>('/well-being/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    postWellBeing(wellBeing: WellBeingModel): Promise<AxiosResponse> {\n        return this.backend\n            .post('/well-being', {data: wellBeing}, this.addAuth());\n    }\n\n    getFeedback(date: string): Promise<FeedbackModel> {\n        return this.backend\n            .get<{ data: FeedbackModel }>(\"/feedback/\" + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const source = axios.CancelToken.source();\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return {\n            promise: this.backend.post('/consumptions', formData, this.addAuth({cancelToken: source.token})),\n            cancelToken: source\n        }\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", {data: data}, {});\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}};\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useTracking} from \"react-tracking\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\nimport Config from \"./Config\";\nimport {LoadingRouter, PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel>({id: '', email: '', type: '', location: ''});\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n    const [retry, setRetry] = useState(0);\n    const onRetry = useCallback(() => setRetry(prevState => prevState + 1), []);\n    const isAuthenticated = user!!;\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser, setError)\n                .catch(console.error)\n        }\n    }, [isLoggedIn, setError, retry])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({title: \"\", children: () => <></>});\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            {isLoggedIn !== undefined &&\n            <React.Suspense fallback={<LinearProgress/>}>\n                <ColorModeContext.Provider value={colorMode}>\n                    <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                        {!isLoggedIn && <PublicRouter backendService={backendService}/>}\n                        {isLoggedIn && isAuthenticated &&\n                        <UserContext.Provider value={user}>\n                            <Track>\n                                <Root>\n                                    <DefaultAppBar title={appBar.title} children={appBar.children()}/>\n                                    <DefaultDrawer/>\n                                    <Content>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <PrivateRouter\n                                                backendService={backendService}\n                                                setAppBar={setAppBar}\n                                            />\n                                        </LocalizationProvider>\n                                    </Content>\n                                </Root>\n                                <DefaultBottomNavigation/>\n                            </Track>\n                        </UserContext.Provider>\n                        }\n                        {isLoggedIn && !isAuthenticated &&\n                        <LoadingRouter backendService={backendService} retry={onRetry}/>\n                        }\n                        <UserConfirmationDialog {...userConfirmationProps}/>\n                        <AlertSnackbar {...error} severity=\"error\"/>\n                    </Router>\n                </ColorModeContext.Provider>\n            </React.Suspense>\n            }\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const useDarkTheme = mode ? mode === 'dark' : prefersDarkMode;\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: useDarkTheme ? \"dark\" : \"light\",\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: useDarkTheme ? 1 : 0,\n                    color: \"inherit\",\n                },\n            },\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [useDarkTheme]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.register();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}