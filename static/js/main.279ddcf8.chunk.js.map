{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","common/ResponsiveDialog.tsx","common/UserConfirmationDialog.tsx","common/UseSnackBar.tsx","service/Executor.ts","service/FakeDB.ts","service/FakeBackend.ts","Config.ts","common/DestinationCard.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","common/RetryMessage.tsx","common/Tracking.ts","Archive.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","common/ColorGradient.tsx","common/ConsumerTools.tsx","common/Handle404.ts","Behavior.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","common/Date.ts","Feedback.tsx","Home.tsx","LoadingPage.tsx","Login.tsx","Logout.tsx","Page404.tsx","PastBehavior.tsx","Upload.tsx","User.tsx","Verify.tsx","WellBeing.tsx","wellBeing/Chart.ts","Routes.tsx","service/BackendService.ts","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","open","onClose","Alert","variant","message","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","ml","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","hideBackButton","IconButton","color","edge","marginRight","onClick","goBack","size","Typography","mx","DefaultBottomNavigation","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","ResponsiveDialog","fullScreen","Dialog","DialogTitle","UserConfirmationDialog","DialogContent","DialogContentText","DialogActions","Button","onAccept","useSnackBar","state","setState","prevState","useCallback","response","statusText","DefaultExecutor","reject","data","console","log","this","status","headers","config","request","FaultyExecutor","executor","Math","random","ok","error","getFakeDB","db","localStorage","getItem","users","JSON","stringify","location","name","email","consumer","assign","v","i","toString","active","predictions","validated","token","setItem","parse","saveFakeDB","findInDict","dict","matcher","key","delayedPromise","promise","delay","setTimeout","catch","reason","FakeBackend","backendConfig","url","endsWith","params","otp","Authorization","startsWith","removeItem","date","includes","substring","lastIndexOf","prediction","index","todoPrediction","todoVerifyPrediction","todoUpload","todoWellBeing","totalUsage","self","others","relativeUsage","high","med","low","Date","toISOString","slice","split","pop","array","elementMatcher","changes","consumerIndex","findIndex","meldArrayElement","c","axios","create","baseURL","process","backend","apiDescription","DestinationCard","done","Card","borderColor","undefined","flexDirection","CardActionArea","CardMedia","backgroundColor","alignItems","padding","CardContent","noWrap","secondaryTo","alignSelf","m","secondaryIcon","InfoOutlined","useInfoDialog","InfoDialog","content","AttentionIcon","Badge","invisible","requiresAttention","SmallIconButton","Tooltip","description","LargeIconButton","startIcon","ResponsiveIconButton","RetryMessage","Container","maxWidth","square","p","mt","retry","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Archive","page","infoProps","openInfo","entries","setEntries","progress","setProgress","setError","backendService","setAppBar","failed","initialLoad","getPredictions","finally","useEffect","showBackButton","InfoContent","infoText","returnObjects","text","paragraph","pt","Stack","spacing","entry","parsedDate","CheckCircleOutlined","RadioButtonUncheckedOutlined","BarChartOutlined","compareCellProps","a","b","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","ColorModeContext","prefersDarkMode","mode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","target","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","selectionStarted","preventDefault","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","colorGradient","fade","color1","decomposeColor","yellow","green","color2","red","values","floor","g","consumers","laundry","tKey","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","homeoffice","emobility","temperature","amber","unknown","consumerLookup","handle404","on404","hours","Array","from","formatTime","today","setDate","getDate","isoDate","Behavior","setRows","availableEnergy","setAvailableEnergy","modified","setModified","success","setSuccess","all","getConsumers","getPrediction","getAvailableEnergy","energy","filter","enterTouchDelay","Avatar","height","consumerId","find","handleChange","cells","handleSave","putPrediction","infoConsumers","disableGutters","paddingTop","TableContainer","maxHeight","xs","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","compareProps","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","consumerType","ListItemAvatar","ListItemSecondaryAction","Consumers","setConsumers","applyChangeActive","putConsumer","consumerHelp","paddingBottom","it","useParsedDate","useMemo","Feedback","openBehavior","setOpenBehavior","URLSearchParams","useLocation","search","get","dateParsed","validDate","isValid","isPast","feedback","setFeedback","barChartData","labels","datasets","palette","background","paper","useBarChartData","barChartOptions","responsive","scales","xAxis","yAxis","grid","drawBorder","divider","ticks","callback","tickValue","stepSize","font","family","typography","fontFamily","plugins","legend","tooltip","enabled","datalabels","contrastText","formatter","useBarChartOptions","pieChartData","usePieChartData","pieChartOptions","context","usePieChartOptions","getFeedback","ShowChartOutlined","Grid","container","item","md","ChartDataLabels","wellBeing","Home","tasks","setTasks","getTasks","interactions","arr","length","textAlign","justifyContent","LoadingPage","mr","StyledGrid","styled","margin","ChangeLanguageDialog","i18n","changeLanguage","language","ListItemButton","Login","personalCode","setPersonalCode","setEmail","langDialogProps","openLangDialog","handleSubmit","requestPin","onSubmit","TextField","autoFocus","autoComplete","disabled","required","fullWidth","InputProps","endAdornment","InputAdornment","LoadingButton","loading","Fab","LanguageOutlined","Logout","logout","Page404","gutterBottom","Link","ConsumerHeader","PastBehavior","openFeedback","setOpenFeedback","setValidated","infoText2","Input","operators","link","Upload","cancelToken","setCancelToken","onUpload","file","postConsumption","onCancel","cancel","infoContent","href","ElectricalServicesOutlined","ArrowForward","htmlFor","accept","files","loadingPosition","Collapse","orientation","UserInfo","items","Email","MyLocation","idx","ConsumersInfo","ArrowRight","LanguageInfo","i18next","resolvedLanguage","setLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","colorModeValue","Brightness4Outlined","toggleColorMode","User","ExitToApp","Form","StyledContainer","Verify","setOtp","login","WellBeing","setWellBeing","panel","setPanel","getWellBeing","x","y","onSaveClick","postWellBeing","onWellBeingChange","borderWidth","main","pointHitRadius","hoverRadius","useData","maintainAspectRatio","aspectRation","xScale","alignToPixels","yScale","onHover","chart","getElementsAtEventForMode","intersect","native","style","cursor","dragData","dragX","showTooltip","onDragStart","onDrag","onDragEnd","datasetIndex","useOptions","titleKey","TabContext","TabPanel","marginLeft","PublicRouter","path","exact","LoadingRouter","PrivateRouter","paths","commonPaths","homeOwnerPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","addAuth","patch","put","post","source","CancelToken","formData","FormData","append","Config","createContext","App","setMode","useDarkTheme","createTheme","lightGreen","secondary","components","MuiAppBar","defaultProps","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","root","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","setUser","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","setRetry","onRetry","isAuthenticated","subscribe","getUser","appBar","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","en","de","resources","resourcesToBackend","namespace","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.279ddcf8.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t458,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t459,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 448;\nmodule.exports = webpackAsyncContext;","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {SettingsOutlined} from \"@mui/icons-material\";\nimport AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_well_being_title', subtitle: 'card_well_being_subtitle', icon: Mood, to: '/wellBeing'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user.type) {\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [destinations.home, destinations.user];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user.type) {\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [destinations.home, destinations.user];\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nconst sx = {ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}};\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={sx}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle children={props.title}/>\n            {props.children}\n        </Dialog>\n    );\n}\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","export interface Executor {\n    ok<T>(data: T): void\n\n    error(response?: {status: number, statusText?: string}): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok<T>(data: T) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error(response?: {status: number, statusText?: string}) {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: response?.status ?? 400,\n                statusText: response?.statusText ?? \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok<T>(data: T): void {\n        if (Math.random() > 0.6) this.executor.ok(data); else this.executor.error();\n    }\n\n    error(response?: {status: number, statusText?: string}) {\n        this.executor.error(response);\n    }\n}\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"homeowner@test.com\",\n            \"faultyuser@test.com\",\n            \"faultyhomeowner@test.com\"\n        ];\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        id: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"homeowner@test.com\": {\n                        id: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    },\n                    \"faultyuser@test.com\": {\n                        id: 'faultyuser',\n                        email: 'faultyuser@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faultyhomeowner@test.com\": {\n                        id: 'faultyhomeowner',\n                        email: 'faultyhomeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    },\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {type: 'laundry'}, {type: 'cooking'}, {type: 'dishes'}, {type: 'hygiene'}, {type: 'entertainment'},\n                        {type: 'wellness'}, {type: 'homeoffice'}, {type: 'emobility'}, {type: 'temperature'},\n                        {type: 'high'}, {type: 'med'}, {type: 'low'},\n                    ].map((v, i) => ({\n                        id: i.toString(),\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                predictions: Object.assign({}, ...users.map((user) => ({\n                    [user]: {\n                        \"2021-01-10\": {\n                            validated: false,\n                            data: []\n                        },\n                        \"2021-01-04\": {\n                            validated: true,\n                            data: []\n                        },\n                        \"2021-01-02\": {\n                            validated: false,\n                            data: []\n                        },\n                        \"2021-01-01\": {\n                            validated: true,\n                            data: []\n                        },\n\n                    }\n                }))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faultyuser@test.com\",\n                    \"fakeToken.thistokenisfake6\": \"faultyhomeowner@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","import {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {Backend} from \"./Backend\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {ConsumerModel, FeedbackModel, TaskModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nconst defaultDelay = 50;\n\nfunction delayedPromise<T>(promise: Promise<T>, delay = defaultDelay): Promise<T> {\n    return promise\n        .then(value => new Promise<T>(resolve => setTimeout(() => resolve(value), delay)))\n        .catch(reason => new Promise<T>((resolve, reject) => setTimeout(() => reject(reason), delay)));\n}\n\nclass FakeBackend implements Backend {\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request-pin')) {\n                const {code, email} = config.params;\n                if (code === 'test' && db.user[email]!!) return e.ok({})\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, otp} = config.params;\n                const user = db.user[email]\n                if (user != null && otp === \"123456\") return e.ok({data: {token: findInDict(db.token, (v: string) => v === email)}})\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok({data: db.user[user]})\n            } else if (url.endsWith('/consumers')) {\n                e.ok({data: db.consumer[user]})\n            } else if (url.endsWith('/predictions')) {\n                e.ok({\n                    data: Object.keys(db.predictions[user]).map(date => ({\n                            validated: db.predictions[user][date].validated,\n                            date: date\n                        })\n                    )\n                })\n            } else if (url.includes('/predictions/')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                const prediction = db.predictions[user][date];\n                console.log(db.predictions[user])\n                if (!prediction) return e.error({status: 404, statusText: 'Not found'})\n                e.ok({data: prediction})\n            } else if (url.includes('/available-energy/')) {\n                e.ok({data: [0, 0.1, 0.1, 0.1, 0.1, 0.2, 0.2, 0.4, 0.5, 0.6, 0.7, 0.8, 1, 1, 0.8, 0.6, 0.6, 0.4, 0.3, 0.5, 0.7, 0.3, 0, 0]})\n            } else if (url.includes('/well-being/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                const mood = db.mood[user][index]\n                if (!mood) return e.error({status: 404})\n                e.ok({data: mood})\n            } else if (url.endsWith('/tasks')) {\n                e.ok<{ data: TaskModel }>({\n                    data: {\n                        todoPrediction: true,\n                        todoVerifyPrediction: true,\n                        todoUpload: true,\n                        todoWellBeing: true\n                    }\n                })\n            } else if (url.includes('/feedback/')) {\n                e.ok<{ data: FeedbackModel }>({\n                    data: {\n                        totalUsage: {\n                            self: 4,\n                            others: 3.6\n                        },\n                        relativeUsage: {\n                            high: 0.25,\n                            med: 0.35,\n                            low: 0.4\n                        }\n                    }\n                })\n            } else {\n                e.error()\n            }\n        });\n        return delayedPromise(promise);\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token];\n            if (user == null) return e.error();\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n            if (url.endsWith('/consumptions')) {\n                e.ok({});\n            } else if (url.startsWith('/well-being')) {\n                const date = new Date().toISOString().slice(0, 10);\n                db.mood[user][date] = data.data;\n                saveFakeDB(db);\n\n                e.ok({})\n            }\n            e.error();\n        })\n        if (url.endsWith('/consumptions')) return delayedPromise(promise, 3000);\n        return delayedPromise(promise);\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = {validated: true, data: data.data};\n                saveFakeDB(db);\n\n                e.ok({})\n            } else {\n                e.error()\n            }\n        })\n        return delayedPromise(promise);\n    }\n\n    patch<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig<any>): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PATCH Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].id.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumers')) {\n                const {active} = data.data;\n                meldArrayElement<ConsumerModel>(db.consumer[user], c => c.id.toString() === id.toString(), {active: active})\n                saveFakeDB(db);\n\n                e.ok({})\n            } else {\n                e.error()\n            }\n        })\n        return delayedPromise(promise);\n    }\n}\n\nfunction meldArrayElement<T>(array: Array<T>, elementMatcher: (value: T) => boolean, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {InfoOutlined} from \"@mui/icons-material\";\nimport {Box, Card, CardActionArea, CardContent, CardMedia, IconButton, SvgIcon, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nexport interface DestinationCardProps {\n    to: string\n    icon: React.ElementType\n    title: string\n    subtitle: string\n    done?: boolean\n    secondaryTo?: string\n    secondaryIcon?: React.ElementType\n}\n\nexport function DestinationCard(props: DestinationCardProps) {\n    const {to, icon, title, subtitle, done} = props;\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\", display: \"flex\", flexDirection: \"row\"}}>\n            <CardActionArea component={RouterLink} to={to}>\n                <Box sx={{display: \"flex\", flexGrow: 1}}>\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{subtitle}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n            {props.secondaryTo &&\n            <IconButton component={RouterLink} to={props.secondaryTo} size=\"large\" sx={{alignSelf: \"center\", m: 1}}>\n                <SvgIcon component={props.secondaryIcon ?? InfoOutlined}/>\n            </IconButton>\n            }\n        </Card>\n    )\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nfunction AttentionIcon(props: { requiresAttention?: boolean, icon: JSX.Element }) {\n    return <Badge invisible={!props.requiresAttention} variant=\"dot\" color=\"info\">{props.icon}</Badge>\n}\n\nfunction SmallIconButton(props: Props) {\n    return (\n        <Tooltip title={props.description}>\n            <IconButton\n                color=\"inherit\"\n                onClick={props.onClick}\n                size=\"large\"\n                children={<AttentionIcon {...props}/>}\n            />\n        </Tooltip>\n    )\n}\n\nfunction LargeIconButton(props: Props) {\n    return (\n        <Button startIcon={<AttentionIcon {...props}/>}\n                color=\"inherit\"\n                onClick={props.onClick}\n                children={props.description}\n        />\n    )\n}\n\nfunction ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    if (breakpoint) return <SmallIconButton {...props}/>\n    return <LargeIconButton {...props}/>\n}\n\nexport default ResponsiveIconButton;\n\n","import {Button, Container, Paper, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction RetryMessage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper variant=\"outlined\" square sx={{p: 2, mt: 3, display: \"flex\", flexDirection: \"column\"}}>\n                <Typography>{t('error_please_retry')}</Typography>\n                <Button\n                    sx={{mt: 5, alignSelf: \"flex-end\"}}\n                    onClick={props.retry}\n                    children={t('retry')}/>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default RetryMessage;\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: new Date(), user: user?.id ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {BarChartOutlined, CheckCircleOutlined, InfoOutlined, RadioButtonUncheckedOutlined} from \"@mui/icons-material\";\nimport {Container, DialogContentText, LinearProgress, Stack} from \"@mui/material\";\nimport {parse} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard} from \"./common/DestinationCard\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {PredictionDateEntry} from \"./service/Model\";\n\nfunction Archive(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [entries, setEntries] = useState<PredictionDateEntry[]>();\n    const [progress, setProgress] = useState(true);\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n    const failed = !progress && !entries;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getPredictions()\n            .then(setEntries, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false))\n    }, [backendService, setError])\n\n    useEffect(initialLoad, [initialLoad])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton\n                description={t('info')}\n                icon={<InfoOutlined/>}\n                onClick={openInfo}\n            />\n        });\n    }, [t, setAppBar, openInfo])\n\n    const InfoContent = () => {\n        const infoText = t('info_archive', {returnObjects: true}) as string[]\n        return <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {entries &&\n            <Container maxWidth=\"sm\" sx={{pt: 1}}>\n                <Stack spacing={1}>\n                    {entries.map(entry => {\n                            const parsedDate = parse(entry.date, 'yyyy-MM-dd', new Date())\n                            const done = entry.validated;\n                            return <DestinationCard\n                                to={`/pastbehavior?date=${entry.date}`}\n                                icon={done ? CheckCircleOutlined : RadioButtonUncheckedOutlined}\n                                title={t('archive_entry_date', {date: parsedDate})}\n                                subtitle={t(done ? t('archive_already_done') : t('archive_please_check'))}\n                                done={done}\n                                secondaryTo={(done && `/feedback?date=${entry.date}`) || undefined}\n                                secondaryIcon={(done && BarChartOutlined) || undefined}\n                            />\n                        }\n                    )}\n                </Stack>\n            </Container>\n            }\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import {green, red, yellow} from \"@mui/material/colors\";\nimport {decomposeColor} from \"@mui/system/colorManipulator\";\n\nexport default function colorGradient(fade: number): string {\n    const color1 = decomposeColor(fade >= 0.5 ? yellow[500] : green[500]);\n    const color2 = decomposeColor(fade >= 0.5 ? red[500] : yellow[500]);\n    fade = 2 * (fade >= 0.5 ? fade - 0.5 : fade);\n    const [r, g, b] = color1.values.map((value, index) => Math.floor(value + (color2.values[index] - value) * fade));\n    return `rgb(${r}, ${g}, ${b})`;\n}\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\ninterface Consumer {\n    icon: JSX.Element\n    tKey: string\n    color: string\n    colorAlt: string\n}\n\nconst consumers: { [index: string]: Consumer } = {\n    laundry: {\n        icon: <LocalLaundryService/>,\n        tKey: 'consumer_type_laundry',\n        color: blue[shadeDefault],\n        colorAlt: blue[shadeAlt]\n    },\n    cooking: {\n        icon: <Restaurant/>,\n        tKey: 'consumer_type_cooking',\n        color: pink[shadeDefault],\n        colorAlt: pink[shadeAlt]\n    },\n    dishes: {\n        icon: <FreeBreakfast/>,\n        tKey: 'consumer_type_dishes',\n        color: purple[shadeDefault],\n        colorAlt: purple[shadeAlt]\n    },\n    hygiene: {\n        icon: <Bathtub/>,\n        tKey: 'consumer_type_hygiene',\n        color: blue[shadeDefault],\n        colorAlt: blue[shadeAlt]\n    },\n    entertainment: {\n        icon: <Movie/>,\n        tKey: 'consumer_type_entertainment',\n        color: teal[shadeDefault],\n        colorAlt: teal[shadeAlt]\n    },\n    wellness: {\n        icon: <Spa/>,\n        tKey: 'consumer_type_wellness',\n        color: green[shadeDefault],\n        colorAlt: green[shadeAlt]\n    },\n    homeoffice: {\n        icon: <Computer/>,\n        tKey: 'consumer_type_homeoffice',\n        color: red[shadeDefault],\n        colorAlt: red[shadeAlt]\n    },\n    emobility: {\n        icon: <Power/>,\n        tKey: 'consumer_type_emobility',\n        color: blue[shadeDefault],\n        colorAlt: blue[shadeAlt]\n    },\n    temperature: {\n        icon: <AcUnit/>,\n        tKey: 'consumer_type_temperature',\n        color: pink[shadeDefault],\n        colorAlt: pink[shadeAlt]\n    },\n    high: {\n        icon: <Help/>,\n        tKey: 'consumer_type_high',\n        color: red[shadeDefault],\n        colorAlt: red[shadeAlt]\n    },\n    med: {\n        icon: <Help/>,\n        tKey: 'consumer_type_med',\n        color: amber[shadeDefault],\n        colorAlt: amber[shadeAlt]\n    },\n    low: {\n        icon: <Help/>,\n        tKey: 'consumer_type_low',\n        color: green[shadeDefault],\n        colorAlt: green[shadeAlt]\n    },\n    unknown: {\n        icon: <Help/>,\n        tKey: 'consumer_type_unknown',\n        color: purple[shadeDefault],\n        colorAlt: purple[shadeAlt]\n    }\n}\n\nexport const consumerLookup = (type: string): Consumer => type in consumers ? consumers[type] : consumers.unknown\n","export default function handle404<T>(promise: Promise<T>, on404: () => T) {\n    return new Promise<T>((resolve, reject) => {\n        promise\n            .then(resolve)\n            .catch((reason: { response?: { status: number } }) => {\n                if (reason.response?.status === 404) {\n                    resolve(on404())\n                } else {\n                    reject(reason)\n                }\n            })\n    })\n}\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport colorGradient from \"./common/ColorGradient\";\nimport {consumerLookup} from \"./common/ConsumerTools\";\nimport handle404 from \"./common/Handle404\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\n\nconst today = new Date();\nconst date = new Date();\ndate.setDate(today.getDate() + 1)\nconst isoDate = date.toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [availableEnergy, setAvailableEnergy] = useState<string[]>();\n    const [progress, setProgress] = useState(true);\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n    const failed = !progress && !rows;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        Promise.all([\n            backendService.getConsumers(),\n            handle404(backendService.getPrediction(isoDate), () => ({validated: false, data: []})),\n            backendService.getAvailableEnergy(isoDate)\n        ]).then(([consumers, predictions, energy]) => {\n            const cellStates = consumers\n                .filter((c) => c.active)\n                .map((c) => {\n                    const {color, colorAlt, tKey, icon} = consumerLookup(c.type);\n                    return {\n                        header: (\n                            <Tooltip title={<>{t(tKey)}</>} enterTouchDelay={0}>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    sx={{width: 30, height: 30, backgroundColor: color}}\n                                    children={icon}\n                                />\n                            </Tooltip>\n                        ),\n                        consumerId: c.id,\n                        cellStates: predictions.data.find((p) => p.consumerId === c.id)?.data ?? hours.map(() => 0),\n                        colorSelected: color,\n                        colorBeingSelected: colorAlt\n                    }\n                });\n            setAvailableEnergy(energy?.map(colorGradient) ?? [])\n            setRows(cellStates);\n            setModified(false);\n        }, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [t, backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!rows) return;\n        rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    const InfoContent = () => {\n        const infoText = t('info_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {rows &&\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            {availableEnergy &&\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {availableEnergy.map((v) => <TableCell\n                                    sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                            }\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            }\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.id === b.id &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = t('consumer_type_' + consumer.type);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.id}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, LinearProgress, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>();\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [progress, setProgress] = useState(true);\n    const failed = !consumers && !progress;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) => {\n        return backendService.putConsumer({...consumer, active: !consumer.active})\n            .then(() => backendService.getConsumers())\n            .then(setConsumers, setError)\n            .catch(console.log);\n    }, [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const InfoContent = () => {\n        const infoText = t('info_consumers', {returnObjects: true}) as string[]\n        const consumerHelp = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {consumerHelp.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {consumers &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers.map((it) =>\n                            <ConsumerCard key={it.id} consumer={it} clickActive={applyChangeActive}/>\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            }\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import {ShowChartOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, Grid, LinearProgress, Paper, useTheme} from \"@mui/material\";\nimport {blue, green, red, yellow} from \"@mui/material/colors\";\nimport {ChartData, ChartOptions} from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useMemo, useState} from 'react';\nimport {Bar, Pie} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {FeedbackModel} from \"./service/Model\";\n\nconst useBarChartData: (data: { self: number, others: number }) => ChartData = (data) => {\n    const theme = useTheme();\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        labels: [t('feedback_energy_consumption')],\n        datasets: [\n            {\n                label: t('feedback_my_energy_consumption'),\n                data: [data.self],\n                backgroundColor: red[\"800\"],\n                borderColor: theme.palette.background.paper,\n            },\n            {\n                label: t('feedback_other_energy_consumption'),\n                data: [data.others],\n                backgroundColor: blue[\"800\"],\n                borderColor: theme.palette.background.paper,\n            },\n        ],\n    }), [theme, data.self, data.others, t]);\n};\nconst usePieChartData: (data: { high: number, med: number, low: number }) => ChartData = (data) => {\n    const theme = useTheme();\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        labels: [t('feedback_high_energy'), t('feedback_med_energy'), t('feedback_low_energy')],\n        datasets: [\n            {\n                data: [data.high, data.med, data.low].map(v => v * 100),\n                backgroundColor: [green[\"800\"], yellow[\"800\"], red[\"800\"]],\n                borderColor: theme.palette.background.paper,\n            },\n        ],\n    }), [theme, data.high, data.med, data.low, t]);\n}\n\nconst useBarChartOptions: () => ChartOptions = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        responsive: true,\n        scales: {\n            xAxis: {display: false},\n            yAxis: {\n                position: \"right\",\n                grid: {\n                    drawBorder: false,\n                    color: theme.palette.divider\n                },\n                ticks: {\n                    callback: tickValue => tickValue + \" kWh\",\n                    padding: 10,\n                    stepSize: 1,\n                    color: theme.palette.text.primary,\n                    font: {family: theme.typography.fontFamily}\n                }\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    font: {family: theme.typography.fontFamily},\n                    color: theme.palette.text.primary\n                }\n            },\n            tooltip: {enabled: false},\n            datalabels: {\n                color: theme.palette.primary.contrastText,\n                font: {\n                    family: theme.typography.fontFamily,\n                    size: 20,\n                },\n                formatter: value => value + \" kWh\"\n            }\n        }\n    }), [theme]);\n}\nconst usePieChartOptions: () => ChartOptions = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        responsive: true,\n        scales: {\n            xAxis: {display: false},\n            yAxis: {display: false}\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    font: {family: theme.typography.fontFamily},\n                    color: theme.palette.text.primary\n                }\n            },\n            tooltip: {enabled: false},\n            datalabels: {\n                color: theme.palette.primary.contrastText,\n                font: {\n                    family: theme.typography.fontFamily,\n                    size: 20,\n                },\n                formatter: (value, context) => value + \"%\"\n            }\n        }\n    }), [theme]);\n}\n\nfunction Feedback(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Feedback'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [openBehavior, setOpenBehavior] = useState(false);\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n    const {setAppBar, backendService} = props;\n\n    const [feedback, setFeedback] = useState<FeedbackModel>()\n    const [progress, setProgress] = useState(true);\n    const [error, setError] = useSnackBar();\n\n    const barChartData = useBarChartData(feedback?.totalUsage ?? {self: 0, others: 0});\n    const barChartOptions = useBarChartOptions();\n    const pieChartData = usePieChartData(feedback?.relativeUsage ?? {high: 0, med: 0, low: 0});\n    const pieChartOptions = usePieChartOptions();\n    const failed = !progress && !feedback;\n\n    const initialLoad = useCallback(() => {\n        if (!validDate) return;\n        backendService.getFeedback(date)\n            .then(setFeedback, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, validDate, date, setError]);\n\n    useEffect(initialLoad, [initialLoad])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                <ResponsiveIconButton description={t('card_behavior_title')}\n                                      icon={<ShowChartOutlined/>}\n                                      onClick={() => setOpenBehavior(true)}/>\n            </>\n        })\n    }, [dateParsed, t, setAppBar, openInfo])\n\n    if (!validDate) return <Redirect to={'/'}/>\n    if (openBehavior) return <Redirect to={'/pastbehavior?date=' + date}/>\n\n    const InfoContent = () => {\n        const infoText = t('info_feedback', {returnObjects: true}) as string[]\n        return <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n    }\n\n    return <Track>\n        {progress && <LinearProgress/>}\n        {failed && <RetryMessage retry={initialLoad}/>}\n        {feedback &&\n        <Container maxWidth=\"lg\" sx={{paddingTop: 1}}>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={6}>\n                    <Paper variant=\"outlined\" sx={{p: 2, height: \"100%\", display: \"flex\", alignItems: \"flex-end\"}}>\n                        <Bar plugins={[ChartDataLabels]} data={barChartData} options={barChartOptions} height={300}/>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper variant=\"outlined\" sx={{p: 2, height: \"100%\", display: \"flex\", alignItems: \"flex-end\"}}>\n                        <Pie plugins={[ChartDataLabels]} data={pieChartData} options={pieChartOptions}/>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n        }\n        <AlertSnackbar {...error}/>\n        <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps} />\n    </Track>\n}\n\nexport default Feedback;","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Box, Container, LinearProgress, Stack, Typography,} from \"@mui/material\";\nimport React, {useCallback, useContext, useEffect, useMemo, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard, DestinationCardProps} from \"./common/DestinationCard\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {TaskModel} from \"./service/Model\";\n\nconst destinations: { [key: string]: DestinationCardProps } = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    wellBeing: {title: 'card_well_being_title', subtitle: 'card_well_being_subtitle', icon: Mood, to: '/wellBeing'},\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar, backendService} = props;\n    const user = useContext(UserContext);\n    const [tasks, setTasks] = useState<TaskModel>()\n    const [error, setError] = useSnackBar();\n    const [progress, setProgress] = useState(true);\n    const failed = !progress && !tasks;\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getTasks()\n            .then(setTasks, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [setError, backendService]);\n\n    const interactions = useMemo(() => {\n        const arr = new Array<DestinationCardProps>();\n        tasks?.todoPrediction && arr.push(destinations.behavior);\n        user?.type === 'homeowner' && tasks?.todoUpload && arr.push(destinations.upload);\n        tasks?.todoVerifyPrediction && arr.push(destinations.archive);\n        tasks?.todoWellBeing && arr.push(destinations.wellBeing);\n        return arr;\n    }, [tasks, user]);\n\n    useEffect(initialLoad, [initialLoad]);\n    console.log(tasks)\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {tasks &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                {interactions.length <= 0 &&\n                <Box pt={8}>\n                    <Typography variant=\"h3\" textAlign=\"center\" paragraph children={t('home_well_done_title')}/>\n                    <Typography variant=\"h5\" textAlign=\"center\" children={t('home_well_done_subtitle')}/>\n                </Box>\n                }\n                {interactions.length > 0 &&\n                <Stack spacing={1}>\n                    <Typography variant=\"h5\">{t('home_item_todos')}</Typography>\n\n                    {interactions.map((item, index) =>\n                        <DestinationCard\n                            {...item}\n                            title={t(item.title)}\n                            subtitle={t(item.subtitle)}\n                            key={index}\n                        />\n                    )}\n                </Stack>\n                }\n                {tasks && !tasks.todoVerifyPrediction &&\n                    <Box pt={10}>\n                        <DestinationCard\n                            {...destinations.archive}\n                            title={t(destinations.archive.title)}\n                            subtitle={t(destinations.archive.subtitle)}\n                            done={true}\n                        />\n                    </Box>\n                }\n            </Container>\n            }\n            <AlertSnackbar {...error}/>\n        </Track>\n    );\n}\n\nexport default Home;\n","import {useTranslation} from \"react-i18next\";\nimport {Box, Button, Container, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst sx = {display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"};\n\nexport function LoadingPage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"xs\" sx={sx}>\n            <Paper square variant=\"outlined\" sx={{width: \"100%\", p: 2}}>\n                <Typography variant=\"h5\" textAlign=\"center\" children={t('logging_in')}/>\n                <Box mt={5}/>\n                <LinearProgress/>\n                <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                    <Button component={RouterLink} to=\"/logout\" sx={{mr: 2}} children={t('logout')}/>\n                    <Button onClick={props.retry} children={t('retry')}/>\n                </Stack>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default LoadingPage;\n","import {InfoOutlined, LanguageOutlined} from \"@mui/icons-material\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    DialogContentText,\n    Fab,\n    Grid,\n    IconButton,\n    InputAdornment,\n    List,\n    ListItemButton,\n    ListItemText,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction ChangeLanguageDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const {t, i18n} = useTranslation();\n    const changeLanguage = React.useCallback((language: string) =>\n            i18n.changeLanguage(language)\n                .catch(console.log)\n                .finally(() => props.onClose())\n        , [i18n, props])\n    return <ResponsiveDialog title={t('change_language')} {...props}>\n        <List sx={{pt: 0}}>\n            <ListItemButton onClick={() => changeLanguage('en')}>\n                <ListItemText primary={t('lang_english')}/>\n            </ListItemButton>\n            <ListItemButton onClick={() => changeLanguage('de')}>\n                <ListItemText primary={t('lang_german')}/>\n            </ListItemButton>\n        </List>\n    </ResponsiveDialog>\n}\n\nfunction Login(props: Props) {\n    const [personalCode, setPersonalCode] = useState('');\n    const [email, setEmail] = useState('');\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {backendService} = props;\n    const [langDialogProps, openLangDialog] = useInfoDialog();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [progress, setProgress] = useState(false);\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.requestPin(personalCode, email)\n            .then(() => history.push('/verify', {email: email}), () => setProgress(false))\n            .catch(setError)\n    }, [backendService, history, setError, email, personalCode]);\n\n    const InfoContent = () => {\n        const infoText = t('info_personal_code', {returnObjects: true}) as string[];\n        return <>{infoText.map(text => <DialogContentText children={text}/>)}</>\n    }\n\n    return (\n        <>\n            <Container maxWidth=\"lg\">\n                <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    disabled={progress}\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={email}\n                                    onChange={e => setEmail(e.target.value)}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    disabled={progress}\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={personalCode}\n                                    onChange={e => setPersonalCode(e.target.value)}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={openInfo}>\n                                                    <InfoOutlined color=\"inherit\"/>\n                                                </IconButton>\n                                            </InputAdornment>),\n                                    }}\n                                />\n                                <LoadingButton\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                    loading={progress}\n                                >\n                                    {t('login_submit')}\n                                </LoadingButton>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Box>\n            </Container>\n            <Fab title={t('change_language')}\n                 color=\"primary\"\n                 size=\"medium\"\n                 onClick={openLangDialog}\n                 children={<LanguageOutlined/>}/>\n            <ChangeLanguageDialog {...langDialogProps}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </>\n    )\n}\n\nexport default Login;\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import {Box, Button, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link} from \"react-router-dom\";\n\nfunction Page404(props: {}) {\n    const {t} = useTranslation();\n    return (\n        <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            height: '70vh',\n            justifyContent: 'center'\n        }}>\n            <Typography variant=\"h1\" children=\"404\" gutterBottom/>\n            <Typography variant=\"h5\" paragraph children={t('page_not_found')}/>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to='/'\n            >{t('go_back')}</Button>\n        </Box>\n    )\n}\n\nexport default Page404;\n","import {BarChartOutlined, CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport colorGradient from \"./common/ColorGradient\";\nimport {consumerLookup} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nconst ConsumerHeader = (props: { type: string }) => {\n    const {t} = useTranslation();\n    const {color, icon, tKey} = consumerLookup(props.type);\n    return (\n        <Tooltip title={<>{t(tKey)}</>} enterTouchDelay={0}>\n            <Avatar variant=\"rounded\" sx={{backgroundColor: color, width: 30, height: 30}} children={icon}/>\n        </Tooltip>\n    )\n}\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'PastBehavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [availableEnergy, setAvailableEnergy] = useState<string[]>();\n    const [modified, setModified] = useState(false);\n    const [progress, setProgress] = useState(true);\n    const [openFeedback, setOpenFeedback] = useState(false);\n    const [validated, setValidated] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n    const failed = !progress && !rows;\n\n    const {setAppBar, backendService} = props;\n\n    const initialLoad = useCallback(() => {\n        if (!validDate) return;\n        setProgress(true);\n        Promise.all([\n            backendService.getConsumers(),\n            backendService.getPrediction(date),\n            backendService.getAvailableEnergy(date)\n        ]).then(([consumers, predictions, energy]) => {\n            const cellStates = consumers\n                .filter((c) => c.active)\n                .map((c) => {\n                    const consumerType = consumerLookup(c.type);\n                    return ({\n                        header: <ConsumerHeader type={c.type}/>,\n                        consumerId: c.id,\n                        cellStates: predictions.data.find((p) => p.consumerId === c.id)?.data ?? hours.map(() => 0),\n                        colorSelected: consumerType.color,\n                        colorBeingSelected: consumerType.colorAlt\n                    });\n                });\n            setValidated(predictions.validated);\n            setAvailableEnergy(energy?.map(colorGradient) ?? []);\n            setRows(cellStates);\n            setModified(false);\n        }, (e) => {\n            setError(e);\n            setRows(undefined);\n        })\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [validDate, backendService, setError, date]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!rows || validated) return;\n        backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n                setOpenFeedback(true);\n            }, setError)\n            .catch(console.log);\n    }, [backendService, date, rows, setError, setSuccess, t, validated]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                {validated !== undefined && !validated &&\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n                }\n                {validated &&\n                <ResponsiveIconButton description={t('feedback')}\n                                      icon={<BarChartOutlined/>}\n                                      onClick={() => setOpenFeedback(true)}/>\n                }\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t, validated])\n\n    if (!validDate) return <Redirect to='/'/>\n    if (openFeedback) return <Redirect to={'/feedback?date=' + date}/>\n\n    const InfoContent = () => {\n        const infoText = t('info_past_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        const infoText2 = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n            {infoText2.map(text => <DialogContentText paragraph children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {rows &&\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\"/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            {availableEnergy &&\n                            <TableRow>\n                                <TableCell/>\n                                {availableEnergy.map((v) => <TableCell sx={{backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                            }\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            }\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {ArrowForward, ElectricalServicesOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {\n    Box,\n    Button,\n    Collapse,\n    Container,\n    DialogContentText,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    Stack,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport {CancelTokenSource} from \"axios\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Energienetze Steiermark', link: 'https://portal.e-netze.at/'},\n    {name: 'Kelag', link: 'https://services.kelag.at/ISS/Services.aspx'},\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n    const [cancelToken, setCancelToken] = useState<CancelTokenSource | undefined>();\n    const progress = !!cancelToken;\n\n    const onUpload = useCallback((file: File) => {\n        if (progress) return;\n        const {promise, cancelToken} = backendService.postConsumption(file);\n        setCancelToken(cancelToken);\n        promise.then(() => setSuccess(t('file_upload_success')), setError)\n            .finally(() => setCancelToken(undefined))\n            .catch(console.log);\n    }, [progress, backendService, setSuccess, setError, t])\n\n    const onCancel = useCallback(() => {\n        setCancelToken(prevState => {\n            prevState?.cancel();\n            return undefined;\n        });\n    }, [])\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const infoText = t('info_upload', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">{t('network_operators')}</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                        <ListItemIcon><ArrowForward/></ListItemIcon>\n                                    </ListItemButton>)\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <Stack direction=\"row\" spacing={1}>\n                            <Box sx={{flexGrow: 1}}>\n                                <label htmlFor=\"contained-button-file\">\n                                    <Input\n                                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                        id=\"contained-button-file\"\n                                        type=\"file\"\n                                        onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                                    />\n                                    <LoadingButton\n                                        loading={progress}\n                                        fullWidth\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                        component=\"span\"\n                                        loadingPosition=\"start\"\n                                        startIcon={<CloudUploadOutlined/>}\n                                    >{t('action_upload')}</LoadingButton>\n                                </label>\n                            </Box>\n                            <Collapse in={progress} orientation=\"horizontal\">\n                                <Button size=\"large\" onClick={onCancel}>{t('cancel')}</Button>\n                            </Collapse>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\nimport {\n    Container,\n    DialogContentText,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nfunction UserInfo(props: {}) {\n    const user = useContext(UserContext);\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_settings')}/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {Avatar, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useHistory, useLocation} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh'\n})\n\nfunction Verify(props: Props) {\n    const [otp, setOtp] = useState<string>('')\n    const [error, setError] = useSnackBar()\n    const {t} = useTranslation();\n    const location = useLocation<{ email: string }>();\n    const history = useHistory();\n    const [progress, setProgress] = useState(false);\n    const {email} = location.state;\n    const {backendService} = props;\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.login(email, otp)\n            .then(() => history.push('/'), reason => {\n                setError(reason);\n                setProgress(false)\n            })\n            .catch(console.log)\n    }, [backendService, email, history, otp, setError]);\n\n    const handleChange = useCallback(e => setOtp(e.target.value), []);\n\n    if (!email) return <Redirect to={'/'}/>\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            disabled={progress}\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={otp}\n                            onChange={handleChange}\n                            required\n                            fullWidth/>\n                        <LoadingButton\n                            loading={progress}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</LoadingButton>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default Verify;\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {TabContext, TabPanel} from \"@mui/lab\";\nimport {Box, Button, Container, DialogContentText, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, Prompt} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport handle404 from \"./common/Handle404\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {WellBeingModel} from \"./service/Model\";\nimport {useData, useOptions} from \"./wellBeing/Chart\";\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction WellBeing(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'WellBeing'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [wellBeing, setWellBeing] = useState<WellBeingModel>();\n    const [modified, setModified] = useState(false);\n    const [panel, setPanel] = useState(\"0\");\n    const [progress, setProgress] = useState(true);\n    const failed = !progress && !wellBeing;\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        handle404(backendService.getWellBeing(date), () => ({x: 5, y: 5}))\n            .then(setWellBeing, setError)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const onSaveClick = useCallback(() => {\n        if (!wellBeing) return;\n        backendService.postWellBeing(wellBeing)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, wellBeing, setError, setSuccess, t]);\n\n    const onWellBeingChange = useCallback((wellBeing: WellBeingModel) => {\n        setWellBeing(wellBeing);\n        setModified(true);\n    }, []);\n    const data = useData(wellBeing?.x ?? 0, wellBeing?.y ?? 0);\n    const options = useOptions(onWellBeingChange);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_well_being_title'),\n            showBackButton: true,\n            children: () => {\n                if (panel !== \"1\") return <></>\n                return <>\n                    <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                    <ResponsiveIconButton requiresAttention={modified}\n                                          icon={<CheckCircleOutlined/>}\n                                          onClick={onSaveClick}\n                                          description={t('save')}/>\n                </>\n            }\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified, panel])\n\n    const infoText = t('info_well_being', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    const titleKey = user.type === \"student\" ? \"well_being_please_select_well_being_student\" : \"well_being_please_select_well_being_homeowner\";\n    return <Track>\n        {progress && <LinearProgress/>}\n        {failed && <RetryMessage retry={initialLoad}/>}\n        {wellBeing &&\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}} disableGutters>\n            <TabContext value={panel}>\n                <TabPanel value=\"0\">\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('well_being_question_home')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => setPanel('1')}\n                                children={t('yes')}/>\n                            <Button\n                                sx={{marginLeft: 2}}\n                                variant=\"contained\"\n                                onClick={() => setPanel('2')}\n                                children={t('no')}/>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"1\">\n                    <Typography variant=\"h5\" align=\"center\" paragraph>{t(titleKey)}</Typography>\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Bubble data={data} options={options} height={100} width={100}/>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <Paper square variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('well_being_come_back_later')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button variant=\"contained\" component={RouterLink} to=\"/\">{t('go_back')}</Button>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n            </TabContext>\n        </Container>\n        }\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default WellBeing;","import {ChartData, ChartOptions} from \"chart.js\";\nimport {useTranslation} from \"react-i18next\";\nimport {useMemo} from \"react\";\nimport {useTheme} from \"@mui/material\";\n\nexport const useData: (x: number, y: number) => ChartData = (x, y) => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        datasets: [{\n            data: [{x, y, r: 20}],\n            borderWidth: 1,\n            borderColor: theme.palette.divider,\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.primary.main,\n            pointHitRadius: 25,\n            hoverRadius: 0,\n        }]\n    }), [theme, x, y]);\n}\nexport const useOptions: (onChange: (value: { x: number, y: number }) => void) => ChartOptions = (onChange) => {\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        maintainAspectRatio: true,\n        aspectRation: 1,\n        scales: {\n            xScale: {\n                alignToPixels: true,\n                max: 10,\n                min: 0,\n                ticks: {display: false},\n                grid: {display: false},\n                title: {\n                    display: true,\n                    text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                },\n            },\n            yScale: {\n                alignToPixels: true,\n                max: 10,\n                min: 0,\n                ticks: {display: false},\n                grid: {display: false},\n                title: {\n                    display: true,\n                    text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                },\n            }\n        },\n        onHover: function (e: any) {\n            const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n            if (point.length) e.native.target.style.cursor = 'grab'\n            else e.native.target.style.cursor = 'default'\n        },\n        plugins: {\n            dragData: {\n                dragX: true,\n                showTooltip: false,\n                onDragStart: () => null,\n                onDrag: () => null,\n                onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                    e.target.style.cursor = 'default'\n                    onChange(value);\n                },\n            },\n            legend: {display: false},\n            tooltip: {enabled: false}\n        }\n    }), [onChange, t]);\n}\n","import {LinearProgress} from \"@mui/material\";\nimport React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport Archive from \"./Archive\";\nimport Behavior from \"./Behavior\";\nimport Consumers from \"./Consumers\";\nimport Feedback from \"./Feedback\";\nimport Home from \"./Home\";\nimport LoadingPage from \"./LoadingPage\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport Page404 from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\nimport BackendService from \"./service/BackendService\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Verify from \"./Verify\";\nimport WellBeing from \"./WellBeing\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    return (\n        <Switch>\n            <Route path=\"/verify\"><Verify {...props}/></Route>\n            <Route exact path=\"/login\"><Login {...props}/></Route>\n            <Route exact path=\"/\"><Login {...props}/></Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}><Login {...props}/></Route>\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n\nexport function LoadingRouter(props: { backendService: BackendService, retry: () => void }) {\n    return (\n        <Switch>\n            <Route path=\"/logout\"><Logout {...props}/></Route>,\n            <Route><LoadingPage {...props}/></Route>,\n        </Switch>\n    )\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return <LinearProgress/>;\n\n    const paths = {\n        logout: () => <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: () => <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: () => <Route path=\"/user\"><User {...props}/></Route>,\n        archive: () => <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: () => <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: () => <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: () => <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        wellBeing: () => <Route path=\"/wellBeing\"><WellBeing {...props}/></Route>,\n        feedback: () => <Route path=\"/feedback\"><Feedback {...props}/></Route>,\n        root: () => <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: () => <Route exact path={`${process.env.PUBLIC_URL}/`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout(),\n        paths.user(),\n        paths.home(),\n        paths.root(),\n        paths.archive(),\n        paths.consumers(),\n        paths.behavior(),\n        paths.wellBeing(),\n        paths.pastbehavior(),\n        paths.feedback()\n    ]\n    const homeOwnerPaths = [paths.upload()];\n\n    return (\n        <Switch>\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    FeedbackModel,\n    LoginResponse,\n    PredictionDateEntry,\n    PredictionModel,\n    TaskModel,\n    UserModel,\n    WellBeingModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<{ data: T }>): T {\n    return response.data.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) this.accessToken.next(token)\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable;\n    }\n\n    requestPin(personalCode: string, email: string) {\n        return this.backend\n            .get('/request-pin', {params: {'code': personalCode, 'email': email}});\n    }\n\n    login(email: string, otp: string) {\n        return this.backend\n            .get<{ data: LoginResponse }>('/login', {params: {'email': email, 'otp': otp}})\n            .then(unpack)\n            .then((response) => {\n                const {token} = response;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => {\n                localStorage.removeItem(\"token\");\n                this.accessToken.next(null)\n            });\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<{ data: UserModel }>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<{ data: ConsumerModel[] }>('/consumers', this.addAuth())\n            .then(unpack);\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .patch('/consumers/' + consumer.id, {data: {active: consumer.active}}, this.addAuth());\n    }\n\n    getAvailableEnergy(date: string): Promise<number[]> {\n        return this.backend\n            .get<{ data: number[] }>('/available-energy/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getTasks(): Promise<TaskModel> {\n        return this.backend\n            .get<{ data: TaskModel }>('/tasks', this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<PredictionDateEntry[]> {\n        return this.backend\n            .get<{ data: PredictionDateEntry[] }>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<{ validated: boolean, data: PredictionModel[] }> {\n        return this.backend\n            .get<{ data: { validated: boolean, data: PredictionModel[] } }>('/predictions/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    putPrediction(date: string, predictions: PredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {data: predictions}, this.addAuth());\n    }\n\n    getWellBeing(date: string): Promise<WellBeingModel> {\n        return this.backend\n            .get<{ data: WellBeingModel }>('/well-being/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    postWellBeing(wellBeing: WellBeingModel): Promise<AxiosResponse> {\n        return this.backend\n            .post('/well-being', {data: wellBeing}, this.addAuth());\n    }\n\n    getFeedback(date: string): Promise<FeedbackModel> {\n        return this.backend\n            .get<{ data: FeedbackModel }>(\"/feedback/\" + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const source = axios.CancelToken.source();\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return {\n            promise: this.backend.post('/consumptions', formData, this.addAuth({cancelToken: source.token})),\n            cancelToken: source\n        }\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", {data: data}, {});\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}};\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useTracking} from \"react-tracking\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\nimport Config from \"./Config\";\nimport {LoadingRouter, PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel>({id: '', email: '', type: '', location: ''});\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n    const [retry, setRetry] = useState(0);\n    const onRetry = useCallback(() => setRetry(prevState => prevState + 1), []);\n    const isAuthenticated = user!!;\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser, setError)\n                .catch(console.error)\n        }\n    }, [isLoggedIn, setError, retry])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({title: \"\", showBackButton: false, children: () => <></>});\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            {isLoggedIn !== undefined &&\n            <React.Suspense fallback={<LinearProgress/>}>\n                <ColorModeContext.Provider value={colorMode}>\n                    <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                        {!isLoggedIn && <PublicRouter backendService={backendService}/>}\n                        {isLoggedIn && isAuthenticated &&\n                        <UserContext.Provider value={user}>\n                            <Track>\n                                <Root>\n                                    <DefaultAppBar title={appBar.title}\n                                                   hideBackButton={!appBar.showBackButton}\n                                                   children={appBar.children()}/>\n                                    <DefaultDrawer/>\n                                    <Content>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <PrivateRouter\n                                                backendService={backendService}\n                                                setAppBar={setAppBar}\n                                            />\n                                        </LocalizationProvider>\n                                    </Content>\n                                </Root>\n                                <DefaultBottomNavigation/>\n                            </Track>\n                        </UserContext.Provider>\n                        }\n                        {isLoggedIn && !isAuthenticated &&\n                        <LoadingRouter backendService={backendService} retry={onRetry}/>\n                        }\n                        <UserConfirmationDialog {...userConfirmationProps}/>\n                        <AlertSnackbar {...error} severity=\"error\"/>\n                    </Router>\n                </ColorModeContext.Provider>\n            </React.Suspense>\n            }\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const useDarkTheme = mode ? mode === 'dark' : prefersDarkMode;\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: useDarkTheme ? \"dark\" : \"light\",\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: useDarkTheme ? 1 : 0,\n                    color: \"inherit\",\n                },\n            },\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [useDarkTheme]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}