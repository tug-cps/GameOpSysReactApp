{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","common/ResponsiveDialog.tsx","common/UserConfirmationDialog.tsx","common/UseSnackBar.tsx","service/Executor.ts","service/FakeDB.ts","service/FakeBackend.ts","Config.ts","common/DestinationCard.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","common/RetryMessage.tsx","common/Tracking.ts","Archive.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","common/ConsumerTools.tsx","Behavior.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","common/Date.ts","Feedback.tsx","Home.tsx","LoadingPage.tsx","Login.tsx","Logout.tsx","Mood.tsx","mood/Chart.ts","Page404.tsx","PastBehavior.tsx","Power.tsx","common/Time.ts","thermostats/DummyData.ts","Thermostats.tsx","Upload.tsx","User.tsx","Verify.tsx","Routes.tsx","service/BackendService.ts","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","open","onClose","Alert","variant","message","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","ml","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","hideBackButton","IconButton","color","edge","marginRight","onClick","goBack","size","Typography","mx","DefaultBottomNavigation","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","ResponsiveDialog","fullScreen","Dialog","DialogTitle","UserConfirmationDialog","DialogContent","DialogContentText","DialogActions","Button","onAccept","useSnackBar","state","setState","prevState","useCallback","response","statusText","DefaultExecutor","reject","data","console","log","this","status","headers","config","request","FaultyExecutor","executor","Math","random","ok","error","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","predictions","token","setItem","parse","saveFakeDB","findInDict","dict","matcher","key","delayedPromise","promise","delay","setTimeout","catch","reason","FakeBackend","backendConfig","url","Authorization","startsWith","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","DestinationCard","done","Card","borderColor","flexDirection","CardActionArea","CardMedia","backgroundColor","alignItems","padding","CardContent","noWrap","secondaryTo","alignSelf","m","secondaryIcon","InfoOutlined","useInfoDialog","Lorem","InfoDialog","content","AttentionIcon","Badge","invisible","requiresAttention","SmallIconButton","Tooltip","description","LargeIconButton","startIcon","ResponsiveIconButton","RetryMessage","Container","maxWidth","square","p","mt","retry","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Archive","page","infoProps","openInfo","setDates","progress","setProgress","setError","backendService","setAppBar","failed","initialLoad","getPredictions","finally","useEffect","showBackButton","pt","Stack","spacing","parsedDate","CheckCircleOutlined","RadioButtonUncheckedOutlined","BarChartOutlined","compareCellProps","a","b","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","ColorModeContext","prefersDarkMode","mode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","target","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","selectionStarted","preventDefault","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","translate","str","override","i18next","language","de","en","consumers","laundry","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","green","homeoffice","red","emobility","temperature","high","med","amber","low","unknown","consumerLookup","hours","from","formatTime","colors","energyAvailable","isoDate","Behavior","setRows","modified","setModified","success","setSuccess","all","getConsumers","getPrediction","filter","consumerType","enterTouchDelay","Avatar","height","find","handleChange","cells","handleSave","putPrediction","InfoContent","infoText","returnObjects","infoConsumers","text","paragraph","disableGutters","paddingTop","TableContainer","maxHeight","xs","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","compareProps","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","ListItemAvatar","ListItemSecondaryAction","Consumers","setConsumers","applyChangeActive","putConsumer","consumerHelp","paddingBottom","useParsedDate","useMemo","Feedback","URLSearchParams","useLocation","search","get","dateParsed","validDate","isValid","isPast","barChartData","labels","datasets","palette","background","paper","useBarChartData","barChartOptions","responsive","scales","xAxis","yAxis","grid","drawBorder","divider","ticks","callback","tickValue","stepSize","font","family","typography","fontFamily","plugins","legend","tooltip","enabled","datalabels","contrastText","formatter","useBarChartOptions","pieChartData","yellow","usePieChartData","pieChartOptions","context","usePieChartOptions","Grid","container","item","md","ChartDataLabels","Home","interactions","userInteractionNeeded","justifyContent","LoadingPage","textAlign","mr","StyledGrid","styled","margin","ChangeLanguageDialog","i18n","changeLanguage","ListItemButton","Login","langDialogProps","openLangDialog","handleSubmit","requestPin","onSubmit","TextField","autoFocus","autoComplete","disabled","required","fullWidth","InputProps","endAdornment","InputAdornment","LoadingButton","loading","Fab","LanguageOutlined","Logout","logout","setMood","panel","setPanel","getMood","onSaveClick","putMood","onMoodChange","borderWidth","main","pointHitRadius","hoverRadius","useData","maintainAspectRatio","aspectRation","xScale","alignToPixels","yScale","onHover","chart","getElementsAtEventForMode","intersect","length","native","style","cursor","dragData","dragX","showTooltip","onDragStart","onDrag","onDragEnd","datasetIndex","useOptions","infoContent","titleKey","TabContext","TabPanel","marginLeft","Page404","gutterBottom","Link","compareConsumerProps","ConsumerHeader","PastBehavior","Power","now","createTime","minutes","getDay","getMonth","Thermostats","Input","operators","link","Upload","cancelToken","setCancelToken","onUpload","file","postConsumption","onCancel","cancel","href","ElectricalServicesOutlined","ArrowForward","htmlFor","accept","files","loadingPosition","Collapse","orientation","UserInfo","items","Email","MyLocation","idx","ConsumersInfo","ArrowRight","LanguageInfo","resolvedLanguage","setLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","colorModeValue","Brightness4Outlined","toggleColorMode","User","ExitToApp","Form","StyledContainer","Verify","setPassword","login","PublicRouter","path","exact","LoadingRouter","PrivateRouter","paths","commonPaths","homeOwnerPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","addAuth","post","put","delete","simple","day","time","advanced","source","CancelToken","formData","FormData","append","Config","createContext","App","setMode","useDarkTheme","createTheme","lightGreen","secondary","components","MuiAppBar","defaultProps","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","root","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","setUser","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","setRetry","onRetry","isAuthenticated","subscribe","getUser","appBar","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","resources","resourcesToBackend","namespace","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.fdcb0a84.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t459,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t460,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 446;\nmodule.exports = webpackAsyncContext;","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {SettingsOutlined} from \"@mui/icons-material\";\nimport AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nconst sx = {ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}};\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={sx}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle children={props.title}/>\n            {props.children}\n        </Dialog>\n    );\n}\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.6) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"homeowner@test.com\",\n            \"faultyuser@test.com\",\n            \"faultyhomeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    },\n                    \"faultyuser@test.com\": {\n                        userId: 'faultyuser',\n                        email: 'faultyuser@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faultyhomeowner@test.com\": {\n                        userId: 'faultyhomeowner',\n                        email: 'faultyhomeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    },\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'high'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'med'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'low'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => 0)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faultyuser@test.com\",\n                    \"fakeToken.thistokenisfake6\": \"faultyhomeowner@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","import {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {v4 as uuidv4} from 'uuid';\nimport {Backend} from \"./Backend\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nconst defaultDelay = 30;\n\nfunction delayedPromise<T>(promise: Promise<T>, delay = defaultDelay): Promise<T> {\n    return promise\n        .then(value => new Promise<T>(resolve => setTimeout(() => resolve(value), delay)))\n        .catch(reason => new Promise<T>((resolve, reject) => setTimeout(() => reject(reason), delay)));\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config);\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token];\n            if (user == null) return e.error();\n            if (db.user[user].userId.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1);\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString());\n                if (index < 0) return e.error();\n                db.consumer[user].splice(index, 1);\n\n                saveFakeDB(db);\n                return e.ok({});\n            }\n            return e.error();\n        });\n        return delayedPromise(promise);\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n        });\n        return delayedPromise(promise);\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n            if (url.endsWith('/consumption')) {\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n        if (url.endsWith('/consumption')) return delayedPromise(promise, 3000);\n        return delayedPromise(promise);\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId.startsWith(\"faulty\")) e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n        return delayedPromise(promise);\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {InfoOutlined} from \"@mui/icons-material\";\nimport {Box, Card, CardActionArea, CardContent, CardMedia, IconButton, SvgIcon, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nexport interface DestinationCardProps {\n    to: string\n    icon: React.ElementType\n    title: string\n    subtitle: string\n    done?: boolean\n    secondaryTo?: string\n    secondaryIcon?: React.ElementType\n}\n\nexport function DestinationCard(props: DestinationCardProps) {\n    const {to, icon, title, subtitle, done} = props;\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\", display: \"flex\", flexDirection: \"row\"}}>\n            <CardActionArea component={RouterLink} to={to}>\n                <Box sx={{display: \"flex\", flexGrow: 1}}>\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{subtitle}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n            {props.secondaryTo &&\n            <IconButton component={RouterLink} to={props.secondaryTo} size=\"large\" sx={{alignSelf: \"center\", m: 1}}>\n                <SvgIcon component={props.secondaryIcon ?? InfoOutlined}/>\n            </IconButton>\n            }\n        </Card>\n    )\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nfunction AttentionIcon(props: { requiresAttention?: boolean, icon: JSX.Element }) {\n    return <Badge invisible={!props.requiresAttention} variant=\"dot\" color=\"info\">{props.icon}</Badge>\n}\n\nfunction SmallIconButton(props: Props) {\n    return (\n        <Tooltip title={props.description}>\n            <IconButton\n                color=\"inherit\"\n                onClick={props.onClick}\n                size=\"large\"\n                children={<AttentionIcon {...props}/>}\n            />\n        </Tooltip>\n    )\n}\n\nfunction LargeIconButton(props: Props) {\n    return (\n        <Button startIcon={<AttentionIcon {...props}/>}\n                color=\"inherit\"\n                onClick={props.onClick}\n                children={props.description}\n        />\n    )\n}\n\nfunction ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    if (breakpoint) return <SmallIconButton {...props}/>\n    return <LargeIconButton {...props}/>\n}\n\nexport default ResponsiveIconButton;\n\n","import {Button, Container, Paper, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\n\nfunction RetryMessage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"sm\">\n            <Paper variant=\"outlined\" square sx={{p: 2, mt: 3, display: \"flex\", flexDirection: \"column\"}}>\n                <Typography>{t('error_please_retry')}</Typography>\n                <Button\n                    sx={{mt: 5, alignSelf: \"flex-end\"}}\n                    onClick={props.retry}\n                    children={t('retry')}/>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default RetryMessage;\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {BarChartOutlined, CheckCircleOutlined, InfoOutlined, RadioButtonUncheckedOutlined} from \"@mui/icons-material\";\nimport {Container, DialogContentText, LinearProgress, Stack} from \"@mui/material\";\nimport {parse} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard} from \"./common/DestinationCard\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nfunction Archive(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [dates, setDates] = useState<string[]>();\n    const [progress, setProgress] = useState(true);\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n    const failed = !progress && !dates;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false))\n    }, [backendService, setError])\n\n    useEffect(initialLoad, [initialLoad])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton\n                description={t('info')}\n                icon={<InfoOutlined/>}\n                onClick={openInfo}\n            />\n        });\n    }, [t, setAppBar, openInfo])\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {dates &&\n            <Container maxWidth=\"sm\" sx={{pt: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date, index) => {\n                            const parsedDate = parse(date, 'yyyy-MM-dd', new Date())\n                            const done = !!index;\n                            return <DestinationCard\n                                to={`/pastbehavior?date=${date}`}\n                                icon={done ? CheckCircleOutlined : RadioButtonUncheckedOutlined}\n                                title={t('archive_entry_date', {date: parsedDate})}\n                                subtitle={done ? 'Bereits erledigt' : 'Bitte überpüfen'}\n                                done={done}\n                                secondaryTo={(done && `/feedback?date=${date}`) || undefined}\n                                secondaryIcon={(done && BarChartOutlined) || undefined}\n                            />\n                        }\n                    )}\n                </Stack>\n            </Container>\n            }\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_archive')}/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\nimport i18next from \"i18next\";\nimport {TranslatedString} from \"../service/Model\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\nconst consumers: any = {\n    laundry: {icon: <LocalLaundryService/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    cooking: {icon: <Restaurant/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    dishes: {icon: <FreeBreakfast/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]},\n    hygiene: {icon: <Bathtub/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    entertainment: {icon: <Movie/>, color: teal[shadeDefault], colorAlt: teal[shadeAlt]},\n    wellness: {icon: <Spa/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    homeoffice: {icon: <Computer/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    emobility: {icon: <Power/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    temperature: {icon: <AcUnit/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    high: {icon: <Help/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    med: {icon: <Help/>, color: amber[shadeDefault], colorAlt: amber[shadeAlt]},\n    low: {icon: <Help/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    unknown: {icon: <Help/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]}\n}\n\nexport const consumerLookup = (type: string) => type in consumers ? consumers[type] : consumers.unknown\n\nexport function backgroundColor(type: string) {\n    return type in consumers ? consumers[type].color : \"#0ff\";\n}\n\nexport function iconLookup(type: string): JSX.Element {\n    return type in consumers ? consumers[type].icon : <Help/>\n}\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date();\nconst isoDate = new Date().toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [progress, setProgress] = useState(true);\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n    const failed = !progress && !rows;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(isoDate)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return {\n                            header: (\n                                <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{width: 30, height: 30, backgroundColor: consumerType.color}}\n                                    >\n                                        {consumerType.icon}\n                                    </Avatar>\n                                </Tooltip>\n                            ),\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        }\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!rows) return;\n        rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    const InfoContent = () => {\n        const infoText = t('info_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {rows &&\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {energyAvailable.map((v) => <TableCell\n                                    sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            }\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup, translate} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = translate(consumer.name, consumer.customName);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, LinearProgress, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>();\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [progress, setProgress] = useState(true);\n    const failed = !consumers && !progress;\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) => {\n        return backendService.putConsumer({...consumer, active: !consumer.active})\n            .then(() => backendService.getConsumers())\n            .then(setConsumers, setError)\n            .catch(console.log);\n    }, [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const InfoContent = () => {\n        const infoText = t('info_consumers', {returnObjects: true}) as string[]\n        const consumerHelp = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {consumerHelp.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {consumers &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers.map((it) =>\n                            <ConsumerCard\n                                key={it.consumerId}\n                                consumer={it}\n                                clickActive={applyChangeActive}\n                            />\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            }\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, Grid, Paper, useTheme} from \"@mui/material\";\nimport {blue, green, red, yellow} from \"@mui/material/colors\";\nimport {ChartData, ChartOptions} from \"chart.js\";\nimport ChartDataLabels from 'chartjs-plugin-datalabels';\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useEffect, useMemo} from 'react';\nimport {Bar, Pie} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useLocation} from \"react-router-dom\";\nimport {PrivateRouteProps} from \"./App\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst useBarChartData: () => ChartData = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        labels: ['Stromverbrauch'],\n        datasets: [\n            {\n                label: 'Ihr Stromverbrauch',\n                data: [4],\n                backgroundColor: red[\"800\"],\n                borderColor: theme.palette.background.paper,\n            },\n            {\n                label: 'Durchschnittlicher Stromverbrauch der anderen',\n                data: [3.6],\n                backgroundColor: blue[\"800\"],\n                borderColor: theme.palette.background.paper,\n            },\n        ],\n    }), [theme]);\n};\nconst usePieChartData: () => ChartData = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        labels: ['Viel Strom', 'Durchschnittlicher Strom', 'Wenig Strom'],\n        datasets: [\n            {\n                data: [40, 35, 25],\n                backgroundColor: [green[\"800\"], yellow[\"800\"], red[\"800\"]],\n                borderColor: theme.palette.background.paper,\n            },\n        ],\n    }), [theme]);\n}\n\nconst useBarChartOptions: () => ChartOptions = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        responsive: true,\n        scales: {\n            xAxis: {display: false},\n            yAxis: {\n                position: \"right\",\n                grid: {\n                    drawBorder: false,\n                    color: theme.palette.divider\n                },\n                ticks: {\n                    callback: tickValue => tickValue + \" kWh\",\n                    padding: 10,\n                    stepSize: 1,\n                    color: theme.palette.text.primary,\n                    font: {family: theme.typography.fontFamily}\n                }\n            },\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    font: {family: theme.typography.fontFamily},\n                    color: theme.palette.text.primary\n                }\n            },\n            tooltip: {enabled: false},\n            datalabels: {\n                color: theme.palette.primary.contrastText,\n                font: {\n                    family: theme.typography.fontFamily,\n                    size: 20,\n                },\n                formatter: value => value + \" kWh\"\n            }\n        }\n    }), [theme]);\n}\nconst usePieChartOptions: () => ChartOptions = () => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        responsive: true,\n        scales: {\n            xAxis: {display: false},\n            yAxis: {display: false}\n        },\n        plugins: {\n            legend: {\n                position: 'bottom',\n                labels: {\n                    font: {family: theme.typography.fontFamily},\n                    color: theme.palette.text.primary\n                }\n            },\n            tooltip: {enabled: false},\n            datalabels: {\n                color: theme.palette.primary.contrastText,\n                font: {\n                    family: theme.typography.fontFamily,\n                    size: 20,\n                },\n                formatter: (value, context) => value + \"%\"\n            }\n        }\n    }), [theme]);\n}\n\nfunction Feedback(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Feedback'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n    const {setAppBar} = props;\n\n    const barChartData = useBarChartData();\n    const barChartOptions = useBarChartOptions();\n    const pieChartData = usePieChartData();\n    const pieChartOptions = usePieChartOptions();\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n        })\n    }, [dateParsed, t, setAppBar, openInfo])\n\n    if (!validDate) return <Redirect to={'/'}/>\n\n    return <Track>\n        <Container maxWidth=\"lg\" sx={{paddingTop: 1}}>\n            <Grid container spacing={1}>\n                <Grid item xs={12} md={6}>\n                    <Paper variant=\"outlined\" sx={{p: 2, height: \"100%\", display: \"flex\", alignItems: \"flex-end\"}}>\n                        <Bar plugins={[ChartDataLabels]} data={barChartData} options={barChartOptions} height={300}/>\n                    </Paper>\n                </Grid>\n                <Grid item xs={12} md={6}>\n                    <Paper variant=\"outlined\" sx={{p: 2, height: \"100%\", display: \"flex\", alignItems: \"flex-end\"}}>\n                        <Pie plugins={[ChartDataLabels]} data={pieChartData} options={pieChartOptions}/>\n                    </Paper>\n                </Grid>\n            </Grid>\n        </Container>\n        <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n    </Track>\n}\n\nexport default Feedback;","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Container, Stack, Typography,} from \"@mui/material\";\nimport React, {useContext, useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {DestinationCard, DestinationCardProps} from \"./common/DestinationCard\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst destinations: { [key: string]: DestinationCardProps } = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nconst userInteractionNeeded = (type: string) => {\n    switch (type) {\n        case \"student\":\n            return [destinations.behavior, destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.behavior, destinations.upload, destinations.archive, destinations.mood]\n        default:\n            return null;\n    }\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n    const interactions = userInteractionNeeded(user.type);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                <Stack spacing={3}>\n                    {interactions &&\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">{t('home_item_todos')}</Typography>\n                        {interactions.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                </Stack>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","import {useTranslation} from \"react-i18next\";\nimport {Box, Button, Container, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst sx = {display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"};\n\nexport function LoadingPage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"xs\" sx={sx}>\n            <Paper square variant=\"outlined\" sx={{width: \"100%\", p: 2}}>\n                <Typography variant=\"h5\" textAlign=\"center\" children={t('logging_in')}/>\n                <Box mt={5}/>\n                <LinearProgress/>\n                <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                    <Button component={RouterLink} to=\"/logout\" sx={{mr: 2}} children={t('logout')}/>\n                    <Button onClick={props.retry} children={t('retry')}/>\n                </Stack>\n            </Paper>\n        </Container>\n    )\n}\n\nexport default LoadingPage;\n","import {InfoOutlined, LanguageOutlined} from \"@mui/icons-material\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    DialogContentText,\n    Fab,\n    Grid,\n    IconButton,\n    InputAdornment,\n    List,\n    ListItemButton,\n    ListItemText,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\n\ninterface Props {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction ChangeLanguageDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const {t, i18n} = useTranslation();\n    const changeLanguage = React.useCallback((language: string) =>\n            i18n.changeLanguage(language)\n                .catch(console.log)\n                .finally(() => props.onClose())\n        , [i18n, props])\n    return <ResponsiveDialog title={t('change_language')} {...props}>\n        <List sx={{pt: 0}}>\n            <ListItemButton onClick={() => changeLanguage('en')}>\n                <ListItemText primary={t('lang_english')}/>\n            </ListItemButton>\n            <ListItemButton onClick={() => changeLanguage('de')}>\n                <ListItemText primary={t('lang_german')}/>\n            </ListItemButton>\n        </List>\n    </ResponsiveDialog>\n}\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {backendService} = props;\n    const [langDialogProps, openLangDialog] = useInfoDialog();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [progress, setProgress] = useState(false);\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n            .finally(() => setProgress(false))\n    }, [backendService, history, setError, state.email, state.shared_password]);\n\n    const InfoContent = () => {\n        const infoText = t('info_personal_code', {returnObjects: true}) as string[];\n        return <>{infoText.map(text => <DialogContentText children={text}/>)}</>\n    }\n\n    return (\n        (<>\n            <Container maxWidth=\"lg\">\n                <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    disabled={progress}\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    disabled={progress}\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={openInfo}>\n                                                    <InfoOutlined color=\"inherit\"/>\n                                                </IconButton>\n                                            </InputAdornment>),\n                                    }}\n                                />\n                                <LoadingButton\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                    loading={progress}\n                                >\n                                    {t('login_submit')}\n                                </LoadingButton>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Box>\n            </Container>\n            <Fab title={t('change_language')}\n                 color=\"primary\"\n                 size=\"medium\"\n                 onClick={openLangDialog}\n                 children={<LanguageOutlined/>}/>\n            <ChangeLanguageDialog {...langDialogProps}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default Login;\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {TabContext, TabPanel} from \"@mui/lab\";\nimport {Box, Button, Container, DialogContentText, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, Prompt} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {MoodModel} from \"./service/Model\";\nimport {useData, useOptions} from \"./mood/Chart\";\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Mood'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<MoodModel>();\n    const [modified, setModified] = useState(false);\n    const [panel, setPanel] = useState(\"0\");\n    const [progress, setProgress] = useState(true);\n    const failed = !progress && !mood;\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    const initialLoad = useCallback(() => {\n        setProgress(true);\n        backendService.getMood(date)\n            .then(setMood, setError)\n            .then(() => setModified(false))\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [backendService, setError]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const onSaveClick = useCallback(() => {\n        if (!mood) return;\n        backendService.putMood(date, mood)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t]);\n\n    const onMoodChange = useCallback((mood: MoodModel) => {\n        setMood(mood);\n        setModified(true);\n    }, []);\n    const data = useData(mood?.x ?? 0, mood?.y ?? 0);\n    const options = useOptions(onMoodChange);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => {\n                if (panel !== \"1\") return <></>\n                return <>\n                    <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                    <ResponsiveIconButton requiresAttention={modified}\n                                          icon={<CheckCircleOutlined/>}\n                                          onClick={onSaveClick}\n                                          description={t('save')}/>\n                </>\n            }\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified, panel])\n\n    const infoText = t('info_mood', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    const titleKey = user.type === \"student\" ? \"mood_please_select_mood_student\" : \"mood_please_select_mood_homeowner\";\n    return <Track>\n        {progress && <LinearProgress/>}\n        {failed && <RetryMessage retry={initialLoad}/>}\n        {mood &&\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}} disableGutters>\n            <TabContext value={panel}>\n                <TabPanel value=\"0\">\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('mood_question_home')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => setPanel('1')}\n                                children={t('yes')}/>\n                            <Button\n                                sx={{marginLeft: 2}}\n                                variant=\"contained\"\n                                onClick={() => setPanel('2')}\n                                children={t('no')}/>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"1\">\n                    <Typography variant=\"h5\" align=\"center\" paragraph>{t(titleKey)}</Typography>\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Bubble data={data} options={options} height={100} width={100}/>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <Paper square variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('mood_come_back_later')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button variant=\"contained\" component={RouterLink} to=\"/\">{t('go_back')}</Button>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n            </TabContext>\n        </Container>\n        }\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {ChartData, ChartOptions} from \"chart.js\";\nimport {useTranslation} from \"react-i18next\";\nimport {useMemo} from \"react\";\nimport {useTheme} from \"@mui/material\";\n\nexport const useData: (x: number, y: number) => ChartData = (x, y) => {\n    const theme = useTheme();\n    return useMemo(() => ({\n        datasets: [{\n            data: [{x, y, r: 20}],\n            borderWidth: 1,\n            borderColor: theme.palette.divider,\n            color: theme.palette.text.primary,\n            backgroundColor: theme.palette.primary.main,\n            pointHitRadius: 25,\n            hoverRadius: 0,\n        }]\n    }), [theme, x, y]);\n}\nexport const useOptions: (onChange: (value: { x: number, y: number }) => void) => ChartOptions = (onChange) => {\n    const {t} = useTranslation();\n    return useMemo(() => ({\n        maintainAspectRatio: true,\n        aspectRation: 1,\n        scales: {\n            xScale: {\n                alignToPixels: true,\n                max: 10,\n                min: 0,\n                ticks: {display: false},\n                grid: {display: false},\n                title: {\n                    display: true,\n                    text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                },\n            },\n            yScale: {\n                alignToPixels: true,\n                max: 10,\n                min: 0,\n                ticks: {display: false},\n                grid: {display: false},\n                title: {\n                    display: true,\n                    text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                },\n            }\n        },\n        onHover: function (e: any) {\n            const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n            if (point.length) e.native.target.style.cursor = 'grab'\n            else e.native.target.style.cursor = 'default'\n        },\n        plugins: {\n            dragData: {\n                dragX: true,\n                showTooltip: false,\n                onDragStart: () => null,\n                onDrag: () => null,\n                onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                    e.target.style.cursor = 'default'\n                    onChange(value);\n                },\n            },\n            legend: {display: false},\n            tooltip: {enabled: false}\n        }\n    }), [onChange, t]);\n}\n","import {Box, Button, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link} from \"react-router-dom\";\n\nfunction Page404(props: {}) {\n    const {t} = useTranslation();\n    return (\n        <Box sx={{\n            display: 'flex',\n            flexDirection: 'column',\n            alignItems: 'center',\n            height: '70vh',\n            justifyContent: 'center'\n        }}>\n            <Typography variant=\"h1\" children=\"404\" gutterBottom/>\n            <Typography variant=\"h5\" paragraph children={t('page_not_found')}/>\n            <Button\n                color=\"primary\"\n                variant=\"contained\"\n                component={Link}\n                to='/'\n            >{t('go_back')}</Button>\n        </Box>\n    )\n}\n\nexport default Page404;\n","import {CheckCircleOutlined} from \"@mui/icons-material\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport RetryMessage from \"./common/RetryMessage\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ConsumerModel} from \"./service/Model\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface HeaderProps {\n    consumer: ConsumerModel\n}\n\nconst compareConsumerProps = (a: HeaderProps, b: HeaderProps) => a.consumer.consumerId === b.consumer.consumerId\nconst ConsumerHeader = React.memo((props: { consumer: ConsumerModel }) => {\n    const {consumer} = props;\n    const consumerType = consumerLookup(consumer.type);\n    return (<Tooltip title={translate(consumer.name, consumer.customName)} enterTouchDelay={0}>\n        <Avatar\n            variant=\"rounded\"\n            sx={{backgroundColor: consumerType.color, width: 30, height: 30}}\n            children={consumerType.icon}\n        />\n    </Tooltip>)\n}, compareConsumerProps);\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'PastBehavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [progress, setProgress] = useState(true);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n    const failed = !progress && !rows;\n\n    const {setAppBar, backendService} = props;\n\n    const initialLoad = useCallback(() => {\n        if (!validDate) return;\n        setProgress(true);\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return ({\n                            header: <ConsumerHeader consumer={c}/>,\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        });\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n            .finally(() => setProgress(false));\n    }, [validDate, backendService, setError, date]);\n\n    useEffect(initialLoad, [initialLoad]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        if (!rows) return;\n        backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log);\n    }, [backendService, date, rows, setError, setSuccess, t]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t])\n\n    if (!validDate) return <Redirect to='/'/>\n\n    const InfoContent = () => {\n        const infoText = t('info_past_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            {progress && <LinearProgress/>}\n            {failed && <RetryMessage retry={initialLoad}/>}\n            {rows &&\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\"/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell/>\n                                {energyAvailable.map((v) => <TableCell sx={{backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            }\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {Container, Stack} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date) => <PowerEntry date={date} backendService={backendService}/>)}\n                </Stack>\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import {createTime} from \"../common/Time\";\nimport {ThermostatModel} from \"../service/Model\";\n\nexport const data_ = {\n    useAdvanced: false,\n    simple: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ],\n    advanced: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ]\n} as ThermostatModel\n","import CompareArrowsOutlined from \"@mui/icons-material/CompareArrowsOutlined\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport RotateLeft from \"@mui/icons-material/RotateLeft\"\nimport SaveAlt from \"@mui/icons-material/SaveAlt\"\nimport Container from \"@mui/material/Container\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport Divider from \"@mui/material/Divider\";\nimport Grid, {GridSize} from \"@mui/material/Grid\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Stack from \"@mui/material/Stack\"\nimport Switch from \"@mui/material/Switch\"\nimport Typography from \"@mui/material/Typography\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport {createTime} from \"./common/Time\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ThermostatModel, TimeItem} from \"./service/Model\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {ThermostatDaySetting} from \"./thermostats/ThermostatDaySetting\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copySetting = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst copyData = (data: ThermostatModel): ThermostatModel => ({\n    ...data,\n    simple: copySetting(data.simple),\n    advanced: copySetting(data.advanced)\n})\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nconst compareDays = (a: TimeItem[][], b: TimeItem[][]) => a.length === b.length &&\n    a.every((day, dayIndex) =>\n        day.length === b[dayIndex].length && day.every((item, itemIndex) =>\n            item.time === b[dayIndex][itemIndex].time && item.temperature === b[dayIndex][itemIndex].temperature))\nconst compareData = (a: ThermostatModel, b: ThermostatModel) => a.useAdvanced === b.useAdvanced &&\n    compareDays(a.simple, b.simple) && compareDays(a.advanced, b.advanced)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<ThermostatModel>(data_)\n    const [initialData, setInitialData] = useState<ThermostatModel>(data_)\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [t('day_weekdays'), t('day_weekend')]\n    const dayLabels = [t('day_monday'), t('day_tuesday'), t('day_wednesday'), t('day_thursday'), t('day_friday'), t('day_saturday'), t('day_sunday')]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (!data) return;\n                data.simple = data.simple.map(day => sortDay(day));\n                data.advanced = data.advanced.map(day => sortDay(day));\n                setData(data);\n                setInitialData(data);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setInitialData(data))\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    const modified = !compareData(data, initialData);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton\n                    requiresAttention={modified}\n                    description={t('save')}\n                    icon={<SaveAlt/>}\n                    onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save, modified]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n    const onCopyFrom = useCallback((id: string) => {\n        setID(+id);\n        setCopyFromOpen(true);\n    }, []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => {\n            const intId = +id;\n            const state = copyData(prevState)\n            if (intId > 9) {\n                state.simple[intId - 10].splice(index, 1)\n            } else {\n                state.advanced[intId].splice(index, 1)\n            }\n            return state;\n        });\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10].push({time: time, temperature: +temperature})\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id].push({time: time, temperature: +temperature})\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10][index] = {time: time, temperature: +temperature};\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id][index] = {time: time, temperature: +temperature};\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    const copyFrom = useCallback((fromID: number) => {\n        if (id === undefined) return;\n        setData(prevState => {\n            const state = copyData(prevState);\n            const from = (fromID > 9 ? prevState.simple[fromID - 10] : prevState.advanced[fromID]).map(it => ({...it}));\n            if (id > 9) {\n                state.simple[id - 10] = from;\n            } else {\n                state.advanced[id] = from;\n            }\n            return state;\n        });\n    }, [id])\n\n    if (!data) return <></>\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.advanced.length < index ? empty : data.advanced[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: data.simple[index]\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 4}\n    ]\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\" sx={{paddingTop: 1}}>\n                <Stack direction=\"row\" spacing={1} sx={{alignItems: \"center\", justifyContent: \"end\", pb: 1}}>\n                    <Typography variant=\"subtitle1\"\n                                sx={{textTransform: 'uppercase'}}\n                    >{t('thermostat_use_advanced_settings')}</Typography>\n                    <Switch\n                        checked={data.useAdvanced}\n                        onChange={(event, value) => setData(prevState => ({...prevState, useAdvanced: value}))}/>\n                </Stack>\n\n                {tabs.map((tab, index) => (\n                    <TabPanel index={index} value={data.useAdvanced ? 1 : 0} key={index}>\n                        <Grid container spacing={1}>\n                            {tab.days.map((day) => (\n                                <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                    <ThermostatDaySetting\n                                        id={day.id}\n                                        title={day.label}\n                                        items={day.data}\n                                        onAddTime={onAddTime}\n                                        onCopyFrom={onCopyFrom}\n                                        onEdit={(id, index) => {\n                                            setID(+id);\n                                            setIndex(index);\n                                            setTime(day.data[index].time);\n                                            setTemperature(String(day.data[index].temperature));\n                                            setShowTimePicker(index > 0);\n                                            setEditTimeOpen(true);\n                                        }}\n                                        onDelete={onDelete}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                ))}\n            </Container>\n            <ModifyTimeItemDialog\n                title={t('thermostat_add_entry')}\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title={t('thermostat_edit_entry')}\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ResponsiveDialog title={t('dialog_copy_from_title')} open={copyFromOpen}\n                              onClose={() => setCopyFromOpen(false)}>\n                <DialogContent sx={{minWidth: 300}}>\n                    <List>\n                        {dayLabels.map((day, index) =>\n                            <ListItem\n                                key={index}\n                                button\n                                disabled={index === id}\n                                onClick={() => {\n                                    copyFrom(index);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                        <Divider variant=\"middle\"/>\n                        {simpleDayLabels.map((day, index) =>\n                            <ListItem\n                                key={index + 10}\n                                button\n                                disabled={index + 10 === id}\n                                onClick={() => {\n                                    copyFrom(index + 10);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                    </List>\n                </DialogContent>\n            </ResponsiveDialog>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import {ArrowForward, ElectricalServicesOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {\n    Box,\n    Button,\n    Collapse,\n    Container,\n    DialogContentText,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    Stack,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport {CancelTokenSource} from \"axios\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Energienetze Steiermark', link: 'https://portal.e-netze.at/'},\n    {name: 'Kelag', link: 'https://services.kelag.at/ISS/Services.aspx'},\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n    const [cancelToken, setCancelToken] = useState<CancelTokenSource | undefined>();\n    const progress = !!cancelToken;\n\n    const onUpload = useCallback((file: File) => {\n        if (progress) return;\n        const {promise, cancelToken} = backendService.postConsumption(file);\n        setCancelToken(cancelToken);\n        promise\n            .then(() => {\n                setSuccess(t('file_upload_success'));\n                setCancelToken(undefined)\n            }, setError)\n            .catch(console.log);\n    }, [progress, backendService, setSuccess, setError, t])\n\n    const onCancel = useCallback(() => {\n        setCancelToken(prevState => {\n            prevState?.cancel();\n            return undefined;\n        });\n    }, [])\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const infoText = t('info_upload', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">{t('network_operators')}</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                        <ListItemIcon><ArrowForward/></ListItemIcon>\n                                    </ListItemButton>)\n                                }\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <Stack direction=\"row\" spacing={1}>\n                            <Box sx={{flexGrow: 1}}>\n                                <label htmlFor=\"contained-button-file\">\n                                    <Input\n                                        accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                        id=\"contained-button-file\"\n                                        type=\"file\"\n                                        onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                                    />\n                                    <LoadingButton\n                                        loading={progress}\n                                        fullWidth\n                                        size=\"large\"\n                                        variant=\"contained\"\n                                        component=\"span\"\n                                        loadingPosition=\"start\"\n                                        startIcon={<CloudUploadOutlined/>}\n                                    >{t('action_upload')}</LoadingButton>\n                                </label>\n                            </Box>\n                            <Collapse in={progress} orientation=\"horizontal\">\n                                <Button size=\"large\" onClick={onCancel}>{t('cancel')}</Button>\n                            </Collapse>\n                        </Stack>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\nimport {\n    Container,\n    DialogContentText,\n    Divider,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport ResponsiveIconButton from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nfunction UserInfo(props: {}) {\n    const user = useContext(UserContext);\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_settings')}/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {Avatar, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useHistory, useLocation} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh'\n})\n\nfunction Verify(props: Props) {\n    const [password, setPassword] = useState<string>('')\n    const [error, setError] = useSnackBar()\n    const {t} = useTranslation();\n    const location = useLocation<{ email: string }>();\n    const history = useHistory();\n    const [progress, setProgress] = useState(false);\n    const {email} = location.state;\n    const {backendService} = props;\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.login(email, password)\n            .then(() => history.push('/'), setError)\n            .catch(console.log)\n            .finally(() => setProgress(false))\n    }, [backendService, email, history, password, setError]);\n\n    const handleChange = useCallback(e => setPassword(e.target.value), []);\n\n    if (!email) return <Redirect to={'/'}/>\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            disabled={progress}\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={password}\n                            onChange={handleChange}\n                            required\n                            fullWidth/>\n                        <LoadingButton\n                            loading={progress}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</LoadingButton>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default Verify;\n","import {LinearProgress} from \"@mui/material\";\nimport React, {useContext} from \"react\";\nimport {Route, Switch} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport Archive from \"./Archive\";\nimport Behavior from \"./Behavior\";\nimport Consumers from \"./Consumers\";\nimport Feedback from \"./Feedback\";\nimport Home from \"./Home\";\nimport LoadingPage from \"./LoadingPage\";\nimport Login from \"./Login\";\nimport Logout from \"./Logout\";\nimport Mood from \"./Mood\";\nimport Page404 from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\nimport Power from \"./Power\";\nimport BackendService from \"./service/BackendService\";\nimport Thermostats from \"./Thermostats\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Verify from \"./Verify\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    return (\n        <Switch>\n            <Route path=\"/verify\"><Verify {...props}/></Route>\n            <Route exact path=\"/login\"><Login {...props}/></Route>\n            <Route exact path=\"/\"><Login {...props}/></Route>\n            <Route exact path={`${process.env.PUBLIC_URL}/`}><Login {...props}/></Route>\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n\nexport function LoadingRouter(props: { backendService: BackendService, retry: () => void }) {\n    return (\n        <Switch>\n            <Route path=\"/logout\"><Logout {...props}/></Route>,\n            <Route><LoadingPage retry={props.retry}/></Route>,\n        </Switch>\n    )\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return <LinearProgress/>;\n\n    const paths = {\n        logout: () => <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: () => <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: () => <Route path=\"/user\"><User {...props}/></Route>,\n        power: () => <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: () => <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: () => <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: () => <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: () => <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        mood: () => <Route path=\"/mood\"><Mood {...props}/></Route>,\n        thermostats: () => <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        feedback: () => <Route path=\"/feedback\"><Feedback {...props}/></Route>,\n        root: () => <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: () => <Route exact path={`${process.env.PUBLIC_URL}/`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout(),\n        paths.user(),\n        paths.home(),\n        paths.root(),\n        paths.archive(),\n        paths.consumers(),\n        paths.behavior(),\n        paths.mood(),\n        paths.pastbehavior(),\n        paths.feedback()\n    ]\n    const homeOwnerPaths = [paths.upload()];\n\n    return (\n        <Switch>\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404/></Route>\n        </Switch>\n    )\n}\n","import axios, {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    ThermostatModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<ThermostatModel | null> {\n        return this.backend\n            .get<ThermostatModel>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => {\n                if (!data) return data;\n                data.simple = data.simple.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                data.advanced = data.advanced.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                return data;\n            })\n    }\n\n    putThermostats(data: ThermostatModel) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const source = axios.CancelToken.source();\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return {\n            promise: this.backend.post('/consumption', formData, this.addAuth({cancelToken: source.token})),\n            cancelToken: source\n        }\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useTracking} from \"react-tracking\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\nimport Config from \"./Config\";\nimport {LoadingRouter, PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel>({userId: '', email: '', type: '', location: ''});\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n    const [retry, setRetry] = useState(0);\n    const onRetry = useCallback(() => setRetry(prevState => prevState + 1), []);\n    const isAuthenticated = user!!;\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser, setError)\n                .catch(console.error);\n        }\n    }, [isLoggedIn, setError, retry])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({title: \"\", showBackButton: false, children: () => <></>});\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            {isLoggedIn !== undefined &&\n            <React.Suspense fallback={<LinearProgress/>}>\n                <ColorModeContext.Provider value={colorMode}>\n                    <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                        {!isLoggedIn && <PublicRouter backendService={backendService}/>}\n                        {isLoggedIn && isAuthenticated &&\n                        <UserContext.Provider value={user}>\n                            <Track>\n                                <Root>\n                                    <DefaultAppBar title={appBar.title}\n                                                   hideBackButton={!appBar.showBackButton}\n                                                   children={appBar.children()}/>\n                                    <DefaultDrawer/>\n                                    <Content>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <PrivateRouter\n                                                backendService={backendService}\n                                                setAppBar={setAppBar}\n                                            />\n                                        </LocalizationProvider>\n                                    </Content>\n                                </Root>\n                                <DefaultBottomNavigation/>\n                            </Track>\n                        </UserContext.Provider>\n                        }\n                        {isLoggedIn && !isAuthenticated &&\n                        <LoadingRouter backendService={backendService} retry={onRetry}/>\n                        }\n                        <UserConfirmationDialog {...userConfirmationProps}/>\n                        <AlertSnackbar {...error} severity=\"error\"/>\n                    </Router>\n                </ColorModeContext.Provider>\n            </React.Suspense>\n            }\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const useDarkTheme = mode ? mode === 'dark' : prefersDarkMode;\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: useDarkTheme ? \"dark\" : \"light\",\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: useDarkTheme ? 1 : 0,\n                    color: \"inherit\",\n                },\n            },\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [useDarkTheme]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}