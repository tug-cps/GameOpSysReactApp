{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","common/AlertSnackbar.tsx","common/UseSnackBar.tsx","Login.tsx","Verify.tsx","common/Tracking.ts","Logout.tsx","common/ResponsiveDialog.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","Upload.tsx","User.tsx","common/Date.ts","power/PowerEntry.tsx","Power.tsx","archive/ArchiveEntry.tsx","Archive.tsx","common/ConsumerTools.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","Behavior.tsx","Home.tsx","common/Time.ts","thermostats/DummyData.ts","thermostats/ModifyTimeItemDialog.tsx","thermostats/ChartOptions.ts","thermostats/ThermostatDaySetting.tsx","Thermostats.tsx","Mood.tsx","Page404.tsx","PastBehavior.tsx","Routes.tsx","service/BackendService.ts","common/UserConfirmationDialog.tsx","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","open","variant","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","props","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","ml","hideBackButton","IconButton","color","marginRight","onClick","goBack","size","Typography","mx","multiLine","DefaultBottomNavigation","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","Math","random","predictions","token","setItem","parse","saveFakeDB","DefaultExecutor","reject","data","console","log","this","status","statusText","headers","config","request","response","FaultyExecutor","executor","ok","error","findInDict","dict","matcher","key","FakeBackend","backendConfig","url","Authorization","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","startsWith","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","AlertSnackbar","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","onClose","Alert","message","useSnackBar","state","setState","prevState","useCallback","StyledGrid","styled","Grid","margin","padding","flexDirection","alignItems","withRouter","withTranslation","setError","backendService","height","Container","maxWidth","container","spacing","item","xs","md","paragraph","Avatar","backgroundColor","onSubmit","preventDefault","requestPin","catch","TextField","autoFocus","autoComplete","target","required","fullWidth","InputProps","endAdornment","InputAdornment","InfoOutlined","Button","Form","StyledContainer","useEffect","login","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Logout","page","logout","ResponsiveDialog","fullScreen","Dialog","edge","DialogTitle","useInfoDialog","Lorem","DialogContentText","InfoDialog","DialogContent","content","DialogActions","ResponsiveIconButton","breakpoint","AttentionIcon","Badge","invisible","requiresAttention","Tooltip","description","startIcon","Input","operators","link","providers","Upload","success","setSuccess","setAppBar","infoProps","openInfo","showBackButton","paddingTop","gutterBottom","mt","ListItemButton","href","ListItemAvatar","ElectricalServicesOutlined","htmlFor","accept","file","files","postConsumption","UserInfo","items","Email","text","MyLocation","idx","ConsumersInfo","Power","ArrowRight","LanguageInfo","i18next","resolvedLanguage","language","setLanguage","changeLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","ColorModeContext","colorModeValue","mode","Brightness4Outlined","toggleColorMode","User","setUser","getUser","ExitToApp","square","useParsedDate","useMemo","animation","PowerEntry","dateParsed","setData","getProcessedConsumption","consumptions","labels","from","datasets","fill","borderColor","Card","CardHeader","CardContent","setDates","getProcessedConsumptions","Stack","ArchiveEntry","parsedDate","Done","Archive","getPredictions","translate","str","override","de","en","consumers","laundry","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","green","homeoffice","red","emobility","temperature","high","med","amber","low","unknown","consumerLookup","compareProps","a","b","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","consumerType","ListItemSecondaryAction","Consumers","setConsumers","getConsumers","applyChangeActive","putConsumer","paddingBottom","s","compareCellProps","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","prefersDarkMode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","selectionStarted","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","hours","formatTime","colors","energyAvailable","isoDate","Behavior","setRows","modified","setModified","all","getPrediction","filter","enterTouchDelay","find","p","handleChange","cells","handleSave","putPrediction","disableGutters","TableContainer","maxHeight","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","HomeCard","done","CardActionArea","CardMedia","noWrap","Home","interactions","userInteractionNeeded","results","textAlign","now","createTime","minutes","getDay","getMonth","data_","useAdvanced","simple","time","advanced","ModifyTimeItemDialog","showTimePicker","StaticTimePicker","ampm","setTime","renderInput","my","setTemperature","onOK","chartOptions","plugins","legend","tooltip","enabled","scales","ticks","stepSize","callback","printTime","toLocaleTimeString","hour","minute","length","every","getTime","compareItem","ThermostatDaySetting","palette","labeledTimeItems","dataItems","getHours","getMinutes","showLine","stepped","main","secondary","createData","colSpan","hover","onEdit","disabled","onDelete","CardActions","onCopyFrom","marginLeft","onAddTime","TabPanel","other","hidden","copySetting","day","copyData","sortDay","sort","compareDays","dayIndex","itemIndex","Thermostats","initialData","setInitialData","Success","simpleDayLabels","dayLabels","getThermostats","reset","save","putThermostats","addTimeOpen","setAddTimeOpen","editTimeOpen","setEditTimeOpen","copyFromOpen","setCopyFromOpen","setShowTimePicker","setID","intId","setIndex","addEntry","editEntry","copyFrom","fromID","empty","days","simpleDays","tabs","lg","xl","justifyContent","pb","textTransform","Switch","checked","tab","minWidth","DraggableGraph","defaults","divider","commonScaleProps","alignToPixels","grid","borderWidth","pointHitRadius","maintainAspectRatio","aspectRation","onHover","chart","getElementsAtEventForMode","intersect","native","style","cursor","dragData","dragX","showTooltip","onDragStart","element","onDrag","datasetIndex","onDragEnd","setMood","getMood","onSaveClick","putMood","onMoodChange","title_key","Page404","m","Link","path","compareConsumerProps","ConsumerHeader","PastBehavior","URLSearchParams","useLocation","search","get","validDate","isValid","isPast","PublicRouter","PrivateRouter","paths","pastbehavior","root","exact","commonPaths","managementPaths","homeOwnerPaths","studentPaths","unpack","BackendService","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","addAuth","finally","post","put","delete","formData","FormData","append","UserConfirmationDialog","onAccept","Config","createContext","App","setMode","createTheme","lightGreen","contrastText","components","MuiUseMediaQuery","defaultProps","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","subscribe","appBar","setAppBarCb","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","resources","resourcesToBackend","namespace","i18n","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3a1f525e.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t459,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t460,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 446;\nmodule.exports = webpackAsyncContext;","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\nimport {SettingsOutlined} from \"@mui/icons-material\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n    multiLine?: React.ReactNode;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={{ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}}}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\">\n                        <ArrowBack/>\n                    </IconButton>\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n                {props.multiLine}\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'high'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'med'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'low'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => Math.random() < 0.5 ? 4 : 0)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1)\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString())\n                if (index < 0) return e.error()\n                db.consumer[user].splice(index, 1)\n\n                saveFakeDB(db)\n                return e.ok({})\n            }\n            return e.error()\n        })\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n\n        })\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import {InfoOutlined} from \"@mui/icons-material\";\nimport {Avatar, Box, Button, Container, Grid, InputAdornment, TextField, Typography} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t, backendService, history} = props;\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (<InputAdornment position=\"end\"><InfoOutlined\n                                            color=\"inherit\"/></InputAdornment>),\n                                    }}\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                >\n                                    {t('login_submit')}\n                                </Button>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Container>\n            </Box>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Login)));\n","import {Avatar, Button, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect, useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    email?: string\n    password: string\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Verify(props: Props) {\n    const [state, setState] = useState<State>({password: ''})\n    const [error, setError] = useSnackBar()\n    const {location, history, backendService, t} = props;\n\n    useEffect(() => {\n        // @ts-ignore\n        if (!location?.state?.email) {\n            history.push('/')\n        }\n    }, [location, history])\n\n    const handleSubmit = (e: React.FormEvent) => {\n        const {password} = state;\n        // @ts-ignore\n        const {email} = location.state;\n\n        e.preventDefault();\n        backendService.login(email, password)\n            .then(() => history.push('/'))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{\n                        margin: '1px',\n                        backgroundColor: 'secondary.main',\n                    }}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={state.password}\n                            onChange={(e) => setState({...state, password: e.target.value})}\n                            required\n                            fullWidth/>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</Button>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Verify)));\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/login\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"><ArrowBack/></IconButton>\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle>{props.title}</DialogTitle>\n            {props.children}\n        </Dialog>\n    );\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nexport function ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n\n    const AttentionIcon = () => <Badge invisible={!props.requiresAttention}\n                                       variant=\"dot\"\n                                       color=\"info\">{props.icon}</Badge>\n    return <>\n        {breakpoint &&\n        <Tooltip title={props.description}>\n            <IconButton color=\"inherit\" onClick={props.onClick} size=\"large\"><AttentionIcon/></IconButton>\n        </Tooltip>\n        }\n        {!breakpoint &&\n        <Button startIcon={<AttentionIcon/>} color=\"inherit\" onClick={props.onClick}>{props.description}</Button>\n        }\n    </>;\n}\n","import {ElectricalServicesOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Button,\n    Container,\n    Divider,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Energienetze Steiermark', link: 'https://portal.e-netze.at/'},\n    {name: 'Kelag', link: 'https://services.kelag.at/ISS/Services.aspx'},\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\nconst providers = [\n    {name: 'Energie Graz', link: 'https://portal.energie-graz.at/'},\n    {name: 'Energie Steiermark', link: 'https://portal.energie-graz.at/'},\n    {name: 'Verbund', link: 'https://www.verbund.at/login'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <>\n            <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n        </>\n    }), [t, setAppBar, openInfo])\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Network operators</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n                                <Divider component=\"li\"/>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Energy providers</Typography>\n                                </li>\n                                {providers.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <label htmlFor=\"contained-button-file\">\n                            <Input\n                                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                id=\"contained-button-file\"\n                                type=\"file\"\n                                onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                            />\n                            <Button variant=\"contained\"\n                                    size=\"large\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    component=\"span\"\n                                    startIcon={<CloudUploadOutlined/>}\n                            >{t('action_upload')}</Button>\n                        </label>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    Container,\n    Divider,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\nimport {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [user, setUser] = useState<UserModel>()\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            {user &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo user={user}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            }\n            {!user && <LinearProgress/>}\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import {ChartOptions} from \"chart.js\";\nimport React, {useEffect, useState} from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\nimport {Card, CardContent, CardHeader} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useParsedDate} from \"../common/Date\";\n\ninterface Props {\n    backendService: BackendService;\n    date: string;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport function PowerEntry(props: Props) {\n    const {backendService, date} = props;\n    const dateParsed = useParsedDate(date);\n    const {t} = useTranslation();\n    const [data, setData] = useState<any>();\n    useEffect(() => {\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                setData({\n                    labels: Array.from(Array(24).keys()),\n                    datasets: consumptions.map((c) => ({\n                            label: c.type,\n                            data: c.data,\n                            fill: false,\n                            backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\n                        })\n                    )\n                })\n            })\n            .catch(console.log)\n    }, [backendService, date]);\n\n    return (\n        <Card variant=\"outlined\" key={date}>\n            <CardHeader title={t('archive_entry_date', {date: dateParsed})}/>\n            <CardContent>\n                <Line data={data} options={options}/>\n            </CardContent>\n        </Card>\n    )\n}","import {Container, Stack} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date) => <PowerEntry date={date} backendService={backendService}/>)}\n                </Stack>\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","import React from \"react\";\nimport {ListItem, ListItemAvatar, ListItemText} from \"@mui/material\";\nimport {useHistory} from \"react-router-dom\";\nimport {Done} from \"@mui/icons-material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useParsedDate} from \"../common/Date\";\n\nfunction ArchiveEntry(props: { date: string }) {\n    const {date} = props;\n    const parsedDate = useParsedDate(date);\n    const history = useHistory();\n    const {t} = useTranslation();\n\n    return (\n        <ListItem button onClick={() => history.push(`/pastbehavior?date=${date}`)}>\n            <ListItemAvatar><Done/></ListItemAvatar>\n            <ListItemText>{t('archive_entry_date', {date: parsedDate})}</ListItemText>\n        </ListItem>\n    )\n}\n\nexport default ArchiveEntry;\n","import React, {useEffect, useState} from 'react';\nimport {Container, List} from \"@mui/material\";\nimport ArchiveEntry from \"./archive/ArchiveEntry\";\nimport {useTranslation} from \"react-i18next\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PrivateRouteProps} from \"./App\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {InfoOutlined} from \"@mui/icons-material\";\n\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Archive(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [dates, setDates] = useState(new Array<string>());\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>}/>\n        });\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\">\n                <List>\n                    {dates.map((value) =>\n                        <ArchiveEntry date={value} key={value}/>)}\n                </List>\n            </Container>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\nimport i18next from \"i18next\";\nimport {TranslatedString} from \"../service/Model\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\nconst consumers: any = {\n    laundry: {icon: <LocalLaundryService/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    cooking: {icon: <Restaurant/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    dishes: {icon: <FreeBreakfast/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]},\n    hygiene: {icon: <Bathtub/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    entertainment: {icon: <Movie/>, color: teal[shadeDefault], colorAlt: teal[shadeAlt]},\n    wellness: {icon: <Spa/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    homeoffice: {icon: <Computer/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    emobility: {icon: <Power/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    temperature: {icon: <AcUnit/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    high: {icon: <Help/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    med: {icon: <Help/>, color: amber[shadeDefault], colorAlt: amber[shadeAlt]},\n    low: {icon: <Help/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    unknown: {icon: <Help/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]}\n}\n\nexport const consumerLookup = (type: string) => type in consumers ? consumers[type] : consumers.unknown\n\nexport function backgroundColor(type: string) {\n    return type in consumers ? consumers[type].color : \"#0ff\";\n}\n\nexport function iconLookup(type: string): JSX.Element {\n    return type in consumers ? consumers[type].icon : <Help/>\n}\n","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup, translate} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = translate(consumer.name, consumer.customName);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>([]);\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) =>\n            backendService.putConsumer({...consumer, active: !consumer.active})\n                .then(() => backendService.getConsumers())\n                .then(setConsumers, setError)\n                .catch(console.log),\n        [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const content = () => <DialogContentText>\n        {t('consumer_help').split('\\n').map((s) => <p>{s}</p>)}\n    </DialogContentText>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers && consumers.map((it) =>\n                            <ConsumerCard\n                                key={it.consumerId}\n                                consumer={it}\n                                clickActive={applyChangeActive}\n                            />\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={content()} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {\n    Avatar,\n    Container,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date();\nconst isoDate = new Date().toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(isoDate)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return {\n                            header: (\n                                <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{width: 30, height: 30, backgroundColor: consumerType.color}}\n                                    >\n                                        {consumerType.icon}\n                                    </Avatar>\n                                </Tooltip>\n                            ),\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        }\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() =>\n            rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n                .then(() => {\n                    setSuccess(t('changes_saved'));\n                    setModified(false);\n                }, setError)\n                .catch(console.log)\n        , [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<SaveAlt/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    if (!rows) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {energyAvailable.map((v) => <TableCell\n                                    sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Box, Card, CardActionArea, CardContent, CardMedia, Container, Stack, SvgIcon, Typography,} from \"@mui/material\";\nimport React, {useContext, useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface Item {\n    title: string\n    subtitle: string\n    icon: any\n    to: string\n}\n\ninterface CardProps {\n    item: Item,\n    done: boolean\n}\n\nfunction HomeCard(props: CardProps) {\n    const {item, done} = props\n    const {t} = useTranslation()\n\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\"}}>\n            <CardActionArea component={RouterLink} to={item.to}>\n                <Box display=\"flex\">\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={item.icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{t(item.title)}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{t(item.subtitle)}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nconst destinations = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nconst userInteractionNeeded = (type?: string) => {\n    switch (type) {\n        case \"management\":\n            return [destinations.upload]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.upload, destinations.mood]\n        default:\n            return null;\n    }\n}\n\nconst userResult = (type?: string) => {\n    switch (type) {\n        case \"homeowner\":\n            return [destinations.power]\n        default:\n            return null;\n    }\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n    const interactions = userInteractionNeeded(user?.type);\n    const results = userResult(user?.type);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                <Stack spacing={3}>\n                    {interactions &&\n                    <Stack spacing={1}>\n                        <Typography textAlign=\"center\" variant=\"h5\">Ihre Aufmerksamkeit wird benötigt</Typography>\n                        {interactions.map((item: Item, index: number) =>\n                            <HomeCard item={item} done={false} key={index}/>)}\n                    </Stack>\n                    }\n                    {results &&\n                    <Stack spacing={1}>\n                        <Typography textAlign=\"center\" variant=\"h5\">Neue Ergebnisse verfügbar</Typography>\n                        {results.map((item: Item, index: number) =>\n                            <HomeCard item={item} done key={index}/>)}\n                    </Stack>\n                    }\n                </Stack>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import {createTime} from \"../common/Time\";\nimport {ThermostatModel} from \"../service/Model\";\n\nexport const data_ = {\n    useAdvanced: false,\n    simple: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ],\n    advanced: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ]\n} as ThermostatModel\n","import {StaticTimePicker} from \"@mui/lab\";\nimport {Button, DialogActions, DialogContent, InputAdornment, TextField} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"../common/ResponsiveDialog\";\n\ninterface Props {\n    title: string\n    open: boolean\n    showTimePicker: boolean\n    onClose: () => void\n    onOK: () => void\n    time: Date | null\n    setTime: (time: Date | null) => void\n    temperature: string | null\n    setTemperature: (temperature: string | null) => void\n}\n\nexport function ModifyTimeItemDialog(props: Props) {\n    const {t} = useTranslation();\n    return <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n        <DialogContent>\n            {props.showTimePicker &&\n            <StaticTimePicker\n                label={t('thermostat_select_time')}\n                ampm={false}\n                value={props.time}\n                onChange={(date) => props.setTime(date)}\n                renderInput={() => <></>}\n            />\n            }\n            <TextField\n                variant=\"filled\"\n                sx={{my: 2}}\n                fullWidth\n                label={t('thermostat_temperature')}\n                type=\"number\"\n                value={props.temperature}\n                onChange={(e) => props.setTemperature(e.target.value)}\n                InputProps={{endAdornment: <InputAdornment position=\"start\">°C</InputAdornment>}}/>\n        </DialogContent>\n        <DialogActions>\n            <Button color=\"primary\" onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n            <Button color=\"primary\" onClick={props.onOK}>{t('dialog_button_ok')}</Button>\n        </DialogActions>\n    </ResponsiveDialog>\n}\n","import {Palette} from '@mui/material/styles';\nimport {TimeItem} from \"../service/Model\";\n\nexport const chartOptions = {\n    plugins: {\n        legend: {display: false},\n        tooltip: {enabled: false}\n    },\n    scales: {\n        x: {\n            min: 0,\n            max: 24,\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + '⁰⁰'\n            }\n        },\n        y: {\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + ' °C'\n            }\n        }\n    }\n}\n\nexport const createData = (dataItems: TimeItem[], palette: Palette) => ({\n    datasets: [\n        {\n            data: dataItems.map((i) => ({x: (i.time.getHours() + i.time.getMinutes() / 60), y: i.temperature})),\n            showLine: true,\n            fill: true,\n            stepped: true,\n            borderColor: palette.primary.main,\n            backgroundColor: palette.secondary.main,\n        }\n    ],\n})\n","import Add from \"@mui/icons-material/Add\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    useTheme\n} from \"@mui/material\";\nimport React from \"react\";\nimport {Scatter} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {createTime} from \"../common/Time\";\nimport {TimeItem} from \"../service/Model\";\nimport {chartOptions, createData} from \"./ChartOptions\";\n\ninterface LabeledTimeItem extends TimeItem {\n    label: string\n}\n\ninterface Props {\n    title: string;\n    id: string;\n    items: TimeItem[];\n    onAddTime: (id: string) => void\n    onCopyFrom: (id: string) => void\n    onDelete: (id: string, index: number) => void\n    onEdit: (id: string, index: number) => void\n}\n\nconst printTime = (time: Date) => time.toLocaleTimeString('de-DE', {hour: '2-digit', minute: '2-digit'})\nconst labelTimeItems = (array: TimeItem[]): LabeledTimeItem[] => array.map((value, index) => ({\n    ...value, label: `${printTime(value.time)} - ${printTime(array[index + 1]?.time ?? createTime(23, 59))}`\n}))\n\nconst compareItem = (a: TimeItem, b: TimeItem) => a.time.getTime() === b.time.getTime() && a.temperature === b.temperature\nexport const compareProps = (a: Props, b: Props) =>\n    a.id === b.id && a.title === b.title && a.items.length === b.items.length &&\n    a.items.every((value, index) => compareItem(value, b.items[index]))\n\nexport const ThermostatDaySetting = React.memo((props: Props) => {\n    const {palette} = useTheme();\n    const {t} = useTranslation();\n    const {title, items} = props;\n\n    const labeledTimeItems = labelTimeItems(items);\n    const dataItems = [...items, {time: createTime(23, 59), temperature: items[items.length - 1].temperature}]\n    const data = createData(dataItems, palette);\n    return (\n        <Card>\n            <CardHeader title={title}/>\n            <CardContent>\n                <Scatter data={data} options={chartOptions} height={50}/>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{t('thermostat_timespan')}</TableCell>\n                            <TableCell colSpan={2}>{t('thermostat_temperature')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {labeledTimeItems.map((item, index) => (\n                            <TableRow key={index} hover={true}>\n                                <TableCell>{item.label}</TableCell>\n                                <TableCell>{item.temperature} °C</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => props.onEdit(props.id, index)}\n                                    ><Edit/></IconButton>\n                                    <IconButton\n                                        disabled={index < 1}\n                                        size=\"small\"\n                                        onClick={() => props.onDelete(props.id, index)}\n                                    ><Delete/></IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n            <CardActions>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.onCopyFrom(props.id)}\n                >{t('thermostat_copy_from')}</Button>\n                <Box mx=\"auto\"/>\n                <Tooltip title={t('thermostat_insert_timespan') as string}>\n                    <IconButton\n                        sx={{marginLeft: \"auto\"}}\n                        onClick={() => props.onAddTime(props.id)}\n                        disabled={items?.length > 4}\n                    ><Add/></IconButton>\n                </Tooltip>\n            </CardActions>\n        </Card>\n    )\n}, compareProps)\n","import CompareArrowsOutlined from \"@mui/icons-material/CompareArrowsOutlined\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport RotateLeft from \"@mui/icons-material/RotateLeft\"\nimport SaveAlt from \"@mui/icons-material/SaveAlt\"\nimport Container from \"@mui/material/Container\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport Divider from \"@mui/material/Divider\";\nimport Grid, {GridSize} from \"@mui/material/Grid\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Stack from \"@mui/material/Stack\"\nimport Switch from \"@mui/material/Switch\"\nimport Typography from \"@mui/material/Typography\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {createTime} from \"./common/Time\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ThermostatModel, TimeItem} from \"./service/Model\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {ThermostatDaySetting} from \"./thermostats/ThermostatDaySetting\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copySetting = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst copyData = (data: ThermostatModel): ThermostatModel => ({\n    ...data,\n    simple: copySetting(data.simple),\n    advanced: copySetting(data.advanced)\n})\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nconst compareDays = (a: TimeItem[][], b: TimeItem[][]) => a.length === b.length &&\n    a.every((day, dayIndex) =>\n        day.length === b[dayIndex].length && day.every((item, itemIndex) =>\n            item.time === b[dayIndex][itemIndex].time && item.temperature === b[dayIndex][itemIndex].temperature))\nconst compareData = (a: ThermostatModel, b: ThermostatModel) => a.useAdvanced === b.useAdvanced &&\n    compareDays(a.simple, b.simple) && compareDays(a.advanced, b.advanced)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<ThermostatModel>(data_)\n    const [initialData, setInitialData] = useState<ThermostatModel>(data_)\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [t('day_weekdays'), t('day_weekend')]\n    const dayLabels = [t('day_monday'), t('day_tuesday'), t('day_wednesday'), t('day_thursday'), t('day_friday'), t('day_saturday'), t('day_sunday')]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (!data) return;\n                data.simple = data.simple.map(day => sortDay(day));\n                data.advanced = data.advanced.map(day => sortDay(day));\n                setData(data);\n                setInitialData(data);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setInitialData(data))\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    const modified = !compareData(data, initialData);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton\n                    requiresAttention={modified}\n                    description={t('save')}\n                    icon={<SaveAlt/>}\n                    onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save, modified]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n    const onCopyFrom = useCallback((id: string) => {\n        setID(+id);\n        setCopyFromOpen(true);\n    }, []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => {\n            const intId = +id;\n            const state = copyData(prevState)\n            if (intId > 9) {\n                state.simple[intId - 10].splice(index, 1)\n            } else {\n                state.advanced[intId].splice(index, 1)\n            }\n            return state;\n        });\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10].push({time: time, temperature: +temperature})\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id].push({time: time, temperature: +temperature})\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10][index] = {time: time, temperature: +temperature};\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id][index] = {time: time, temperature: +temperature};\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    const copyFrom = useCallback((fromID: number) => {\n        if (id === undefined) return;\n        setData(prevState => {\n            const state = copyData(prevState);\n            const from = (fromID > 9 ? prevState.simple[fromID - 10] : prevState.advanced[fromID]).map(it => ({...it}));\n            if (id > 9) {\n                state.simple[id - 10] = from;\n            } else {\n                state.advanced[id] = from;\n            }\n            return state;\n        });\n    }, [id])\n\n    if (!data) return <></>\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.advanced.length < index ? empty : data.advanced[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: data.simple[index]\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 4}\n    ]\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\" sx={{paddingTop: 1}}>\n                <Stack direction=\"row\" spacing={1} sx={{alignItems: \"center\", justifyContent: \"end\", pb: 1}}>\n                    <Typography variant=\"subtitle1\"\n                                sx={{textTransform: 'uppercase'}}\n                    >{t('thermostat_use_advanced_settings')}</Typography>\n                    <Switch\n                        checked={data.useAdvanced}\n                        onChange={(event, value) => setData(prevState => ({...prevState, useAdvanced: value}))}/>\n                </Stack>\n\n                {tabs.map((tab, index) => (\n                    <TabPanel index={index} value={data.useAdvanced ? 1 : 0} key={index}>\n                        <Grid container spacing={1}>\n                            {tab.days.map((day) => (\n                                <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                    <ThermostatDaySetting\n                                        id={day.id}\n                                        title={day.label}\n                                        items={day.data}\n                                        onAddTime={onAddTime}\n                                        onCopyFrom={onCopyFrom}\n                                        onEdit={(id, index) => {\n                                            setID(+id);\n                                            setIndex(index);\n                                            setTime(day.data[index].time);\n                                            setTemperature(String(day.data[index].temperature));\n                                            setShowTimePicker(index > 0);\n                                            setEditTimeOpen(true);\n                                        }}\n                                        onDelete={onDelete}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                ))}\n            </Container>\n            <ModifyTimeItemDialog\n                title={t('thermostat_add_entry')}\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title={t('thermostat_edit_entry')}\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ResponsiveDialog title={t('dialog_copy_from_title')} open={copyFromOpen}\n                              onClose={() => setCopyFromOpen(false)}>\n                <DialogContent sx={{minWidth: 300}}>\n                    <List>\n                        {dayLabels.map((day, index) =>\n                            <ListItem\n                                key={index}\n                                button\n                                disabled={index === id}\n                                onClick={() => {\n                                    copyFrom(index);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                        <Divider variant=\"middle\"/>\n                        {simpleDayLabels.map((day, index) =>\n                            <ListItem\n                                key={index + 10}\n                                button\n                                disabled={index + 10 === id}\n                                onClick={() => {\n                                    copyFrom(index + 10);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                    </List>\n                </DialogContent>\n            </ResponsiveDialog>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {Card, CardContent, Container, Typography, useTheme} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {MoodModel} from \"./service/Model\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n}\n\nexport const compareProps = (a: GraphProps, b: GraphProps) => a.mood.x === b.mood.x && a.mood.y === b.mood.y\n\nconst DraggableGraph = React.memo(function (props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n    const commonScaleProps = {\n        alignToPixels: true,\n        max: 10,\n        min: 0,\n        ticks: {display: false},\n        grid: {display: false},\n    }\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            plugins: {\n                // @ts-ignore\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: (e: any, element: any) => null,\n                    onDrag: (e: any, datasetIndex: any, index: number, value: number) => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        }} height={100} width={100}/>\n}, compareProps)\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'MoodPage'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<MoodModel>({x: 5, y: 5});\n    const [modified, setModified] = useState(false);\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = useCallback(() => {\n        backendService.putMood(date, mood!)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t])\n\n    const onMoodChange = useCallback((mood: MoodModel) => {\n        setMood(mood);\n        setModified(true);\n    }, [])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      icon={<SaveAlt/>}\n                                      onClick={onSaveClick}\n                                      description={t('save')}/>\n            </>\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified])\n\n    const title_key = user?.type === \"student\" ? \"mood_please_select_mood_student\" : \"mood_please_select_mood_homeowner\";\n\n    return <Track>\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n            <Typography variant=\"h5\" align=\"center\" paragraph>{t(title_key)}</Typography>\n            <Card>\n                {mood &&\n                <CardContent>\n                    <DraggableGraph mood={mood} onChange={onMoodChange}/>\n                </CardContent>\n                }\n            </Card>\n        </Container>\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Box, Button, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport function Page404(props: { path: string }) {\n    return (\n        <Box m={16} textAlign='center'>\n            <Typography variant=\"h1\">404</Typography>\n            <Typography variant=\"h5\">Page not found</Typography>\n            <Box m={2}>\n                <Button color=\"primary\" variant=\"contained\" component={Link} to={props.path}>Go home</Button>\n            </Box>\n        </Box>\n    )\n}\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport SaveAlt from \"@mui/icons-material/SaveAlt\";\nimport {\n    Avatar,\n    Container,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ConsumerModel} from \"./service/Model\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface HeaderProps {\n    consumer: ConsumerModel\n}\n\nconst compareConsumerProps = (a: HeaderProps, b: HeaderProps) => a.consumer.consumerId === b.consumer.consumerId\nconst ConsumerHeader = React.memo((props: { consumer: ConsumerModel }) => {\n    const {consumer} = props;\n    const consumerType = consumerLookup(consumer.type);\n    return (<Tooltip title={translate(consumer.name, consumer.customName)} enterTouchDelay={0}>\n        <Avatar\n            variant=\"rounded\"\n            sx={{backgroundColor: consumerType.color, width: 30, height: 30}}\n            children={consumerType.icon}\n        />\n    </Tooltip>)\n}, compareConsumerProps);\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        if (!validDate) return;\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return ({\n                            header: <ConsumerHeader consumer={c}/>,\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        });\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [validDate, backendService, setError, date]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        rows && backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, date, rows, setError, setSuccess, t]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<SaveAlt/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t])\n\n    if (!validDate) return <Redirect to={'/'}/>\n    if (!rows) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\"/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell/>\n                                {energyAvailable.map((v) => <TableCell sx={{backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Verify from \"./Verify\";\nimport Logout from \"./Logout\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Power from \"./Power\";\nimport Archive from \"./Archive\";\nimport Consumers from \"./Consumers\";\nimport Behavior from \"./Behavior\";\nimport React, {useContext} from \"react\";\nimport Home from \"./Home\";\nimport Thermostats from \"./Thermostats\";\nimport BackendService from \"./service/BackendService\";\nimport Mood from \"./Mood\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {Page404} from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    const {backendService} = props;\n    return <>\n        <Redirect to=\"/login\"/>\n        <Switch>\n            <Route path=\"/verify\"><Verify backendService={backendService}/></Route>\n            <Route path=\"/login\"><Login backendService={backendService}/></Route>\n            <Route><Page404 path=\"/login\"/></Route>\n        </Switch>\n    </>\n\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return null;\n\n    const paths = {\n        logout: <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: <Route path=\"/user\"><User {...props}/></Route>,\n        power: <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        mood: <Route path=\"/mood\"><Mood  {...props}/></Route>,\n        thermostats: <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        root: <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: <Route exact path={`${process.env.PUBLIC_URL}`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout, paths.user, paths.home, paths.root]\n    const managementPaths = [paths.upload];\n    const homeOwnerPaths = [paths.upload, paths.power, paths.consumers, paths.behavior, paths.mood];\n    const studentPaths = [paths.archive, paths.consumers, paths.behavior, paths.mood, paths.pastbehavior];\n\n    return (\n        <Switch>\n            {user.type === \"management\" && managementPaths}\n            {user.type === \"student\" && studentPaths}\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    ThermostatModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<ThermostatModel | null> {\n        return this.backend\n            .get<ThermostatModel>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => {\n                if (!data) return data;\n                data.simple = data.simple.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                data.advanced = data.advanced.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                return data;\n            })\n    }\n\n    putThermostats(data: ThermostatModel) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, StyledEngineProvider, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTracking} from \"react-tracking\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport Config from \"./Config\";\nimport {PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser)\n                .catch(console.error);\n        }\n    }, [isLoggedIn])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({\n        title: \"\",\n        showBackButton: false,\n        children: () => <></>\n    });\n    const setAppBarCb = useCallback((props: AppBarProps) => setAppBar(props), [])\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                {isLoggedIn !== undefined &&\n                <React.Suspense fallback={<LinearProgress/>}>\n                    <ColorModeContext.Provider value={colorMode}>\n                        <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                            {!isLoggedIn &&\n                            <PublicRouter backendService={backendService}/>\n                            }\n                            {isLoggedIn &&\n                            <UserContext.Provider value={user}>\n                                <Track>\n                                    <Root>\n                                        <DefaultAppBar title={appBar.title}\n                                                       hideBackButton={!appBar.showBackButton}\n                                                       children={appBar.children()}/>\n                                        <DefaultDrawer/>\n                                        <Content>\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                                <PrivateRouter\n                                                    backendService={backendService}\n                                                    setAppBar={setAppBarCb}\n                                                />\n                                            </LocalizationProvider>\n                                        </Content>\n                                    </Root>\n                                    <DefaultBottomNavigation/>\n                                </Track>\n                            </UserContext.Provider>\n                            }\n                            <UserConfirmationDialog {...userConfirmationProps}/>\n                        </Router>\n                    </ColorModeContext.Provider>\n                </React.Suspense>\n                }\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: mode ? mode : (prefersDarkMode ? 'dark' : 'light'),\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                        // When bottom bar is shown, raise FAB position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [prefersDarkMode, mode]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}