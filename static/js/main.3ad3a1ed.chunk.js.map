{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/UseSnackBar.tsx","Login.tsx","Verify.tsx","common/Tracking.ts","Logout.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","Upload.tsx","User.tsx","power/PowerEntry.tsx","Power.tsx","archive/ArchiveEntry.tsx","Archive.tsx","common/ConsumerTools.tsx","consumers/ConsumerCard.tsx","consumers/DeleteConsumerDialog.tsx","consumers/EditConsumerDialog.tsx","consumers/CreateConsumerDialog.tsx","Consumers.tsx","behavior/BehaviorDragSelect.tsx","Behavior.tsx","behavior/BehaviorStyles.tsx","Home.tsx","thermostats/ThermostatDaySetting.tsx","Thermostats.tsx","common/DefaultBottomNavigation.tsx","Mood.tsx","Routes.tsx","service/BackendService.ts","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","App.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","open","onClose","Alert","variant","message","useSnackBar","useState","state","setState","prevState","useCallback","response","statusText","withRouter","withStyles","palette","spacing","createStyles","paper","margin","padding","display","flexDirection","alignItems","avatar","backgroundColor","secondary","main","submit","withTranslation","shared_password","email","error","setError","classes","backendService","history","Box","height","Container","maxWidth","Grid","container","item","xs","md","className","justifyContent","Typography","paragraph","component","Avatar","onSubmit","preventDefault","requestPin","push","catch","TextField","autoFocus","label","value","onChange","target","required","fullWidth","autoComplete","Button","type","color","marginTop","form","width","password","location","useEffect","login","useDefaultTracking","trackingData","options","user","useContext","UserContext","extendData","data","date","Date","userId","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Logout","page","useHistory","logout","console","log","LinearProgress","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","PersonOutline","power","ShowChart","archive","History","mood","Mood","useStyles","makeStyles","theme","menuButton","marginRight","menu","MenuButton","goBack","useTheme","matches","useMediaQuery","breakpoints","down","React","useTranslation","useNavDrawerDestinations","toggleDrawer","event","key","hideBackButton","Fragment","SwipeableDrawer","anchor","onOpen","onClick","onKeyDown","role","List","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","IconButton","edge","Menu","ArrowBack","DefaultAppBar","trigger","useScrollTrigger","Slide","appear","direction","in","AppBar","Toolbar","mx","children","multiLine","style","visibility","input","success","setSuccess","my","sm","gutterBottom","name","link","op","Link","href","accept","file","files","postConsumption","htmlFor","size","startIcon","UserInfo","items","Email","text","MyLocation","Group","it","idx","ConsumersInfo","Power","count","consumers","ArrowRight","LanguageInfo","Language","select","language","changeLanguage","MenuItem","i18next","languages","setLanguage","setUser","setConsumers","getUser","getConsumers","length","ExitToApp","py","disableGutters","Paper","Divider","process","animation","PowerEntry","this","getProcessedConsumption","consumptions","labels","Array","from","datasets","c","fill","borderColor","Component","card","dates","setDates","getProcessedConsumptions","Card","CardContent","ArchiveEntry","predictions","setPredictions","getPrediction","prediction","CardActionArea","v","consumerId","Archive","getPredictions","translate","str","override","de","en","icons","laundry","LocalLaundryService","cooking","Restaurant","dishes","FreeBreakfast","hygiene","Bathtub","entertainment","Movie","wellness","Spa","homeoffice","Computer","misc","Help","temperature","guests","emobility","iconLookup","ConsumerCard","consumer","clickEdit","clickActive","clickDelete","undefined","ListItemAvatar","customName","ListItemSecondaryAction","active","Visibility","VisibilityOff","Delete","DeleteConsumerDialog","Dialog","DialogTitle","DialogContent","DialogContentText","DialogActions","onApply","EditConsumerDialog","consumerName","CreateConsumerDialog","Consumers","refresh","onApplyDelete","useDeleteConsumerDialog","removeConsumer","deleteProps","setDelete","onApplyEdit","useEditConsumerDialog","putConsumer","editProps","setEdit","useCreateConsumerDialog","postConsumer","createProps","setCreate","pb","Fab","Add","BehaviorDragSelect","handleTouchStartCell","isLeftClick","isTouch","selectionStarted","eventToCellLocation","row","column","onSelectionStart","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","nextRowCount","Math","abs","nextColumnCount","maxRows","maxColumns","handleTouchEndWindow","r","assign","minRow","min","maxRow","max","minColumn","maxColumn","isCellBeingSelected","window","addEventListener","removeEventListener","i","TableRow","TableCell","header","selected","j","disabled","beingSelected","onTouchStart","onTouchMove","defaultProps","Infinity","onInput","Cell","td","handleTouchStart","handleTouchMove","nextProps","nextState","nextContext","passive","ref","onMouseDown","onMouseMove","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","rowIndex","cellIndex","hours","formatTime","colors","energyAvailable","toISOString","slice","overflow","maxHeight","tableDragSelect","userSelect","borderCollapse","position","top","zIndex","border","divider","modified","all","filter","Tooltip","enterTouchDelay","find","p","when","putPrediction","SaveAlt","TableContainer","Table","stickyHeader","TableHead","align","String","TableBody","cells","HomeCard","media","background","xl","CardMedia","noWrap","Home","homeDestinations","useHomeDestinations","index","locale","plugins","legend","tooltip","enabled","scales","x","ticks","stepSize","callback","y","ThermostatDaySetting","dataItems","time","substring","indexOf","showLine","stepped","square","colSpan","hover","Edit","CardActions","flexShrink","a11yProps","TabPanel","other","hidden","Thermostats","viewType","tabs","days","lg","Tabs","newValue","Tab","tab","day","root","bottom","spacer","DefaultBottomNavigation","setValue","useBottomBarDestinations","elevation","BottomNavigation","destination","showLabels","BottomNavigationAction","DraggableGraph","defaults","borderWidth","hoverRadius","pointHitRadius","maintainAspectRatio","aspectRation","alignToPixels","grid","displayGrid","onHover","chart","getElementsAtEventForMode","intersect","native","cursor","dragData","dragX","showTooltip","onDragStart","element","onDrag","datasetIndex","onDragEnd","setMood","getMood","putMood","ReactRouter","isLoggedIn","Page404","m","textAlign","path","PublicPaths","PrivatePaths","paths","exact","unpack","BackendService","backend","accessToken","isLoggedInObservable","BehaviorSubject","localStorage","getItem","pipe","token","next","sharedPassword","get","params","setItem","removeItem","addAuth","finally","consumer_name","post","put","consumer_active","delete","formData","FormData","append","JSON","stringify","config","headers","Authorization","getFakeDB","db","users","today","setDate","getDate","toString","owner","processedConsumption","reduce","val","random","parse","saveFakeDB","DefaultExecutor","reject","status","request","FaultyExecutor","executor","ok","findInDict","dict","matcher","FakeBackend","backendConfig","url","includes","lastIndexOf","findIndex","splice","endsWith","uuidv4","split","pop","startsWith","array","elementMatcher","changes","consumerIndex","meldArrayElement","axios","create","baseURL","apiDescription","Config","createContext","App","useMemo","createTheme","lightGreen","contrastText","MuiGrid","MuiCard","overrides","MuiFab","right","MuiSnackbar","anchorOriginBottomCenter","setIsLoggedIn","dispatch","postTracking","subscribe","ThemeProvider","CssBaseline","Suspense","fallback","Provider","i18n","use","resourcesToBackend","namespace","resources","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.3ad3a1ed.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t369,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t370,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 361;\nmodule.exports = webpackAsyncContext;","import {Snackbar} from \"@material-ui/core\";\nimport {Alert, Color} from \"@material-ui/lab\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: Color\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar open={props.open} autoHideDuration={autoHideDuration} onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import React, {useState} from 'react';\nimport {\n    Avatar,\n    Box,\n    Button,\n    Container,\n    createStyles,\n    Grid,\n    TextField,\n    Theme,\n    Typography,\n    WithStyles\n} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {RouteComponentProps} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {withRouter} from \"react-router\";\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst styles = ({palette, spacing}: Theme) => createStyles({\n    paper: {\n        margin: spacing(2),\n        padding: spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: spacing(1),\n        backgroundColor: palette.secondary.main,\n    },\n    submit: {\n        margin: spacing(3, 0, 2),\n    },\n});\n\ninterface Props extends WithStyles<typeof styles>, RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {classes, t, backendService, history} = props;\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n    }\n\n    return (\n        <>\n            <Box display=\"flex\" alignItems=\"center\" height=\"100vh\">\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={2}>\n                        <Grid item xs={12} md className={classes.paper}>\n                            <Box alignItems=\"center\" display=\"flex\" justifyContent=\"center\" flexDirection=\"column\"\n                                 height=\"100%\">\n                                <Typography paragraph component=\"h1\" variant=\"h2\">Ansers</Typography>\n                                <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                            </Box>\n                        </Grid>\n                        <Grid item xs={12} md className={classes.paper}>\n                            <Avatar className={classes.avatar}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    id=\"shared_password\"\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    autoComplete=\"email\"\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    className={classes.submit}\n                                >\n                                    {t('login_submit')}\n                                </Button>\n                            </form>\n                        </Grid>\n                    </Grid>\n                </Container>\n            </Box>\n            <AlertSnackbar {...error} />\n        </>\n    );\n}\n\nexport default withRouter(withStyles(styles)(withTranslation()(Login)));\n","import React, {useEffect, useState} from 'react';\nimport {Avatar, Button, Container, createStyles, TextField, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport BackendService from \"./service/BackendService\";\nimport {withRouter} from \"react-router\";\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst styles = ({palette, spacing}: Theme) => createStyles({\n    paper: {\n        marginTop: spacing(8),\n        display: 'flex',\n        flexDirection: 'column',\n        alignItems: 'center',\n    },\n    avatar: {\n        margin: spacing(1),\n        backgroundColor: palette.secondary.main,\n    },\n    form: {\n        width: '100%',\n        marginTop: spacing(1),\n    },\n    submit: {\n        margin: spacing(3, 0, 2),\n    },\n});\n\ninterface Props extends WithStyles<typeof styles>, RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    email?: string\n    password: string\n}\n\nfunction Verify(props: Props) {\n    const [state, setState] = useState<State>({password: ''})\n    const [error, setError] = useSnackBar()\n    const {location, history, backendService, classes, t} = props;\n\n    useEffect(() => {\n        // @ts-ignore\n        if (!location?.state?.email) {\n            history.push('/')\n        }\n    }, [location, history])\n\n    const handleSubmit = (e: React.FormEvent) => {\n        const {password} = state;\n        // @ts-ignore\n        const {email} = location.state;\n\n        e.preventDefault();\n        backendService.login(email, password)\n            .then(() => history.push('/'))\n            .catch(setError)\n    }\n\n    return (\n        <>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <div className={classes.paper}>\n                    <Avatar className={classes.avatar}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <form className={classes.form} onSubmit={handleSubmit}>\n                        <TextField\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={state.password}\n                            onChange={(e) => setState({...state, password: e.target.value})}\n                            required\n                            fullWidth/>\n                        <Button type=\"submit\"\n                                fullWidth\n                                variant=\"contained\"\n                                color=\"primary\"\n                                className={classes.submit}>{t('verify_login')}</Button>\n                    </form>\n                </div>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>\n    );\n}\n\nexport default withRouter(withStyles(styles)(withTranslation()(Verify)));\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@material-ui/core\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/login\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import {\n    AcUnit,\n    CloudUploadOutlined,\n    EditOutlined,\n    History,\n    HomeOutlined,\n    Mood,\n    PersonOutline,\n    ShowChart\n} from \"@material-ui/icons\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: PersonOutline, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations() {\n    const user = useContext(UserContext)\n    if (!user) return []\n    switch (user.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        default:\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.thermostats, destinations.user];\n    }\n}\n\n\nexport function useNavDrawerDestinations() {\n    const user = useContext(UserContext)\n    if (!user) return []\n    switch (user.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        default:\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.thermostats, destinations.user];\n    }\n}\n\nexport function useHomeDestinations() {\n    const user = useContext(UserContext)\n    if (!user) return []\n    switch (user.type) {\n        case \"management\":\n            return [destinations.upload, destinations.user]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        default:\n            return [destinations.power, destinations.upload, destinations.mood]\n    }\n}\n\n","import {\n    AppBar,\n    Box,\n    IconButton,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useMediaQuery,\n    useScrollTrigger,\n    useTheme\n} from \"@material-ui/core\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport React from \"react\";\nimport {makeStyles} from \"@material-ui/core/styles\";\nimport SwipeableDrawer from \"@material-ui/core/SwipeableDrawer\";\nimport List from \"@material-ui/core/List\";\nimport ListItem from \"@material-ui/core/ListItem\";\nimport ListItemText from \"@material-ui/core/ListItemText\";\nimport {useTranslation} from \"react-i18next\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\nimport {ArrowBack, Menu} from \"@material-ui/icons\";\n\nconst useStyles = makeStyles(theme => ({\n        menuButton: {\n            marginRight: theme.spacing(2),\n        },\n        menu: {\n            width: 250\n        }\n    })\n);\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n    multiLine?: React.ReactNode;\n}\n\nfunction MenuButton(props: { hideBackButton?: boolean }) {\n    const {goBack} = useHistory();\n    const classes = useStyles();\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('xs'));\n    const [state, setState] = React.useState({open: false});\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    const toggleDrawer = (open: boolean) => (event: React.KeyboardEvent | React.MouseEvent) => {\n        if (event && event.type === 'keydown' && ((event as React.KeyboardEvent).key === 'Tab' || (event as React.KeyboardEvent).key === 'Shift')) {\n            return;\n        }\n        setState({...state, open: open});\n    };\n\n    if (props.hideBackButton === true) {\n        if (matches) return null;\n        return <React.Fragment>\n            <SwipeableDrawer\n                anchor=\"left\"\n                open={state.open}\n                onClose={toggleDrawer(false)}\n                onOpen={toggleDrawer(true)}\n            >\n                <Box\n                    onClick={toggleDrawer(false)}\n                    onKeyDown={toggleDrawer(false)}\n                    role=\"presentation\"\n                    className={classes.menu}\n                >\n                    <List>\n                        {destinations.map((d) =>\n                            <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                <ListItemText primary={t(d.title)}/>\n                            </ListItem>)\n                        }\n                    </List>\n                </Box>\n\n            </SwipeableDrawer>\n            <IconButton\n                edge=\"start\"\n                className={classes.menuButton}\n                color=\"inherit\"\n                aria-label=\"open Menu\"\n                onClick={toggleDrawer(true)}\n            >\n                <Menu/>\n            </IconButton>\n        </React.Fragment>\n    }\n    return (\n        <IconButton\n            edge=\"start\"\n            className={classes.menuButton}\n            color=\"inherit\"\n            aria-label=\"back\"\n            onClick={goBack}\n        >\n            <ArrowBack/>\n        </IconButton>\n    )\n}\n\n\nfunction DefaultAppBar(props: React.PropsWithChildren<Props>) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n    return (\n        <React.Fragment>\n            <Slide appear={false} direction=\"down\" in={!trigger}>\n                <AppBar>\n                    <Toolbar>\n                        <MenuButton hideBackButton={props.hideBackButton}/>\n                        <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                        <Box mx=\"auto\"/>\n                        {props.children}\n                    </Toolbar>\n                    {props.multiLine}\n                </AppBar>\n            </Slide>\n            <Toolbar style={{visibility: \"hidden\"}}/>\n        </React.Fragment>\n    )\n}\n\nexport default DefaultAppBar;","import React from 'react';\nimport {\n    Box,\n    Button,\n    Container,\n    createStyles,\n    Grid,\n    Link,\n    List,\n    ListItem,\n    Typography,\n    WithStyles\n} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport BackendService from \"./service/BackendService\";\nimport {useTranslation, WithTranslation, withTranslation} from \"react-i18next\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {CloudUploadOutlined} from \"@material-ui/icons\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst styles = () => createStyles({\n    input: {\n        display: 'none',\n    },\n});\n\ninterface Operator {\n    name: string;\n    link: string;\n}\n\ninterface Props extends WithStyles<typeof styles>, WithTranslation {\n    backendService: BackendService\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, classes} = props;\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    const operators: Operator[] = [\n        {name: 'Netz Oberösterreich', link: 'https://netz-online.netzgmbh.at/eServiceWeb/main.html'},\n        {name: 'Netz Burgenland', link: 'https://smartmeter.netzburgenland.at'},\n        {name: 'Kärnten Netz', link: 'https://meinportal.kaerntennetz.at/meinPortal/Login.aspx?service=verbrauch'},\n    ]\n\n    return (\n        <Track>\n            <DefaultAppBar hideBackButton title={t('card_upload_title')}/>\n            <Container maxWidth=\"md\">\n                <Box my={1}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                            <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                            <Typography color=\"textSecondary\" paragraph>\n                                {t('upload_instruction_download')}\n                            </Typography>\n                            <List>\n                                {operators.map((op) => {\n                                    return (\n                                        <ListItem key={op.name}>\n                                            <Typography><Link href={op.link}>{op.name}</Link></Typography>\n                                        </ListItem>\n                                    )\n                                })}\n                            </List>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Typography\n                                variant=\"h5\"\n                                gutterBottom\n                            >{t('upload_title_upload')}</Typography>\n                            <Typography\n                                color=\"textSecondary\"\n                                paragraph\n                            >{t('upload_instruction_upload')}</Typography>\n                            <input\n                                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                className={classes.input}\n                                id=\"input-file\"\n                                type=\"file\"\n                                onChange={(e) => e.target?.files && onUpload(e.target.files[0])}/>\n                            <label htmlFor=\"input-file\">\n                                <Button variant=\"contained\"\n                                        size=\"large\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        component=\"span\"\n                                        startIcon={<CloudUploadOutlined/>}\n                                >{t('action_upload')}</Button>\n                            </label>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default withStyles(styles)(withTranslation()(Upload));\n","import React, {useEffect, useState} from 'react';\nimport {\n    Box,\n    Button,\n    Container,\n    Divider,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    Paper,\n    TextField,\n    Typography\n} from \"@material-ui/core\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport {ArrowRight, Email, ExitToApp, Group, Language, MyLocation, Power} from \"@material-ui/icons\";\nimport i18next from \"i18next\";\nimport {useTranslation, withTranslation, WithTranslation} from \"react-i18next\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport BackendService from \"./service/BackendService\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {UserModel} from \"./service/Model\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface Props extends WithTranslation {\n    backendService: BackendService\n}\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n        {icon: <Group/>, text: user.type},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: { consumers?: number }) {\n    const {t} = useTranslation()\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer', {count: props.consumers})}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { language: string, changeLanguage: (language: string) => void }) {\n    return <ListItem key=\"element_language\">\n        <ListItemIcon><Language/></ListItemIcon>\n        <TextField\n            label=\"Language\"\n            select\n            variant=\"outlined\"\n            fullWidth\n            value={props.language}\n            onChange={(e) => props.changeLanguage(e.target.value)}\n        >\n            <MenuItem value={\"de\"}>German</MenuItem>\n            <MenuItem value={\"en\"}>English</MenuItem>\n        </TextField>\n    </ListItem>\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [language, setLanguage] = useState<string>(i18next.languages[0]);\n    const [user, setUser] = useState<UserModel>()\n    const [consumers, setConsumers] = useState<number>();\n    const [error, setError] = useSnackBar();\n\n    const {backendService, t} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(consumers => consumers?.length | 0)\n            .then(setConsumers, setError)\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const changeLanguage = (language: string) =>\n        i18next.changeLanguage(language)\n            .then(() => setLanguage(language), setError)\n            .catch(console.log)\n\n    return (\n        <Track>\n            <DefaultAppBar hideBackButton title={t('card_user_title')}>\n                <Button\n                    startIcon={<ExitToApp/>}\n                    color=\"inherit\"\n                    component={RouterLink}\n                    to=\"/logout\"\n                >{t('logout')}</Button>\n            </DefaultAppBar>\n            {user &&\n            <Box py={1}>\n                <Container maxWidth=\"sm\" disableGutters>\n                    <Paper variant=\"outlined\">\n                        <List>\n                            <UserInfo user={user}/>\n                            <Divider variant=\"inset\" component=\"li\"/>\n                            {user.type !== \"management\" && <ConsumersInfo consumers={consumers}/>}\n                            <LanguageInfo language={language} changeLanguage={changeLanguage}/>\n                        </List>\n                    </Paper>\n                    {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n                </Container>\n            </Box>\n            }\n            {!user && <LinearProgress/>}\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default withTranslation()(User);\n","import {ChartOptions} from \"chart.js\";\nimport React from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\n\ninterface EntryProps {\n    backendService: BackendService;\n    date: string;\n}\n\ninterface EntryState {\n    data: any;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport class PowerEntry extends React.Component<EntryProps, EntryState> {\n    constructor(props: Readonly<EntryProps>) {\n        super(props);\n        this.state = {\n            data: {}\n        }\n    }\n\n    componentDidMount() {\n        const {backendService, date} = this.props;\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                this.setState({\n                    data: {\n                        labels: Array.from(Array(24).keys()),\n                        datasets: consumptions.map((c) => ({\n                                label: c.type,\n                                data: c.data,\n                                fill: false,\n                                backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\n                            })\n                        )\n                    }\n                })\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        const {data} = this.state;\n        console.log(data)\n        return (\n            <Line data={data} options={options}/>\n        )\n    }\n}","import React, {useEffect, useState} from 'react';\nimport {Card, CardContent, Container, createStyles, Theme, Typography, WithStyles} from \"@material-ui/core\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport BackendService from \"./service/BackendService\";\nimport {PowerEntry} from \"./power/PowerEntry\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst styles = ({spacing}: Theme) => createStyles({\n    card: {\n        marginTop: spacing(2)\n    },\n});\n\ninterface Props extends WithStyles<typeof styles> {\n    backendService: BackendService\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {classes, backendService} = props;\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    return (\n        <Track>\n            <DefaultAppBar title='Power'/>\n            {dates &&\n            <Container maxWidth=\"md\">\n                {dates.map((date) =>\n                    <Card variant=\"outlined\" key={date} className={classes.card}>\n                        <CardContent>\n                            <Typography variant=\"h6\">{date}</Typography>\n                            <PowerEntry date={date} backendService={backendService}/>\n                        </CardContent>\n                    </Card>\n                )}\n            </Container>\n            }\n\n        </Track>\n    )\n}\n\nexport default withStyles(styles)(Power);\n","import React, {useEffect, useState} from \"react\";\nimport BackendService from \"../service/BackendService\";\nimport {UserPredictionModel} from \"../service/Model\";\nimport {Card, CardActionArea, CardContent, Typography} from \"@material-ui/core\";\n\nfunction ArchiveEntry(props: { date: string, backendService: BackendService }) {\n    const {date, backendService} = props;\n    const [predictions, setPredictions] = useState(new Array<UserPredictionModel>());\n    useEffect(() => {\n        backendService.getPrediction(date)\n            .then((prediction) => setPredictions(prediction))\n            .catch(console.log);\n    }, [backendService, date]);\n\n    return (\n        <Card variant=\"outlined\">\n            <CardActionArea>\n                <CardContent>\n                    <Typography variant=\"h6\">{date}</Typography>\n                    {predictions.map((prediction) =>\n                        (\n                            <Typography variant=\"body1\" key={prediction.consumerId}>\n                                {prediction.data.map((v) => v ? '█' : '░')}\n                            </Typography>\n                        ))}\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nexport default ArchiveEntry;\n","import React, {useEffect, useState} from 'react';\nimport {Box, Container} from \"@material-ui/core\";\nimport BackendService from \"./service/BackendService\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport ArchiveEntry from \"./archive/ArchiveEntry\";\nimport {useTranslation} from \"react-i18next\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport useDefaultTracking from \"./common/Tracking\";\n\n\ninterface Props {\n    backendService: BackendService\n}\n\nfunction Archive(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [dates, setDates] = useState(new Array<string>());\n    const {backendService} = props;\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n    return (\n        <Track>\n            <DefaultAppBar title={t('card_archive_title')}/>\n            <Box py={1}>\n                <Container maxWidth=\"md\">\n                    {dates.map((value) =>\n                        <ArchiveEntry date={value} key={value} backendService={props.backendService}/>)}\n                </Container>\n            </Box>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import {\n    AcUnit,\n    Bathtub,\n    Computer,\n    FreeBreakfast,\n    Group,\n    Help,\n    LocalLaundryService,\n    Movie,\n    Power,\n    Restaurant,\n    Spa\n} from \"@material-ui/icons\";\nimport {TranslatedString} from \"../service/Model\";\nimport i18next from \"i18next\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst icons: any = {\n    laundry: <LocalLaundryService/>,\n    cooking: <Restaurant/>,\n    dishes: <FreeBreakfast/>,\n    hygiene: <Bathtub/>,\n    entertainment: <Movie/>,\n    wellness: <Spa/>,\n    homeoffice: <Computer/>,\n    misc: <Help/>,\n    temperature: <AcUnit/>,\n    guests: <Group/>,\n    emobility: <Power/>\n}\n\nexport function iconLookup(name?: string): JSX.Element {\n    return name && name in icons ? icons[name] : <Help/>\n}\n","import {ConsumerModel} from \"../service/Model\";\nimport {Avatar, IconButton, ListItem, ListItemAvatar, ListItemSecondaryAction, ListItemText} from \"@material-ui/core\";\nimport React from \"react\";\nimport {iconLookup, translate} from \"../common/ConsumerTools\";\nimport {Delete, Visibility, VisibilityOff} from \"@material-ui/icons\";\n\nfunction ConsumerCard(props: {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}) {\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar><Avatar>{iconLookup(consumer.type)}</Avatar></ListItemAvatar>\n            <ListItemText primary={translate(consumer.name, consumer.customName)}/>\n            <ListItemSecondaryAction>\n                {clickActive && <IconButton\n                    edge=\"end\"\n                    arial-label=\"show or hide\"\n                    onClick={() => clickActive(consumer)}>\n                    {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                </IconButton>}\n                {clickDelete && <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}>\n                    <Delete/>\n                </IconButton>}\n            </ListItemSecondaryAction>\n        </ListItem>\n    )\n}\n\nexport default ConsumerCard;\n","import {ConsumerModel} from \"../service/Model\";\nimport React, {useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle,\n    List,\n    ListItem,\n    ListItemAvatar,\n    ListItemText,\n    Paper\n} from \"@material-ui/core\";\nimport {iconLookup, translate} from \"../common/ConsumerTools\";\n\nexport function useDeleteConsumerDialog(onApplyDelete: (consumer: ConsumerModel, onClose: () => void) => void) {\n    const [state, setState] = useState<{\n        consumer?: ConsumerModel\n        open: boolean\n    }>({open: false});\n    const onOpen = (consumer: ConsumerModel) => setState({consumer: consumer, open: true})\n    const onClose = () => setState(prevState => ({...prevState, open: false}))\n    return [{\n        ...state,\n        onClose: onClose,\n        onApply: () => onApplyDelete(state.consumer!, onClose),\n    } as Props, onOpen] as const\n}\n\ninterface Props {\n    open: boolean\n    onClose: () => void\n    onApply: () => void\n    consumer?: ConsumerModel\n}\n\nexport function DeleteConsumerDialog(props: Props) {\n    const {t} = useTranslation();\n    const {consumer} = props;\n    return (<Dialog open={props.open} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{t('confirm_dialog_title')}</DialogTitle>\n        {consumer && <React.Fragment>\n            <DialogContent>\n                <Paper variant=\"outlined\">\n                    <List>\n                        <ListItem role={undefined}>\n                            <ListItemAvatar><Avatar>{iconLookup(consumer.type)}</Avatar></ListItemAvatar>\n                            <ListItemText primary={translate(consumer.name, consumer.customName)}/>\n                        </ListItem>\n                    </List>\n                </Paper>\n            </DialogContent>\n\n            <DialogContent>\n                <DialogContentText>{t('confirm_dialog_content', {text: translate(consumer.name, consumer.customName)})}</DialogContentText>\n            </DialogContent>\n        </React.Fragment>}\n        <DialogActions>\n            <Button onClick={props.onClose} color=\"primary\">{t('dialog_button_cancel')}</Button>\n            <Button onClick={props.onApply} color=\"primary\">{t('dialog_button_delete')}</Button>\n        </DialogActions>\n    </Dialog>)\n}\n","import {ConsumerModel} from \"../service/Model\";\nimport React, {ChangeEvent, useState} from \"react\";\nimport {iconLookup, translate} from \"../common/ConsumerTools\";\nimport {useTranslation} from \"react-i18next\";\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogTitle, List, ListItem,\n    ListItemAvatar, ListItemText, Paper,\n    TextField\n} from \"@material-ui/core\";\n\nexport function useEditConsumerDialog(onApplyEdit: (consumer: ConsumerModel, closeDialog: () => void) => void) {\n    const [state, setState] = useState<{ consumer?: ConsumerModel, consumerName?: string, open: boolean }>({open: false});\n    const onOpen = (consumer: ConsumerModel) => setState({\n        consumer: consumer,\n        consumerName: translate(consumer.name, consumer.customName),\n        open: true\n    });\n    const onClose = () => setState(prevState => ({...prevState, open: false}))\n    return [{\n        ...state,\n        onClose: onClose,\n        onApply: () => onApplyEdit({...state.consumer!, customName: state.consumerName!}, onClose),\n        onChange: (e: ChangeEvent<HTMLInputElement>) => setState(prevState => ({\n            ...prevState,\n            consumerName: e.target.value\n        }))\n    } as Props, onOpen] as const\n}\n\ninterface Props {\n    open: boolean\n    consumerName: string\n    consumer?: ConsumerModel\n    onClose: () => void\n    onApply: () => void\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport function EditConsumerDialog(props: Props) {\n    const {t} = useTranslation();\n    return (\n        <Dialog open={props.open} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n            <DialogTitle id=\"form-dialog-title\">{t('title_edit_consumer')}</DialogTitle>\n            <DialogContent>\n                <Paper variant=\"outlined\">\n                    <List>\n                        <ListItem role={undefined}>\n                            <ListItemAvatar><Avatar>{iconLookup(props.consumer?.type)}</Avatar></ListItemAvatar>\n                            <ListItemText primary={props.consumerName}/>\n                        </ListItem>\n                    </List>\n                </Paper>\n            </DialogContent>\n            <DialogContent>\n                <TextField\n                    autoFocus\n                    margin=\"dense\"\n                    id=\"name\"\n                    label={t('consumer_name')}\n                    fullWidth\n                    variant=\"filled\"\n                    value={props.consumerName}\n                    onChange={props.onChange}\n                />\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose} color=\"primary\">{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onApply} color=\"primary\">{t('dialog_button_rename')}</Button>\n            </DialogActions>\n        </Dialog>\n    )\n}\n","import {useTranslation} from \"react-i18next\";\nimport {\n    Avatar,\n    Button,\n    Dialog,\n    DialogActions,\n    DialogContent,\n    DialogContentText,\n    DialogTitle, List, ListItem, ListItemAvatar, ListItemText, Paper,\n    TextField\n} from \"@material-ui/core\";\nimport React, {ChangeEvent, useState} from \"react\";\nimport {iconLookup} from \"../common/ConsumerTools\";\n\ninterface Props {\n    open: boolean\n    consumerName?: string\n    onClose: () => void\n    onApply: () => void\n    onChange: (e: ChangeEvent<HTMLInputElement>) => void\n}\n\nexport function useCreateConsumerDialog(onApply: (consumerName: string, onClose: () => void) => void) {\n    const [state, setState] = useState<{ open: boolean, consumerName?: string }>({open: false});\n    const onOpen = () => setState({consumerName: \"\", open: true});\n    const onClose = () => setState(prevState => ({...prevState, open: false}));\n    return [{\n        ...state,\n        onClose: onClose,\n        onApply: () => onApply(state.consumerName!, onClose),\n        onChange: (e: ChangeEvent<HTMLInputElement>) => setState(prevState => ({\n            ...prevState,\n            consumerName: e.target.value\n        }))\n    } as Props, onOpen] as const;\n}\n\nexport function CreateConsumerDialog(props: Props) {\n    const {t} = useTranslation();\n    return (<Dialog open={props.open} onClose={props.onClose} aria-labelledby=\"form-dialog-title\">\n        <DialogTitle id=\"form-dialog-title\">{t('title_create_consumer')}</DialogTitle>\n        <DialogContent>\n            <Paper variant=\"outlined\">\n                <List>\n                    <ListItem role={undefined}>\n                        <ListItemAvatar><Avatar>{iconLookup(\"misc\")}</Avatar></ListItemAvatar>\n                        <ListItemText primary={props.consumerName}/>\n                    </ListItem>\n                </List>\n            </Paper>\n        </DialogContent>\n        <DialogContent>\n            <DialogContentText>{t('description_consumer_name')}\n            </DialogContentText>\n            <TextField\n                autoFocus\n                margin=\"dense\"\n                id=\"name\"\n                label={t('consumer_name')}\n                fullWidth\n                variant=\"filled\"\n                value={props.consumerName}\n                onChange={props.onChange}\n            />\n        </DialogContent>\n        <DialogActions>\n            <Button onClick={props.onClose} color=\"primary\">{t('dialog_button_cancel')}</Button>\n            <Button onClick={props.onApply} color=\"primary\">{t('dialog_button_create')}</Button>\n        </DialogActions>\n    </Dialog>);\n}\n","import React, {useEffect, useState} from 'react';\nimport {Box, Container, Fab, List, Paper} from \"@material-ui/core\";\nimport BackendService from \"./service/BackendService\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport {ConsumerModel} from \"./service/Model\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {useTranslation} from \"react-i18next\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DeleteConsumerDialog, useDeleteConsumerDialog} from \"./consumers/DeleteConsumerDialog\";\nimport {EditConsumerDialog, useEditConsumerDialog} from \"./consumers/EditConsumerDialog\";\nimport {CreateConsumerDialog, useCreateConsumerDialog} from \"./consumers/CreateConsumerDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {Add} from \"@material-ui/icons\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface Props {\n    backendService: BackendService\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>([]);\n    const [error, setError] = useSnackBar();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const refresh = () => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }\n\n    const [deleteProps, setDelete] = useDeleteConsumerDialog((consumer, onClose) =>\n        backendService.removeConsumer(consumer.consumerId)\n            .then(onClose)\n            .then(refresh)\n            .catch(setError)\n    );\n\n    const [editProps, setEdit] = useEditConsumerDialog((consumer, onClose) =>\n        backendService.putConsumer(consumer)\n            .then(onClose)\n            .then(refresh)\n            .catch(setError)\n    );\n\n    const [createProps, setCreate] = useCreateConsumerDialog((consumerName, onClose) =>\n        backendService.postConsumer(consumerName)\n            .then(onClose)\n            .then(refresh)\n            .catch(setError)\n    );\n\n    const applyChangeActive = (consumer: ConsumerModel) =>\n        backendService.putConsumer({...consumer, active: !consumer.active})\n            .then(refresh)\n            .catch(setError)\n\n    const {t} = useTranslation();\n    return (\n        <Track>\n            <DefaultAppBar title={t('edit_consumers')}/>\n            <Container maxWidth=\"sm\" disableGutters>\n                <Box my={1} pb={10}>\n                    <Paper variant=\"outlined\">\n                        <List>\n                            {consumers && consumers.map((it) =>\n                                <ConsumerCard\n                                    consumer={it}\n                                    clickEdit={(c) => setEdit(c)}\n                                    clickActive={(c) => applyChangeActive(c)}\n                                    clickDelete={(c) => setDelete(c)}\n                                />\n                            )}\n                        </List>\n                    </Paper>\n                </Box>\n            </Container>\n            <Fab color=\"primary\" aria-label=\"add\" onClick={setCreate}><Add/></Fab>\n            <AlertSnackbar {...error}/>\n            <CreateConsumerDialog {...createProps} />\n            <EditConsumerDialog {...editProps} />\n            <DeleteConsumerDialog {...deleteProps} />\n        </Track>\n    );\n}\n\nexport default Consumers;\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@material-ui/core\";\n\nexport interface Row {\n    header: JSX.Element;\n    cellStates: boolean[];\n}\n\ninterface Props {\n    maxRows: number\n    maxColumns: number\n    onSelectionStart: (location: { row: number, column: number }) => {}\n    onInput: () => void\n    onChange: (value: boolean[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps, State> {\n    static defaultProps = {\n        maxRows: Infinity,\n        maxColumns: Infinity,\n        onSelectionStart: () => {\n        },\n        onInput: () => {\n        },\n        onChange: (value: boolean[][]) => {\n        },\n        rows: [] as Row[]\n    };\n\n    constructor(props: Readonly<React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps> | React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        return this.props.rows.map((row, i) =>\n            <TableRow><TableCell variant=\"head\">{row.header}</TableCell>\n                {row.cellStates.map((selected, j) =>\n                    <Cell\n                        disabled={false}\n                        beingSelected={this.isCellBeingSelected(i, j)}\n                        selected={selected}\n                        onTouchStart={this.handleTouchStartCell}\n                        onTouchMove={this.handleTouchMoveCell}\n                    />)}\n            </TableRow>\n        )\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const isLeftClick = e.button === 0;\n        const isTouch = e.type !== \"mousedown\";\n        if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n            e.preventDefault();\n            const {row, column} = eventToCellLocation(e);\n            this.props.onSelectionStart({row, column});\n            this.setState({\n                selectionStarted: true,\n                startRow: row,\n                startColumn: column,\n                endRow: row,\n                endColumn: column,\n                addMode: !this.props.rows[row].cellStates[column]\n            });\n        }\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        if (this.state.selectionStarted) {\n            e.preventDefault();\n            const {row, column} = eventToCellLocation(e);\n            const {startRow, startColumn, endRow, endColumn} = this.state;\n\n            if (endRow !== row || endColumn !== column) {\n                const nextRowCount = Math.abs(row - startRow) + 1;\n                const nextColumnCount = Math.abs(column - startColumn) + 1;\n\n                if (nextRowCount <= this.props.maxRows) {\n                    this.setState({endRow: row});\n                }\n                if (nextColumnCount <= this.props.maxColumns) {\n                    this.setState({endColumn: column});\n                }\n            }\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const isLeftClick = e.button === 0;\n        const isTouch = e.type !== \"mousedown\";\n        if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n            const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as boolean[][]\n            const minRow = Math.min(this.state.startRow, this.state.endRow);\n            const maxRow = Math.max(this.state.startRow, this.state.endRow);\n            for (let row = minRow; row <= maxRow; row++) {\n                const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n                const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = this.state.addMode;\n                }\n            }\n            this.setState({selectionStarted: false});\n            this.props.onChange(value);\n        }\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        if (!this.state.selectionStarted) return false;\n\n        const {startRow, endRow, startColumn, endColumn} = this.state;\n        const minRow = Math.min(startRow, endRow);\n        const maxRow = Math.max(startRow, endRow);\n        const minColumn = Math.min(startColumn, endColumn);\n        const maxColumn = Math.max(startColumn, endColumn);\n\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\ninterface CellProps {\n    disabled: boolean\n    beingSelected: boolean\n    selected: boolean\n    onTouchStart: any\n    onTouchMove: any\n}\n\nclass Cell extends React.Component<CellProps> {\n    td: any\n\n    shouldComponentUpdate(nextProps: Readonly<CellProps>, nextState: Readonly<{}>, nextContext: any): boolean {\n        return nextProps.selected !== this.props.selected || nextProps.beingSelected !== this.props.beingSelected\n    }\n\n    componentDidMount() {\n        // We need to call addEventListener ourselves so that we can pass\n        // {passive: false}\n        this.td.addEventListener(\"touchstart\", this.handleTouchStart, {passive: false});\n        this.td.addEventListener(\"touchmove\", this.handleTouchMove, {passive: false});\n    }\n\n    componentWillUnmount() {\n        this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n        this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n    }\n\n    render() {\n        const {disabled, beingSelected, selected, onTouchStart, onTouchMove, ...props} = this.props;\n        let className = \"\"\n        if (disabled) {\n            className += \" cell-disabled\";\n        } else {\n            className += \" cell-enabled\";\n            if (selected) {\n                className += \" cell-selected\";\n            }\n            if (beingSelected) {\n                className += \" cell-being-selected\";\n            }\n        }\n\n        return (\n            <TableCell\n                ref={td => (this.td = td)}\n                className={className}\n                onMouseDown={this.handleTouchStart}\n                onMouseMove={this.handleTouchMove}\n                {...props}\n            />\n        );\n    }\n\n    handleTouchStart = (e: any) => !this.props.disabled && this.props.onTouchStart(e);\n    handleTouchMove = (e: any) => !this.props.disabled && this.props.onTouchMove(e);\n}\n\nfunction eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") {\n            target = target.parentNode;\n        }\n    }\n    return {\n        row: target.parentNode.rowIndex - 2,\n        column: target.cellIndex - 1\n    };\n}\n\nexport default BehaviorDragSelect;","import React, {useEffect, useState} from \"react\";\nimport BehaviorDragSelect, {Row} from \"./behavior/BehaviorDragSelect\"\nimport {\n    Avatar,\n    Box,\n    Button,\n    Container,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n    WithStyles\n} from \"@material-ui/core\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {styles} from \"./behavior/BehaviorStyles\";\nimport {SaveAlt} from \"@material-ui/icons\";\nimport {iconLookup, translate} from \"./common/ConsumerTools\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date().toISOString().slice(0, 10)\n\ninterface Props extends WithStyles<typeof styles> {\n    backendService: BackendService\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface State {\n    rows: ExtendedRow[],\n    modified: boolean,\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [state, setState] = useState<State>({rows: [], modified: false});\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {backendService} = props;\n    const {t} = useTranslation();\n    const {classes} = props;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => ({\n                        header: (\n                            <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                <Avatar variant=\"rounded\" className={classes.avatar}>{iconLookup(c.type)}</Avatar>\n                            </Tooltip>\n                        ),\n                        consumerId: c.consumerId,\n                        cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => false)\n                    }));\n                setState({rows: cellStates, modified: false})\n            }, setError)\n            .catch(console.log)\n    }, [backendService, classes.avatar, setError]);\n\n    const handleChange = (cells: boolean[][]) => {\n        setState({\n            ...state,\n            rows: state.rows.map((row, i) => ({...row, cellStates: cells[i]})),\n            modified: true\n        })\n    };\n\n    const handleSave = () =>\n        backendService.putPrediction(\n            date,\n            state.rows.map((r) => ({\n                consumerId: r.consumerId,\n                data: r.cellStates\n            })))\n            .then(() => {\n                setSuccess(t('behavior_changes_saved'));\n            })\n            .then(() => setState({...state, modified: false}), setError)\n            .catch(console.log)\n\n    const {rows, modified} = state;\n    return (\n        <Track>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <DefaultAppBar hideBackButton title={t('card_behavior_title')}>\n                <Button\n                    color=\"inherit\"\n                    onClick={handleSave}\n                    startIcon={<SaveAlt/>}\n                >{t('save')}</Button>\n            </DefaultAppBar>\n            <Container maxWidth=\"xl\" disableGutters>\n                <Box p={1}>\n                    <TableContainer className={classes.container}>\n                        <Table stickyHeader size=\"small\" className={classes.tableDragSelect}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell variant=\"head\"/>\n                                    {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell/>\n                                    {energyAvailable.map((v) => <TableCell style={{backgroundColor: v}}/>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </Container>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default withStyles(styles)(Behavior);","import {createStyles, Theme} from \"@material-ui/core\";\n\nexport const styles = ({spacing, palette}: Theme) => createStyles({\n    container: {\n        overflow: 'auto',\n        maxHeight: 'calc(100vh - 140px)'\n    },\n    avatar: {\n        width: spacing(4),\n        height: spacing(4),\n    },\n    tableDragSelect: {\n        userSelect: \"none\",\n        borderCollapse: \"collapse\",\n        \"& thead th\": {\n            position: \"sticky\",\n            top: \"0px\",\n            zIndex: 1,\n        },\n        \"& thead>tr:nth-child(2) th\": {\n            top: \"37px\"\n        },\n        \"& td\": {\n            border: \"1px solid \" + palette.divider\n        },\n        \"& td.cell-selected\": {\n            backgroundColor: palette.secondary.main\n        },\n        \"& td.cell-being-selected\": {\n            backgroundColor: palette.primary.main\n        },\n        \"& td.cell-disabled\": {\n            backgroundColor: \"red\"\n        }\n    }\n});\n","import React from 'react';\nimport {\n    Box,\n    Card,\n    CardActionArea,\n    CardContent,\n    CardMedia,\n    Container,\n    createStyles,\n    Grid,\n    SvgIcon,\n    Theme,\n    Typography,\n    withStyles,\n    WithStyles\n} from \"@material-ui/core\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport {useHomeDestinations} from \"./common/Destinations\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst styles = ({palette}: Theme) => createStyles({\n    media: {\n        backgroundColor: palette.secondary.main,\n        display: \"flex\",\n        alignItems: \"center\",\n        padding: \"8px\"\n    },\n    icon: {\n        color: palette.background.paper\n    }\n});\n\ninterface Item {\n    title: string\n    subtitle: string\n    icon: any\n    to: string\n}\n\ninterface CardProps {\n    item: Item\n}\n\nconst HomeCard = withStyles(styles)(\n    function Component(props: CardProps & WithStyles<typeof styles>) {\n        const {classes, item} = props\n        const {t} = useTranslation()\n\n        return (\n            <Grid item xs={12} sm={6} xl={4} key={item.title}>\n                <Card>\n                    <CardActionArea component={RouterLink} to={item.to}>\n                        <Box display=\"flex\">\n                            <CardMedia className={classes.media}>\n                                <SvgIcon component={item.icon} className={classes.icon}/>\n                            </CardMedia>\n                            <CardContent>\n                                <Typography variant=\"h6\">{t(item.title)}</Typography>\n                                <Typography color=\"textSecondary\" noWrap>{t(item.subtitle)}</Typography>\n                            </CardContent>\n                        </Box>\n                    </CardActionArea>\n                </Card>\n            </Grid>\n        )\n    }\n)\n\nfunction Home() {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const homeDestinations = useHomeDestinations();\n    const {t} = useTranslation();\n    return (\n        <Track>\n            <DefaultAppBar hideBackButton title={t('home_title')}/>\n            <Container maxWidth=\"lg\" disableGutters>\n                <Box padding={1}>\n                    <Grid container>\n                        {homeDestinations.map((item: Item, index: number) => <HomeCard item={item} key={index}/>)}\n                    </Grid>\n                </Box>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","import React from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    IconButton,\n    Paper,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    useTheme\n} from \"@material-ui/core\";\nimport {Scatter} from \"react-chartjs-2\";\nimport {Delete, Edit} from \"@material-ui/icons\";\n\nexport interface TimeItem {\n    time: string;\n    temperature: number;\n}\n\ninterface Props {\n    title: string;\n    items: TimeItem[];\n}\n\nconst options = {\n    locale: \"de\",\n    plugins: {\n        legend: {\n            display: false\n        },\n        tooltip: {\n            enabled: false\n        }\n    },\n    scales: {\n        x: {\n            min: 0,\n            max: 24,\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + '⁰⁰'\n            }\n        },\n        y: {\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + ' °C'\n            }\n        }\n    }\n}\n\nexport function ThermostatDaySetting(props: Props) {\n    const {title, items} = props;\n    const dataItems = [...items, {time: '24:00', temperature: items[items.length - 1].temperature}]\n    const {palette} = useTheme();\n    const data = {\n        datasets: [\n            {\n                data: dataItems.map((i) => ({\n                    x: (+i.time.substring(0, i.time.indexOf(':'))),\n                    y: i.temperature\n                })),\n                showLine: true,\n                fill: true,\n                stepped: true,\n                borderColor: palette.primary.main,\n                backgroundColor: palette.secondary.main,\n            }\n        ],\n\n    }\n\n    return (\n        <Card variant=\"outlined\">\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">{title}</Typography>\n                <Paper square>\n                    <Box p={1}>\n                        <Scatter data={data} options={options} height={50}/>\n                    </Box>\n                    <Table size=\"small\">\n                        <TableHead>\n                            <TableRow>\n                                <TableCell>Zeitraum</TableCell>\n                                <TableCell colSpan={2}>Temperatur</TableCell>\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            {items.map((item, index) => (\n                                <TableRow key={item.time} hover={true}>\n                                    <TableCell>{item.time}</TableCell>\n                                    <TableCell>{item.temperature} °C</TableCell>\n                                    <TableCell align=\"right\">\n                                        <IconButton size=\"small\"><Edit/></IconButton>\n                                        <IconButton disabled={index < 1} size=\"small\"><Delete/></IconButton>\n                                    </TableCell>\n                                </TableRow>\n                            ))}\n                        </TableBody>\n                    </Table>\n                </Paper>\n\n                <CardActions>\n                    <Button style={{flexShrink: 0}} color=\"primary\">Zeitraum hinzufügen</Button>\n                    <Box mx=\"auto\"/>\n                    <Button color=\"primary\">Kopieren von ...</Button>\n                </CardActions>\n            </CardContent>\n        </Card>\n    )\n}\n","import React, {useState} from 'react';\nimport {Box, Button, Container, Grid, GridSize, Tab, Tabs, Toolbar} from \"@material-ui/core\";\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport {ThermostatDaySetting, TimeItem} from \"./thermostats/ThermostatDaySetting\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface Props {\n\n}\n\ninterface State {\n    viewType: number;\n}\n\nfunction a11yProps(index: any) {\n    return {\n        id: `simple-tab-${index}`,\n        'aria-controls': `simple-tabpanel-${index}`,\n    };\n}\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface TabModel {\n    days: string[]\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [state, setState] = useState({viewType: 0} as State);\n    const items: TimeItem[] = [\n        {\n            time: '0:00',\n            temperature: 18\n        },\n        {\n            time: '12:00',\n            temperature: 21\n        },\n        {\n            time: '15:00',\n            temperature: 25\n        },\n        {\n            time: '18:00',\n            temperature: 21\n        },\n    ]\n\n    const viewType = state.viewType | 0;\n    const handleChange = (event: React.ChangeEvent<{}>, newValue: number) => {\n        setState({viewType: newValue})\n    };\n\n    const simpleDays = [\"Werktage\", \"Wochenende\"]\n    const days = [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"]\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 3}\n    ]\n\n    return (\n        <Track>\n            <DefaultAppBar title='Thermostats'>\n                <Button color=\"inherit\">Ausprobieren</Button>\n                <Button color=\"inherit\">Speichern</Button>\n            </DefaultAppBar>\n            <Toolbar>\n                <Box mx=\"auto\"/>\n                <Tabs value={viewType} variant=\"fullWidth\" onChange={handleChange}>\n                    <Tab label=\"Einfach\" {...a11yProps(0)}/>\n                    <Tab label=\"Erweitert\" {...a11yProps(1)}/>\n                </Tabs>\n                <Box mx=\"auto\"/>\n            </Toolbar>\n            <Container disableGutters maxWidth=\"xl\">\n                <Box p={1}>\n                    {tabs.map((tab, index) => (\n                        <TabPanel index={index} value={viewType} key={index}>\n                            <Grid container spacing={1}>\n                                {tab.days.map((day) => (\n                                    <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day}>\n                                        <ThermostatDaySetting title={day} items={items}/>\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </TabPanel>\n                    ))}\n                </Box>\n            </Container>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import React from 'react';\nimport {makeStyles} from '@material-ui/core/styles';\nimport BottomNavigation from '@material-ui/core/BottomNavigation';\nimport BottomNavigationAction from '@material-ui/core/BottomNavigationAction';\nimport {useHistory} from \"react-router-dom\";\nimport {useTranslation} from \"react-i18next\";\nimport {Paper, SvgIcon, useMediaQuery, useTheme} from \"@material-ui/core\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nconst useStyles = makeStyles({\n    root: {\n        width: '100%',\n        position: 'fixed',\n        bottom: 0,\n        overflow: 'hidden',\n        zIndex: 100\n    },\n    spacer: {\n        marginTop: '60px'\n    },\n});\n\nfunction DefaultBottomNavigation() {\n    const classes = useStyles();\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('xs'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        <React.Fragment>\n            <div className={classes.spacer}/>\n            <Paper className={classes.root} elevation={1}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </React.Fragment>\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import React, {useEffect, useState} from 'react';\nimport DefaultAppBar from \"./common/DefaultAppBar\";\nimport {Box, Button, Card, CardContent, Container, Typography, useTheme} from \"@material-ui/core\";\nimport {useTranslation} from \"react-i18next\";\nimport {SaveAlt} from \"@material-ui/icons\";\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport 'chartjs-plugin-dragdata';\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport BackendService from \"./service/BackendService\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n    displayGrid?: boolean\n}\n\nfunction DraggableGraph(props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                hoverRadius: 0,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    alignToPixels: true,\n                    max: 10,\n                    min: 0,\n                    ticks: {\n                        display: false,\n                    },\n                    grid: {\n                        display: props.displayGrid ?? false,\n                    },\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    alignToPixels: true,\n                    max: 10,\n                    min: 0,\n                    ticks: {\n                        display: false,\n                    },\n                    grid: {\n                        display: props.displayGrid ?? false,\n                    },\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            animation: false,\n            plugins: {\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: (e: any, element: any) => null,\n                    onDrag: (e: any, datasetIndex: any, index: number, value: number) => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        }} height={100} width={100}/>\n}\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'MoodPage'});\n    const {t} = useTranslation()\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<{ x: number, y: number }>();\n\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, (e) => {\n                setError(e);\n                setMood({x: 5, y: 5});\n            })\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = () => {\n        backendService.putMood(date, mood!)\n            .then(() => setSuccess(t('behavior_changes_saved')), setError)\n            .catch(console.log);\n    }\n\n    return <Track>\n        <DefaultAppBar title={t('card_mood_title')}>\n            <Button\n                color=\"inherit\"\n                onClick={onSaveClick}\n                startIcon={<SaveAlt/>}\n            >{t('save')}</Button>\n        </DefaultAppBar>\n        <Container maxWidth=\"sm\">\n            <Box py={3}>\n                <Typography variant=\"h5\" align=\"center\">{t('mood_please_select_mood')}</Typography>\n                <Card>\n                    {mood &&\n                    <CardContent>\n                        <DraggableGraph mood={mood} onChange={setMood}/>\n                    </CardContent>\n                    }\n                </Card>\n            </Box>\n\n        </Container>\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Link, Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Verify from \"./Verify\";\nimport Logout from \"./Logout\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Power from \"./Power\";\nimport Archive from \"./Archive\";\nimport Consumers from \"./Consumers\";\nimport Behavior from \"./Behavior\";\nimport React, {useContext} from \"react\";\nimport Home from \"./Home\";\nimport Thermostats from \"./Thermostats\";\nimport BackendService from \"./service/BackendService\";\nimport {Box, Button, Typography} from \"@material-ui/core\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport Mood from \"./Mood\";\nimport {UserContext} from \"./App\";\nimport {UserModel} from \"./service/Model\";\n\nconst ReactRouter = (props: { backendService: BackendService, isLoggedIn: boolean }) => {\n    const {backendService, isLoggedIn} = props;\n    const user = useContext(UserContext);\n\n    const Page404 = (props: { path: string }) => (\n        <Box m={16} textAlign='center'>\n            <Typography variant=\"h1\">404</Typography>\n            <Typography variant=\"h5\">Page not found</Typography>\n            <Box m={2}>\n                <Button color=\"primary\" variant=\"contained\" component={Link} to={props.path}>Go home</Button>\n            </Box>\n        </Box>\n    );\n\n    const PublicPaths = () => (\n        <Switch>\n            <Route path=\"/verify\"><Verify backendService={backendService}/></Route>\n            <Route path=\"/login\"><Login backendService={backendService}/></Route>\n            <Route><Page404 path=\"/login\"/></Route>\n        </Switch>\n    );\n\n    const PrivatePaths = (props: { user: UserModel }) => {\n        const paths = {\n            logout: <Route path=\"/logout\"><Logout backendService={backendService}/></Route>,\n            upload: <Route path=\"/upload\"><Upload backendService={backendService}/></Route>,\n            user: <Route path=\"/user\"><User backendService={backendService}/></Route>,\n            power: <Route path=\"/power\"><Power backendService={backendService}/></Route>,\n            archive: <Route path=\"/archive\"><Archive backendService={backendService}/></Route>,\n            consumers: <Route path=\"/consumers\"><Consumers backendService={backendService}/></Route>,\n            behavior: <Route path=\"/behavior\"><Behavior backendService={backendService}/></Route>,\n            mood: <Route path=\"/mood\"><Mood backendService={backendService}/></Route>,\n            thermostats: <Route path=\"/thermostats\"><Thermostats/></Route>\n        }\n\n        const managementPaths = () => ([paths.upload]);\n        const homeOwnerPaths = () => ([\n            paths.upload,\n            paths.power,\n            paths.consumers,\n            paths.behavior,\n            paths.thermostats,\n            paths.mood\n        ]);\n\n        const studentPaths = () => ([\n            paths.archive,\n            paths.consumers,\n            paths.behavior,\n            paths.mood\n        ]);\n\n        const {user} = props;\n        return (<Switch>\n            {user.type === \"management\" && managementPaths()}\n            {user.type === \"student\" && studentPaths()}\n            {user.type === \"homeowner\" && homeOwnerPaths()}\n            <Route path=\"/logout\"><Logout backendService={backendService}/></Route>,\n            <Route path=\"/user\"><User backendService={backendService}/></Route>,\n            <Route exact path=\"/\"><Home/></Route>\n            <Route exact path={`${process.env.PUBLIC_URL}`}><Home/></Route>\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>);\n    }\n\n\n    return <>\n        {!isLoggedIn && <Redirect to=\"/login\"/>}\n        {!isLoggedIn && <PublicPaths/>}\n        {user && <PrivatePaths user={user}/>}\n        {isLoggedIn && <DefaultBottomNavigation/>}\n    </>\n}\n\nexport default ReactRouter;\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Sonstiges\", 'en': \"Miscellaneous\"}, type: 'misc'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Gäste\", 'en': \"Guests\"}, type: 'guests'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => Math.random() < 0.5)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`DELETE Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1)\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString())\n                if (index < 0) return e.error()\n                db.consumer[user].splice(index, 1)\n\n                saveFakeDB(db)\n                return e.ok({})\n            }\n            return e.error()\n        })\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n\n        })\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('Tracking data:', data);\n                return e.ok({});\n            }\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`PUT Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import React, {useEffect, useMemo, useState} from \"react\";\nimport {createTheme, CssBaseline, LinearProgress, ThemeOptions, ThemeProvider,} from \"@material-ui/core\";\nimport ReactRouter from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport Config from \"./Config\";\nimport {lightGreen} from \"@material-ui/core/colors\";\nimport {useTracking} from \"react-tracking\";\nimport {UserModel} from \"./service/Model\";\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\n\nfunction App() {\n    //Disabled, not supported for now\n    //const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            type: 'light',\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        props: {\n            MuiGrid: {\n                spacing: 1\n            },\n            MuiCard: {\n                variant: \"outlined\"\n            },\n        },\n        overrides: {\n            MuiFab: {\n                root: {\n                    position: 'fixed',\n                    bottom: '10px',\n                    right: '10px',\n                    // When bottom bar is shown, raise FAB position\n                    '@media (max-width:599.95px)': {\n                        bottom: '70px'\n                    }\n                }\n            },\n            MuiSnackbar: {\n                anchorOriginBottomCenter: {\n                    // When bottom bar is shown, raise Snackbar position\n                    '@media (max-width:599.95px)': {\n                        bottom: '70px'\n                    }\n                }\n            }\n        },\n    }), []);\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const {Track} = useTracking({}, {\n        dispatch(data: any) {\n            backendService.postTracking(data)\n                .catch(console.log);\n        }\n    });\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser)\n                .catch(console.error);\n        }\n    }, [isLoggedIn])\n\n    return (\n        <ThemeProvider theme={theme}>\n            <CssBaseline/>\n            <React.Suspense fallback={<LinearProgress/>}>\n                {isLoggedIn !== undefined &&\n                <UserContext.Provider value={user}>\n                    <Track>\n                        <ReactRouter backendService={backendService} isLoggedIn={isLoggedIn}/>\n                    </Track>\n                </UserContext.Provider>\n                }\n            </React.Suspense>\n        </ThemeProvider>\n    );\n}\n\nexport default App;\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    .use(resourcesToBackend((language, namespace, callback) => {\n        import(`./locales/${language}/${namespace}.json`)\n            .then((resources) => {\n                callback(null, resources)\n            })\n            .catch((error) => {\n                callback(error, null)\n            })\n    }))\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {BrowserRouter as Router} from 'react-router-dom';\n\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={`${process.env.PUBLIC_URL}#`}>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}