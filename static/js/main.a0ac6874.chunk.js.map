{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","common/AlertSnackbar.tsx","common/UseSnackBar.tsx","Login.tsx","Verify.tsx","common/Tracking.ts","Logout.tsx","common/ResponsiveDialog.tsx","common/InfoDialog.tsx","common/ResponsiveIconButton.tsx","Upload.tsx","User.tsx","power/PowerEntry.tsx","Power.tsx","archive/ArchiveEntry.tsx","Archive.tsx","common/ConsumerTools.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","behavior/BehaviorDragSelect.tsx","Behavior.tsx","Home.tsx","thermostats/ChartOptions.ts","common/Time.ts","thermostats/ThermostatDaySetting.tsx","thermostats/ModifyTimeItemDialog.tsx","thermostats/DummyData.ts","Thermostats.tsx","Mood.tsx","Page404.tsx","Routes.tsx","service/BackendService.ts","App.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","PersonOutline","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","open","variant","role","AppBarSpace","Divider","List","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","props","flexGrow","Suspense","fallback","LinearProgress","paddingTop","children","Root","display","Toolbar","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","ml","hideBackButton","IconButton","color","marginRight","onClick","goBack","size","ArrowBack","Typography","mx","multiLine","DefaultBottomNavigation","React","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","Math","random","predictions","token","setItem","parse","saveFakeDB","DefaultExecutor","reject","data","console","log","this","status","statusText","headers","config","request","response","FaultyExecutor","executor","ok","error","findInDict","dict","matcher","key","FakeBackend","backendConfig","url","Authorization","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","startsWith","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","AlertSnackbar","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","onClose","Alert","message","useSnackBar","state","setState","prevState","useCallback","StyledGrid","styled","Grid","margin","padding","flexDirection","alignItems","withRouter","withTranslation","setError","backendService","height","Container","maxWidth","container","spacing","item","xs","md","paragraph","Avatar","backgroundColor","onSubmit","preventDefault","requestPin","catch","TextField","autoFocus","target","required","fullWidth","autoComplete","Button","Form","StyledContainer","useEffect","login","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Logout","page","logout","ResponsiveDialog","fullScreen","Dialog","edge","style","DialogTitle","useInfoDialog","Lorem","DialogContentText","InfoDialog","DialogContent","content","DialogActions","ResponsiveIconButton","breakpoint","Tooltip","description","startIcon","Input","operators","link","success","setSuccess","setAppBar","infoProps","openInfo","showBackButton","InfoOutlined","my","gutterBottom","op","Link","href","htmlFor","accept","file","files","postConsumption","UserInfo","items","Email","text","MyLocation","idx","ConsumersInfo","Power","ArrowRight","LanguageInfo","Language","select","language","changeLanguage","MenuItem","i18next","languages","setLanguage","setUser","colorMode","ColorModeContext","colorModeValue","mode","getUser","ExitToApp","square","Brightness4Outlined","ToggleButtonGroup","exclusive","toggleColorMode","ToggleButton","animation","PowerEntry","getProcessedConsumption","consumptions","labels","from","datasets","fill","borderColor","Component","setDates","getProcessedConsumptions","Card","CardContent","ArchiveEntry","setPredictions","getPrediction","prediction","CardActionArea","Archive","getPredictions","translate","str","override","de","en","icons","laundry","LocalLaundryService","cooking","Restaurant","dishes","FreeBreakfast","hygiene","Bathtub","entertainment","Movie","wellness","Spa","homeoffice","Computer","misc","Help","temperature","guests","Group","emobility","colors","pink","purple","orange","teal","green","red","blue","s","h","l","length","charCodeAt","hashCode","iconLookup","compareProps","a","b","compareConsumers","ConsumerCard","memo","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","ListItemAvatar","ListItemSecondaryAction","Visibility","VisibilityOff","Delete","Consumers","consumers","setConsumers","getConsumers","applyChangeActive","putConsumer","pb","BehaviorDragSelect","handleTouchStartCell","isLeftClick","isTouch","selectionStarted","eventToCellLocation","row","column","onSelectionStart","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","nextRowCount","abs","nextColumnCount","maxRows","maxColumns","handleTouchEndWindow","r","minRow","min","maxRow","max","minColumn","maxColumn","isCellBeingSelected","window","addEventListener","removeEventListener","TableRow","TableCell","header","selected","j","disabled","beingSelected","onTouchStart","onTouchMove","defaultProps","Infinity","onInput","Cell","td","handleTouchStart","handleTouchMove","nextProps","nextState","nextContext","passive","className","ref","onMouseDown","onMouseMove","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","rowIndex","cellIndex","hours","formatTime","energyAvailable","userSelect","borderCollapse","top","border","Behavior","modified","all","filter","enterTouchDelay","find","p","handleSave","putPrediction","SaveAlt","disableGutters","TableContainer","maxHeight","Table","stickyHeader","TableHead","align","String","TableBody","cells","when","HomeCard","lg","CardMedia","noWrap","Home","homeDestinations","useHomeDestinations","justifyContent","chartOptions","plugins","legend","tooltip","enabled","scales","ticks","stepSize","callback","now","createTime","minutes","getDay","getMonth","printTime","time","toLocaleTimeString","hour","minute","getTime","ThermostatDaySetting","dataItems","labeledTimeItems","_i","labelTimeItems","palette","getHours","getMinutes","showLine","stepped","main","secondary","createData","colSpan","hover","onEdit","Edit","onDelete","CardActions","onAddTime","onCopyFrom","ModifyTimeItemDialog","showTimePicker","StaticTimePicker","ampm","setTime","renderInput","setTemperature","InputProps","endAdornment","InputAdornment","onOK","data_","TabPanel","other","hidden","copyData","day","sortDay","sort","Thermostats","activeTab","setActiveTab","setData","initialData","setInitialData","Success","getThermostats","empty","days","simpleDays","tabs","xl","reset","save","putThermostats","RotateLeft","CompareArrowsOutlined","addTimeOpen","setAddTimeOpen","editTimeOpen","setEditTimeOpen","copyFromOpen","setCopyFromOpen","setShowTimePicker","setID","refIndex","setIndex","addEntry","editEntry","Tabs","tab","Tab","DraggableGraph","defaults","divider","borderWidth","hoverRadius","pointHitRadius","maintainAspectRatio","aspectRation","alignToPixels","grid","displayGrid","onHover","chart","getElementsAtEventForMode","intersect","native","cursor","dragData","dragX","showTooltip","onDragStart","element","onDrag","datasetIndex","onDragEnd","setMood","getMood","onSaveClick","putMood","py","Page404","m","textAlign","path","PublicRouter","PrivateRouter","paths","root","exact","commonPaths","managementPaths","homeOwnerPaths","studentPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","get","addAuth","finally","post","put","delete","formData","FormData","append","Config","createContext","App","prefersDarkMode","setMode","useMemo","createTheme","lightGreen","contrastText","components","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","right","MuiSnackbar","anchorOriginBottomCenter","isLoggedIn","setIsLoggedIn","dispatch","postTracking","subscribe","appBar","setAppBarCb","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Provider","LocalizationProvider","dateAdapter","AdapterDateFns","i18n","use","resourcesToBackend","namespace","resources","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","basename","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.a0ac6874.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t404,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t405,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 395;\nmodule.exports = webpackAsyncContext;","import {\n    AcUnit,\n    CloudUploadOutlined,\n    EditOutlined,\n    History,\n    HomeOutlined,\n    Mood,\n    PersonOutline,\n    ShowChart,\n    SvgIconComponent\n} from \"@mui/icons-material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: SvgIconComponent,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: PersonOutline, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.thermostats, destinations.user];\n        default:\n            return [];\n    }\n}\n\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.thermostats, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useHomeDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.upload, destinations.user]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.power, destinations.upload, destinations.mood]\n        default:\n            return []\n    }\n}\n\n","import {ArrowBack} from \"@mui/icons-material\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n    multiLine?: React.ReactNode;\n}\n\nexport function DefaultDrawer() {\n\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <AppBarSpace/>\n                        <Divider/>\n                        <List>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n\n    return <Box sx={{flexGrow: 1}}>\n        <AppBarSpace/>\n        <React.Suspense fallback={<LinearProgress/>}>\n            <Box paddingTop={1}>\n                {props.children}\n            </Box>\n        </React.Suspense>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nexport function AppBarSpace() {\n    return <Toolbar/>\n}\n\nfunction DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={{ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}}}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\">\n                        <ArrowBack/>\n                    </IconButton>\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n                {props.multiLine}\n            </AppBar>\n        </Slide>\n    );\n}\n\nexport default DefaultAppBar;","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'misc'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'misc'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'misc'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => Math.random() < 0.5)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1)\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString())\n                if (index < 0) return e.error()\n                db.consumer[user].splice(index, 1)\n\n                saveFakeDB(db)\n                return e.ok({})\n            }\n            return e.error()\n        })\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n\n        })\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import {AlertColor, Snackbar} from \"@mui/material\";\nimport {Alert} from '@mui/material';\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import {Avatar, Box, Button, Container, Grid, TextField, Typography} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t, backendService, history} = props;\n\n    const handleSubmit = (e: React.FormEvent) => {\n        e.preventDefault();\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                <Container maxWidth=\"lg\">\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    id=\"shared_password\"\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    autoComplete=\"email\"\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <Button\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                >\n                                    {t('login_submit')}\n                                </Button>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Container>\n            </Box>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Login)));\n","import {Avatar, Button, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect, useState} from 'react';\nimport {withTranslation, WithTranslation} from \"react-i18next\";\nimport {withRouter} from \"react-router\";\nimport {RouteComponentProps} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props extends RouteComponentProps, WithTranslation {\n    backendService: BackendService\n}\n\ninterface State {\n    email?: string\n    password: string\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction Verify(props: Props) {\n    const [state, setState] = useState<State>({password: ''})\n    const [error, setError] = useSnackBar()\n    const {location, history, backendService, t} = props;\n\n    useEffect(() => {\n        // @ts-ignore\n        if (!location?.state?.email) {\n            history.push('/')\n        }\n    }, [location, history])\n\n    const handleSubmit = (e: React.FormEvent) => {\n        const {password} = state;\n        // @ts-ignore\n        const {email} = location.state;\n\n        e.preventDefault();\n        backendService.login(email, password)\n            .then(() => history.push('/'))\n            .catch(setError)\n    }\n\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{\n                        margin: '1px',\n                        backgroundColor: 'secondary.main',\n                    }}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={state.password}\n                            onChange={(e) => setState({...state, password: e.target.value})}\n                            required\n                            fullWidth/>\n                        <Button\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</Button>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default withRouter((withTranslation()(Verify)));\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/login\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import React from \"react\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport {ArrowBack} from \"@mui/icons-material\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        style={{marginRight: theme.spacing(2)}}\n                        size=\"large\"><ArrowBack/></IconButton>\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle>{props.title}</DialogTitle>\n            {props.children}\n        </Dialog>\n    );\n}\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\nexport function ResponsiveIconButton(props: { description: string, icon: JSX.Element, onClick?: () => void }) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    return <>\n            {breakpoint &&\n            <Tooltip title={props.description}>\n                <IconButton color=\"inherit\" onClick={props.onClick} size=\"large\">{props.icon}</IconButton>\n            </Tooltip>\n            }\n            {!breakpoint &&\n            <Button startIcon={props.icon} color=\"inherit\" onClick={props.onClick}>{props.description}</Button>\n            }\n        </>;\n}\n","import {CloudUploadOutlined, InfoOutlined} from \"@mui/icons-material\";\nimport {Box, Button, Container, Grid, Link, List, ListItem, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect} from 'react';\nimport {useTranslation, WithTranslation, withTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\ninterface Operator {\n    name: string;\n    link: string;\n}\n\nconst operators: Operator[] = [\n    {name: 'Netz Oberösterreich', link: 'https://netz-online.netzgmbh.at/eServiceWeb/main.html'},\n    {name: 'Netz Burgenland', link: 'https://smartmeter.netzburgenland.at'},\n    {name: 'Kärnten Netz', link: 'https://meinportal.kaerntennetz.at/meinPortal/Login.aspx?service=verbrauch'},\n]\n\ninterface Props extends PrivateRouteProps, WithTranslation {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <>\n            <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n        </>\n    }), [t, setAppBar, openInfo])\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\">\n                <Box my={1}>\n                    <Grid container spacing={3}>\n                        <Grid item xs={12} sm={6}>\n                            <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                            <Typography color=\"textSecondary\" paragraph>\n                                {t('upload_instruction_download')}\n                            </Typography>\n                            <List>\n                                {operators.map((op) => {\n                                    return (\n                                        <ListItem key={op.name}>\n                                            <Typography><Link href={op.link}>{op.name}</Link></Typography>\n                                        </ListItem>\n                                    )\n                                })}\n                            </List>\n                        </Grid>\n                        <Grid item xs={12} sm={6}>\n                            <Typography\n                                variant=\"h5\"\n                                gutterBottom\n                            >{t('upload_title_upload')}</Typography>\n                            <Typography\n                                color=\"textSecondary\"\n                                paragraph\n                            >{t('upload_instruction_upload')}</Typography>\n                            <label htmlFor=\"contained-button-file\">\n                                <Input\n                                    accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                    id=\"contained-button-file\"\n                                    type=\"file\"\n                                    onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                                />\n                                <Button variant=\"contained\"\n                                        size=\"large\"\n                                        color=\"primary\"\n                                        fullWidth\n                                        component=\"span\"\n                                        startIcon={<CloudUploadOutlined/>}\n                                >{t('action_upload')}</Button>\n                            </label>\n                        </Grid>\n                    </Grid>\n                </Box>\n            </Container>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default (withTranslation()(Upload));\n","import {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\nimport {\n    Container,\n    Divider,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    MenuItem,\n    Paper,\n    TextField,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation, withTranslation, WithTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { language: string, changeLanguage: (language: string) => void }) {\n    const {t} = useTranslation();\n    return <ListItem key=\"element_language\">\n        <ListItemIcon><Language/></ListItemIcon>\n        <TextField\n            label={t(\"language\")}\n            select\n            variant=\"outlined\"\n            fullWidth\n            value={props.language}\n            onChange={(e) => props.changeLanguage(e.target.value)}\n        >\n            <MenuItem value={\"de\"}>{t('lang_german')}</MenuItem>\n            <MenuItem value={\"en\"}>{t('lang_english')}</MenuItem>\n        </TextField>\n    </ListItem>\n}\n\ninterface Props extends WithTranslation {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [language, setLanguage] = useState<string>(i18next.languages[0]);\n    const [user, setUser] = useState<UserModel>()\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n\n    const {backendService, t, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const changeLanguage = (language: string) =>\n        i18next.changeLanguage(language)\n            .then(() => setLanguage(language), setError)\n            .catch(console.log)\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    const setColorMode = (event: React.MouseEvent<HTMLElement>, value: string | null) => {\n        if (value !== null) {\n            colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n        }\n    }\n\n    return (\n        <Track>\n            {user &&\n            <Container maxWidth=\"sm\">\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo user={user}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo language={language} changeLanguage={changeLanguage}/>\n                        <ListItem>\n                            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n                            <ToggleButtonGroup\n                                fullWidth\n                                color=\"primary\"\n                                value={colorModeValue}\n                                exclusive\n                                onChange={setColorMode}\n                            >\n                                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                                <ToggleButton value=\"light\">Light</ToggleButton>\n                                <ToggleButton value=\"dark\">Dark</ToggleButton>\n                            </ToggleButtonGroup>\n                        </ListItem>\n\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            }\n            {!user && <LinearProgress/>}\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default withTranslation()(User);\n","import {ChartOptions} from \"chart.js\";\nimport React from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\n\ninterface EntryProps {\n    backendService: BackendService;\n    date: string;\n}\n\ninterface EntryState {\n    data: any;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport class PowerEntry extends React.Component<EntryProps, EntryState> {\n    constructor(props: Readonly<EntryProps>) {\n        super(props);\n        this.state = {\n            data: {}\n        }\n    }\n\n    componentDidMount() {\n        const {backendService, date} = this.props;\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                this.setState({\n                    data: {\n                        labels: Array.from(Array(24).keys()),\n                        datasets: consumptions.map((c) => ({\n                                label: c.type,\n                                data: c.data,\n                                fill: false,\n                                backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                                borderColor: 'rgba(255, 99, 132, 0.2)',\n                            })\n                        )\n                    }\n                })\n            })\n            .catch(console.log)\n    }\n\n    render() {\n        const {data} = this.state;\n        console.log(data)\n        return (\n            <Line data={data} options={options}/>\n        )\n    }\n}","import {Card, CardContent, Container, Typography} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\">\n                {dates.map((date) =>\n                    <Card variant=\"outlined\" key={date} sx={{marginTop: 2}}>\n                        <CardContent>\n                            <Typography variant=\"h6\">{date}</Typography>\n                            <PowerEntry date={date} backendService={backendService}/>\n                        </CardContent>\n                    </Card>\n                )}\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","import React, {useEffect, useState} from \"react\";\nimport BackendService from \"../service/BackendService\";\nimport {UserPredictionModel} from \"../service/Model\";\nimport {Card, CardActionArea, CardContent, Typography} from \"@mui/material\";\n\nfunction ArchiveEntry(props: { date: string, backendService: BackendService }) {\n    const {date, backendService} = props;\n    const [predictions, setPredictions] = useState(new Array<UserPredictionModel>());\n    useEffect(() => {\n        backendService.getPrediction(date)\n            .then((prediction) => setPredictions(prediction))\n            .catch(console.log);\n    }, [backendService, date]);\n\n    return (\n        <Card variant=\"outlined\">\n            <CardActionArea>\n                <CardContent>\n                    <Typography variant=\"h6\">{date}</Typography>\n                    {predictions.map((prediction) =>\n                        (\n                            <Typography variant=\"body1\" key={prediction.consumerId}>\n                                {prediction.data.map((v) => v ? '█' : '░')}\n                            </Typography>\n                        ))}\n                </CardContent>\n            </CardActionArea>\n        </Card>\n    )\n}\n\nexport default ArchiveEntry;\n","import React, {useEffect, useState} from 'react';\nimport {Container} from \"@mui/material\";\nimport ArchiveEntry from \"./archive/ArchiveEntry\";\nimport {useTranslation} from \"react-i18next\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PrivateRouteProps} from \"./App\";\n\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Archive(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [dates, setDates] = useState(new Array<string>());\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({title: t('card_archive_title'), showBackButton: true, children: () => <></>})\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\">\n                {dates.map((value) =>\n                    <ArchiveEntry date={value} key={value} backendService={props.backendService}/>)}\n            </Container>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import {\n    AcUnit,\n    Bathtub,\n    Computer,\n    FreeBreakfast,\n    Group,\n    Help,\n    LocalLaundryService,\n    Movie,\n    Power,\n    Restaurant,\n    Spa\n} from \"@mui/icons-material\";\nimport {TranslatedString} from \"../service/Model\";\nimport i18next from \"i18next\";\nimport {blue, green, orange, pink, purple, red, teal} from \"@mui/material/colors\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst icons: any = {\n    laundry: <LocalLaundryService/>,\n    cooking: <Restaurant/>,\n    dishes: <FreeBreakfast/>,\n    hygiene: <Bathtub/>,\n    entertainment: <Movie/>,\n    wellness: <Spa/>,\n    homeoffice: <Computer/>,\n    misc: <Help/>,\n    temperature: <AcUnit/>,\n    guests: <Group/>,\n    emobility: <Power/>\n}\n\nfunction hashCode(s: string) {\n    let h = 0, l = s.length, i = 0;\n    if (l > 0) while (i < l) h = (h << 5) - h + s.charCodeAt(i++) | 0;\n    return h;\n}\n\nconst colors = [\n    pink[500],\n    purple[500],\n    orange[500],\n    teal[500],\n    green[500],\n    red[500],\n    blue[500],\n]\n\nexport function backgroundColor(id: string) {\n    return colors[hashCode(id) % colors.length | 0]\n}\n\nexport function iconLookup(name?: string): JSX.Element {\n    return name && name in icons ? icons[name] : <Help/>\n}\n","import {ConsumerModel} from \"../service/Model\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {backgroundColor, iconLookup, translate} from \"../common/ConsumerTools\";\nimport {Delete, Visibility, VisibilityOff} from \"@mui/icons-material\";\nimport {useTranslation} from \"react-i18next\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation()\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\")\n    const consumerName = translate(consumer.name, consumer.customName)\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar style={{backgroundColor: backgroundColor(consumer.consumerId)}}>\n                    {iconLookup(consumer.type)}\n                </Avatar>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Box, Container, DialogContentText, List, Paper} from \"@mui/material\";\nimport {ConsumerModel} from \"./service/Model\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {useTranslation} from \"react-i18next\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {InfoOutlined} from \"@mui/icons-material\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {PrivateRouteProps} from \"./App\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>([]);\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) =>\n            backendService.putConsumer({...consumer, active: !consumer.active})\n                .then(() => backendService.getConsumers())\n                .then(setConsumers, setError)\n                .catch(console.log),\n        [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const content = () => <DialogContentText>\n        {t('consumer_help').split('\\n').map((s) => <p>{s}</p>)}\n    </DialogContentText>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\">\n                <Box pb={10}>\n                    <Paper variant=\"outlined\">\n                        <List>\n                            {consumers && consumers.map((it) =>\n                                <ConsumerCard\n                                    key={it.consumerId}\n                                    consumer={it}\n                                    clickActive={applyChangeActive}\n                                />\n                            )}\n                        </List>\n                    </Paper>\n                </Box>\n            </Container>\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={content()} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\n\nexport interface Row {\n    header: JSX.Element;\n    cellStates: boolean[];\n}\n\ninterface Props {\n    maxRows: number\n    maxColumns: number\n    onSelectionStart: (location: { row: number, column: number }) => {}\n    onInput: () => void\n    onChange: (value: boolean[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps, State> {\n    static defaultProps = {\n        maxRows: Infinity,\n        maxColumns: Infinity,\n        onSelectionStart: () => {\n        },\n        onInput: () => {\n        },\n        onChange: (value: boolean[][]) => {\n        },\n        rows: [] as Row[]\n    };\n\n    constructor(props: Readonly<React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps> | React.PropsWithChildren<Props> & typeof BehaviorDragSelect.defaultProps) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        return this.props.rows.map((row, i) =>\n            <TableRow><TableCell variant=\"head\">{row.header}</TableCell>\n                {row.cellStates.map((selected, j) =>\n                    <Cell\n                        disabled={false}\n                        beingSelected={this.isCellBeingSelected(i, j)}\n                        selected={selected}\n                        onTouchStart={this.handleTouchStartCell}\n                        onTouchMove={this.handleTouchMoveCell}\n                    />)}\n            </TableRow>\n        )\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const isLeftClick = e.button === 0;\n        const isTouch = e.type !== \"mousedown\";\n        if (!this.state.selectionStarted && (isLeftClick || isTouch)) {\n            e.preventDefault();\n            const {row, column} = eventToCellLocation(e);\n            if (row === undefined || column === undefined) return\n            this.props.onSelectionStart({row, column});\n            this.setState({\n                selectionStarted: true,\n                startRow: row,\n                startColumn: column,\n                endRow: row,\n                endColumn: column,\n                addMode: !this.props.rows[row].cellStates[column]\n            });\n        }\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        if (this.state.selectionStarted) {\n            e.preventDefault();\n            const {row, column} = eventToCellLocation(e);\n            if (row === undefined || column === undefined) return\n            const {startRow, startColumn, endRow, endColumn} = this.state;\n\n            if (endRow !== row || endColumn !== column) {\n                const nextRowCount = Math.abs(row - startRow) + 1;\n                const nextColumnCount = Math.abs(column - startColumn) + 1;\n\n                if (nextRowCount <= this.props.maxRows) {\n                    this.setState({endRow: row});\n                }\n                if (nextColumnCount <= this.props.maxColumns) {\n                    this.setState({endColumn: column});\n                }\n            }\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const isLeftClick = e.button === 0;\n        const isTouch = e.type !== \"mousedown\";\n        if (this.state.selectionStarted && (isLeftClick || isTouch)) {\n            const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as boolean[][]\n            const minRow = Math.min(this.state.startRow, this.state.endRow);\n            const maxRow = Math.max(this.state.startRow, this.state.endRow);\n            for (let row = minRow; row <= maxRow; row++) {\n                const minColumn = Math.min(this.state.startColumn, this.state.endColumn);\n                const maxColumn = Math.max(this.state.startColumn, this.state.endColumn);\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = this.state.addMode;\n                }\n            }\n            this.setState({selectionStarted: false});\n            this.props.onChange(value);\n        }\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        if (!this.state.selectionStarted) return false;\n\n        const {startRow, endRow, startColumn, endColumn} = this.state;\n        const minRow = Math.min(startRow, endRow);\n        const maxRow = Math.max(startRow, endRow);\n        const minColumn = Math.min(startColumn, endColumn);\n        const maxColumn = Math.max(startColumn, endColumn);\n\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\ninterface CellProps {\n    disabled: boolean\n    beingSelected: boolean\n    selected: boolean\n    onTouchStart: any\n    onTouchMove: any\n}\n\nclass Cell extends React.Component<CellProps> {\n    td: any\n\n    shouldComponentUpdate(nextProps: Readonly<CellProps>, nextState: Readonly<{}>, nextContext: any): boolean {\n        return nextProps.selected !== this.props.selected || nextProps.beingSelected !== this.props.beingSelected\n    }\n\n    componentDidMount() {\n        // We need to call addEventListener ourselves so that we can pass\n        // {passive: false}\n        this.td.addEventListener(\"touchstart\", this.handleTouchStart, {passive: false});\n        this.td.addEventListener(\"touchmove\", this.handleTouchMove, {passive: false});\n    }\n\n    componentWillUnmount() {\n        this.td.removeEventListener(\"touchstart\", this.handleTouchStart);\n        this.td.removeEventListener(\"touchmove\", this.handleTouchMove);\n    }\n\n    render() {\n        const {disabled, beingSelected, selected, onTouchStart, onTouchMove, ...props} = this.props;\n        let className = \"\"\n        if (disabled) {\n            className += \" cell-disabled\";\n        } else {\n            className += \" cell-enabled\";\n            if (selected) {\n                className += \" cell-selected\";\n            }\n            if (beingSelected) {\n                className += \" cell-being-selected\";\n            }\n        }\n\n        return (\n            <TableCell\n                ref={td => (this.td = td)}\n                className={className}\n                onMouseDown={this.handleTouchStart}\n                onMouseMove={this.handleTouchMove}\n                {...props}\n            />\n        );\n    }\n\n    handleTouchStart = (e: any) => !this.props.disabled && this.props.onTouchStart(e);\n    handleTouchMove = (e: any) => !this.props.disabled && this.props.onTouchMove(e);\n}\n\nfunction eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport default BehaviorDragSelect;","import {InfoOutlined, SaveAlt} from \"@mui/icons-material\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {backgroundColor, iconLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date().toISOString().slice(0, 10)\n\nconst style = {\n    userSelect: \"none\",\n    borderCollapse: \"collapse\",\n    \"& thead th\": {\n        position: \"sticky\",\n        top: \"0px\",\n        zIndex: 1,\n    },\n    \"& thead>tr:nth-child(2) th\": {\n        top: \"37px\"\n    },\n    \"& td\": {\n        border: 1,\n        borderColor: 'divider'\n    },\n    \"& td.cell-selected\": {\n        backgroundColor: 'secondary.main'\n    },\n    \"& td.cell-being-selected\": {\n        backgroundColor: 'primary.main'\n    },\n    \"& td.cell-disabled\": {\n        backgroundColor: \"red\"\n    }\n} as const\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface State {\n    rows: ExtendedRow[],\n    modified: boolean,\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [state, setState] = useState<State>({rows: [], modified: false});\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n    const {rows, modified} = state;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => ({\n                        header: (\n                            <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                <Avatar\n                                    variant=\"rounded\"\n                                    style={{backgroundColor: backgroundColor(c.consumerId)}}\n                                    sx={{width: 30, height: 30}}\n                                >\n                                    {iconLookup(c.type)}\n                                </Avatar>\n                            </Tooltip>\n                        ),\n                        consumerId: c.consumerId,\n                        cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => false)\n                    }));\n                setState({rows: cellStates, modified: false})\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError]);\n\n    const handleChange = (cells: boolean[][]) => {\n        setState({\n            ...state,\n            rows: state.rows.map((row, i) => ({...row, cellStates: cells[i]})),\n            modified: true\n        })\n    };\n\n    const handleSave = useCallback(() =>\n            backendService.putPrediction(date, rows.map((r) => (\n                {consumerId: r.consumerId, data: r.cellStates})))\n                .then(() => setSuccess(t('changes_saved')))\n                .then(() => setState({...state, modified: false}), setError)\n                .catch(console.log)\n        , [state, rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('save')} icon={<SaveAlt/>} onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo])\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\" disableGutters>\n                <Box style={{display: \"grid\"}}>\n                    <TableContainer sx={{overflow: 'auto', maxHeight: 'calc(100vh - 140px)'}}>\n                        <Table stickyHeader size=\"small\" sx={style}>\n                            <TableHead>\n                                <TableRow>\n                                    <TableCell variant=\"head\"/>\n                                    {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                                </TableRow>\n                                <TableRow>\n                                    <TableCell/>\n                                    {energyAvailable.map((v) => <TableCell style={{backgroundColor: v}}/>)}\n                                </TableRow>\n                            </TableHead>\n                            <TableBody>\n                                <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                            </TableBody>\n                        </Table>\n                    </TableContainer>\n                </Box>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import {Box, Card, CardActionArea, CardContent, CardMedia, Container, Grid, SvgIcon, Typography,} from \"@mui/material\";\nimport React, {useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport {PrivateRouteProps} from \"./App\";\nimport {useHomeDestinations} from \"./common/Destinations\";\nimport useDefaultTracking from \"./common/Tracking\";\n\ninterface Item {\n    title: string\n    subtitle: string\n    icon: any\n    to: string\n}\n\ninterface CardProps {\n    item: Item\n}\n\nfunction HomeCard(props: CardProps) {\n    const {item} = props\n    const {t} = useTranslation()\n\n    return (\n        <Grid item xs={12} lg={4} key={item.title}>\n            <Card>\n                <CardActionArea component={RouterLink} to={item.to}>\n                    <Box display=\"flex\">\n                        <CardMedia sx={{\n                            backgroundColor: 'secondary.main',\n                            display: \"flex\",\n                            alignItems: \"center\",\n                            padding: \"8px\"\n                        }}>\n                            <SvgIcon component={item.icon} sx={{color: 'background.paper'}}/>\n                        </CardMedia>\n                        <CardContent>\n                            <Typography variant=\"h6\">{t(item.title)}</Typography>\n                            <Typography color=\"textSecondary\" noWrap>{t(item.subtitle)}</Typography>\n                        </CardContent>\n                    </Box>\n                </CardActionArea>\n            </Card>\n        </Grid>\n    )\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const homeDestinations = useHomeDestinations();\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"lg\">\n                <Grid container justifyContent=\"center\">\n                    {homeDestinations.map((item: Item, index: number) =>\n                        <HomeCard item={item} key={index}/>)}\n                </Grid>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","import { Palette } from '@mui/material/styles';\nimport {TimeItem} from \"./ThermostatDaySetting\";\n\nexport const chartOptions = {\n    plugins: {\n        legend: {display: false},\n        tooltip: {enabled: false}\n    },\n    scales: {\n        x: {\n            min: 0,\n            max: 24,\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + '⁰⁰'\n            }\n        },\n        y: {\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + ' °C'\n            }\n        }\n    }\n}\n\nexport const createData = (dataItems: TimeItem[], palette: Palette) => {\n    return {\n        datasets: [\n            {\n                data: dataItems.map((i) => ({\n                    x: (i.time.getHours() + i.time.getMinutes() / 60),\n                    y: i.temperature\n                })),\n                showLine: true,\n                fill: true,\n                stepped: true,\n                borderColor: palette.primary.main,\n                backgroundColor: palette.secondary.main,\n            }\n        ],\n\n    }\n}\n\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import React from \"react\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Typography,\n    useTheme\n} from \"@mui/material\";\nimport {Scatter} from \"react-chartjs-2\";\nimport {Delete, Edit} from \"@mui/icons-material\";\nimport {chartOptions, createData} from \"./ChartOptions\";\nimport {createTime} from \"../common/Time\";\n\nexport interface TimeItem {\n    time: Date;\n    temperature: number;\n}\n\ninterface LabeledTimeItem extends TimeItem {\n    label: string\n}\n\ninterface Props {\n    title: string;\n    id: string;\n    items: TimeItem[];\n    onAddTime: (id: string) => void\n    onCopyFrom: (id: string) => void\n    onDelete: (id: string, index: number) => void\n    onEdit: (id: string, index: number) => void\n}\n\nconst printTime = (time: Date) => time.toLocaleTimeString('de-DE', {hour: '2-digit', minute: '2-digit'})\n\nconst labelTimeItems = (dataItems: TimeItem[]): LabeledTimeItem[] => {\n    let array = new Array<LabeledTimeItem>();\n    for (let _i = 0; _i < dataItems.length - 1; _i++) {\n        array.push({...dataItems[_i], label: printTime(dataItems[_i].time) + ' - ' + printTime(dataItems[_i + 1].time)})\n    }\n    return array;\n}\n\nexport const compareProps = (a: Props, b: Props) => {\n    if (a.id !== b.id || a.title !== b.title || a.items.length !== b.items.length) return false;\n    for (let i = 0; i < a.items.length; i++) {\n        if (a.items[i].time.getTime() !== b.items[i].time.getTime() || a.items[i].temperature !== b.items[i].temperature) return false;\n    }\n    return true;\n}\n\nexport const ThermostatDaySetting = React.memo((props: Props) => {\n    const {title, items} = props;\n    const dataItems = [...items, {time: createTime(23, 59), temperature: items[items.length - 1].temperature}]\n    const labeledTimeItems = labelTimeItems(dataItems);\n    const {palette} = useTheme();\n    const data = createData(dataItems, palette);\n    return (\n        <Card>\n            <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">{title}</Typography>\n                <Box p={1}>\n                    <Scatter data={data} options={chartOptions} height={50}/>\n                </Box>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>Zeitraum</TableCell>\n                            <TableCell colSpan={2}>Temperatur</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {labeledTimeItems.map((item, index) => (\n                            <TableRow key={index} hover={true}>\n                                <TableCell>{item.label}</TableCell>\n                                <TableCell>{item.temperature} °C</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => props.onEdit(props.id, index)}\n                                    ><Edit/></IconButton>\n                                    <IconButton\n                                        disabled={index < 1}\n                                        size=\"small\"\n                                        onClick={() => props.onDelete(props.id, index)}\n                                    ><Delete/></IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n                <Box my=\"auto\" />\n                <CardActions>\n                    <Button\n                        style={{flexShrink: 0}}\n                        color=\"primary\"\n                        onClick={() => props.onAddTime(props.id)}\n                        disabled={items?.length > 4}\n                    >Zeitraum hinzufügen</Button>\n                    <Box mx=\"auto\"/>\n                    <Button\n                        color=\"primary\"\n                        onClick={() => props.onCopyFrom(props.id)}\n                    >Kopieren von ...</Button>\n                </CardActions>\n            </CardContent>\n        </Card>\n    )\n}, compareProps)\n","import React from \"react\";\nimport {Button, DialogActions, DialogContent, InputAdornment, TextField, Typography} from \"@mui/material\";\nimport {ResponsiveDialog} from \"../common/ResponsiveDialog\";\nimport {StaticTimePicker} from \"@mui/lab\";\n\ninterface Props {\n    title: string\n    open: boolean\n    showTimePicker: boolean\n    onClose: () => void\n    onOK: () => void\n    time: Date | null\n    setTime: (time: Date | null) => void\n    temperature: string | null\n    setTemperature: (temperature: string | null) => void\n}\n\nexport function ModifyTimeItemDialog(props: Props) {\n    return <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n        <DialogContent>\n            {props.showTimePicker &&\n            <>\n                <Typography variant=\"subtitle2\">Time</Typography>\n                <StaticTimePicker\n                    label=\"Select Time\"\n                    ampm={false}\n                    value={props.time}\n                    onChange={(date) => props.setTime(date)}\n                    renderInput={() => <></>}\n                />\n            </>\n            }\n            <Typography variant=\"subtitle2\">Temperature</Typography>\n            <TextField\n                variant=\"filled\"\n                fullWidth\n                label=\"Temperature\"\n                type=\"number\"\n                value={props.temperature}\n                onChange={(e) => props.setTemperature(e.target.value)}\n                InputProps={{endAdornment: <InputAdornment position=\"start\">°C</InputAdornment>}}/>\n        </DialogContent>\n        <DialogActions>\n            <Button color=\"primary\" onClick={props.onClose}>Cancel</Button>\n            <Button color=\"primary\" onClick={props.onOK}>OK</Button>\n        </DialogActions>\n    </ResponsiveDialog>\n}\n","import {createTime} from \"../common/Time\";\n\nexport const data_ = [\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ],\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ],\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ],\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ],\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ],\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ],\n    [\n        {time: createTime(0, 0), temperature: 18},\n        {time: createTime(12, 0), temperature: 21},\n        {time: createTime(15, 0), temperature: 25},\n        {time: createTime(18, 0), temperature: 21},\n    ]\n]\n","import React, {useCallback, useEffect, useState} from 'react';\nimport {Box, Container, Dialog, DialogTitle, Grid, GridSize, Tab, Tabs, Toolbar} from \"@mui/material\";\nimport {CompareArrowsOutlined, InfoOutlined, RotateLeft, SaveAlt} from \"@mui/icons-material\";\nimport {useTranslation} from \"react-i18next\";\nimport {ThermostatDaySetting, TimeItem} from \"./thermostats/ThermostatDaySetting\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {PrivateRouteProps} from \"./App\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {createTime} from \"./common/Time\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copyData = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [activeTab, setActiveTab] = useState(0);\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<Array<Array<TimeItem>>>([])\n    const [initialData, setInitialData] = useState<Array<Array<TimeItem>>>([])\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [\"Werktage\", \"Wochenende\"]\n    const dayLabels = [\"Montag\", \"Dienstag\", \"Mittwoch\", \"Donnerstag\", \"Freitag\", \"Samstag\", \"Sonntag\"]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (data?.length === 7) {\n                    data = data.map(day => sortDay(day));\n                    setData(data);\n                    setInitialData(data);\n                } else {\n                    setData(data_);\n                    setInitialData(data_);\n                }\n            }, (e) => {\n                console.log(e);\n                setData(data_)\n                setInitialData(data_)\n                setError(e)\n            })\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.length < index ? empty : data[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: empty\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 3}\n    ]\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton description={t('save')} icon={<SaveAlt/>} onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n\n    const onCopyFrom = useCallback((id: string) => setCopyFromOpen(true), []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => prevState.map((item, idx) =>\n            String(idx) === id ? item.filter((value, refIndex) => refIndex !== index) : item));\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            state[id].push({time: time, temperature: +temperature})\n            sortDay(state[id])\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            state[id][index] = {time: time, temperature: +temperature};\n            sortDay(state[id])\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    return (\n        <Track>\n            <Toolbar>\n                <Box mx=\"auto\"/>\n                <Tabs value={activeTab} variant=\"fullWidth\" onChange={(e, tab) => setActiveTab(tab)}>\n                    <Tab label=\"Einfach\" id=\"simple-tab-0\" aria-controls=\"simple-tabpanel-0\"/>\n                    <Tab label=\"Erweitert\" id=\"simple-tab-1\" aria-controls=\"simple-tabpanel-1\"/>\n                </Tabs>\n                <Box mx=\"auto\"/>\n            </Toolbar>\n            <Container disableGutters maxWidth=\"xl\">\n                <Box p={1}>\n                    {tabs.map((tab, index) => (\n                        <TabPanel index={index} value={activeTab} key={index}>\n                            <Grid container spacing={1}>\n                                {tab.days.map((day) => (\n                                    <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                        <ThermostatDaySetting\n                                            id={day.id}\n                                            title={day.label}\n                                            items={day.data}\n                                            onAddTime={onAddTime}\n                                            onCopyFrom={onCopyFrom}\n                                            onEdit={(id, index) => {\n                                                setID(+id);\n                                                setIndex(index);\n                                                setTime(day.data[index].time);\n                                                setTemperature(String(day.data[index].temperature));\n                                                setShowTimePicker(index > 0);\n                                                setEditTimeOpen(true);\n                                            }}\n                                            onDelete={onDelete}\n                                        />\n                                    </Grid>\n                                ))}\n                            </Grid>\n                        </TabPanel>\n                    ))}\n                </Box>\n            </Container>\n            <ModifyTimeItemDialog\n                title=\"Add Entry\"\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title=\"Edit Entry\"\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <Dialog open={copyFromOpen} onClose={() => setCopyFromOpen(false)}>\n                <DialogTitle>Copy From</DialogTitle>\n            </Dialog>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import React, {useCallback, useEffect, useState} from 'react';\nimport {Content, Root} from \"./common/DefaultAppBar\";\nimport {Box, Card, CardContent, Container, Typography, useTheme} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {InfoOutlined, SaveAlt} from \"@mui/icons-material\";\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport 'chartjs-plugin-dragdata';\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {PrivateRouteProps} from \"./App\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n    displayGrid?: boolean\n}\n\nfunction DraggableGraph(props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                hoverRadius: 0,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    alignToPixels: true,\n                    max: 10,\n                    min: 0,\n                    ticks: {\n                        display: false,\n                    },\n                    grid: {\n                        display: props.displayGrid ?? false,\n                    },\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    alignToPixels: true,\n                    max: 10,\n                    min: 0,\n                    ticks: {\n                        display: false,\n                    },\n                    grid: {\n                        display: props.displayGrid ?? false,\n                    },\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            animation: false,\n            plugins: {\n                // @ts-ignore\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: (e: any, element: any) => null,\n                    onDrag: (e: any, datasetIndex: any, index: number, value: number) => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {\n                    display: false\n                },\n                tooltip: {\n                    enabled: false\n                }\n            }\n        }} height={100} width={100}/>\n}\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'MoodPage'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<{ x: number, y: number }>();\n\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, (e) => {\n                setError(e);\n                setMood({x: 5, y: 5});\n            })\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = useCallback(() => {\n        backendService.putMood(date, mood!)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                <ResponsiveIconButton icon={<SaveAlt/>} onClick={onSaveClick} description={t('save')}/>\n            </>\n        })\n    }, [t, setAppBar, onSaveClick, openInfo])\n\n    return <Track>\n        <Root>\n            <Content>\n                <Container maxWidth=\"sm\">\n                    <Box py={3}>\n                        <Typography variant=\"h5\" align=\"center\">{t('mood_please_select_mood')}</Typography>\n                        <Card>\n                            {mood &&\n                            <CardContent>\n                                <DraggableGraph mood={mood} onChange={setMood}/>\n                            </CardContent>\n                            }\n                        </Card>\n                    </Box>\n                </Container>\n            </Content>\n        </Root>\n        <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Box, Button, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport function Page404(props: { path: string }) {\n    return (\n        <Box m={16} textAlign='center'>\n            <Typography variant=\"h1\">404</Typography>\n            <Typography variant=\"h5\">Page not found</Typography>\n            <Box m={2}>\n                <Button color=\"primary\" variant=\"contained\" component={Link} to={props.path}>Go home</Button>\n            </Box>\n        </Box>\n    )\n}\n","import {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Verify from \"./Verify\";\nimport Logout from \"./Logout\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Power from \"./Power\";\nimport Archive from \"./Archive\";\nimport Consumers from \"./Consumers\";\nimport Behavior from \"./Behavior\";\nimport React, {useContext} from \"react\";\nimport Home from \"./Home\";\nimport Thermostats from \"./Thermostats\";\nimport BackendService from \"./service/BackendService\";\nimport Mood from \"./Mood\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {Page404} from \"./Page404\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    const {backendService} = props;\n    return <>\n        <Redirect to=\"/login\"/>\n        <Switch>\n            <Route path=\"/verify\"><Verify backendService={backendService}/></Route>\n            <Route path=\"/login\"><Login backendService={backendService}/></Route>\n            <Route><Page404 path=\"/login\"/></Route>\n        </Switch>\n    </>\n\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return null;\n\n    const paths = {\n        logout: <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: <Route path=\"/user\"><User {...props}/></Route>,\n        power: <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        mood: <Route path=\"/mood\"><Mood  {...props}/></Route>,\n        thermostats: <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        root: <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: <Route exact path={`${process.env.PUBLIC_URL}`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout, paths.user, paths.home, paths.root]\n    const managementPaths = [paths.upload];\n    const homeOwnerPaths = [paths.upload, paths.power, paths.consumers, paths.behavior, paths.thermostats, paths.mood];\n    const studentPaths = [paths.archive, paths.consumers, paths.behavior, paths.mood];\n\n    return (\n        <Switch>\n            {user.type === \"management\" && managementPaths}\n            {user.type === \"student\" && studentPaths}\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {TimeItem} from \"../thermostats/ThermostatDaySetting\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<Array<Array<TimeItem>> | null> {\n        return this.backend\n            .get<Array<Array<TimeItem>>>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => data?.map(day => day.map(it => ({time: new Date(it.time), temperature: it.temperature}))))\n    }\n\n    putThermostats(data: Array<Array<TimeItem>>) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {\n    createTheme,\n    CssBaseline,\n    LinearProgress,\n    StyledEngineProvider,\n    ThemeOptions,\n    ThemeProvider, useMediaQuery,\n} from \"@mui/material\";\nimport {lightGreen} from \"@mui/material/colors\";\nimport React, {useCallback, useEffect, useMemo, useState} from \"react\";\nimport {useTracking} from \"react-tracking\";\nimport DefaultAppBar, {Content, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport Config from \"./Config\";\nimport {PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: (mode: ColorMode) => setMode(mode)}), [mode]);\n\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: mode ? mode : (prefersDarkMode ? 'dark' : 'light'),\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                        // When bottom bar is shown, raise FAB position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [prefersDarkMode, mode]);\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const {Track} = useTracking({}, {\n        dispatch(data: any) {\n            backendService.postTracking(data)\n                .catch(console.log);\n        }\n    });\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser)\n                .catch(console.error);\n        }\n    }, [isLoggedIn])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({\n        title: \"\",\n        showBackButton: false,\n        children: () => <></>\n    });\n    const setAppBarCb = useCallback((props: AppBarProps) => setAppBar(props), [])\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                {isLoggedIn !== undefined &&\n                <React.Suspense fallback={<LinearProgress/>}>\n                    <ColorModeContext.Provider value={colorMode}>\n                        {!isLoggedIn &&\n                        <PublicRouter backendService={backendService}/>\n                        }\n                        {isLoggedIn &&\n                        <UserContext.Provider value={user}>\n                            <Track>\n                                <Root>\n                                    <DefaultAppBar title={appBar.title}\n                                                   hideBackButton={!appBar.showBackButton}\n                                                   children={appBar.children()}/>\n                                    <DefaultDrawer/>\n                                    <Content>\n                                        <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                            <PrivateRouter\n                                                backendService={backendService}\n                                                setAppBar={setAppBarCb}\n                                            />\n                                        </LocalizationProvider>\n                                    </Content>\n                                </Root>\n                                <DefaultBottomNavigation/>\n                            </Track>\n                        </UserContext.Provider>\n                        }\n                    </ColorModeContext.Provider>\n                </React.Suspense>\n                }\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n\ni18n\n    .use(resourcesToBackend((language, namespace, callback) => {\n        import(`./locales/${language}/${namespace}.json`)\n            .then((resources) => {\n                callback(null, resources)\n            })\n            .catch((error) => {\n                callback(error, null)\n            })\n    }))\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {BrowserRouter as Router} from 'react-router-dom';\n\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <Router basename={`${process.env.PUBLIC_URL}#`}>\n            <App/>\n        </Router>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}