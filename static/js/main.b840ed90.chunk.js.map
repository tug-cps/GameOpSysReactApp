{"version":3,"sources":["locales lazy /^/.//.*/.json$/ groupOptions: {} namespace object","common/AlertSnackbar.tsx","common/Destinations.tsx","common/DefaultAppBar.tsx","common/DefaultBottomNavigation.tsx","common/ResponsiveDialog.tsx","common/UserConfirmationDialog.tsx","common/UseSnackBar.tsx","service/FakeDB.ts","service/Executor.ts","service/FakeBackend.ts","Config.ts","common/InfoDialog.tsx","Login.tsx","Verify.tsx","common/Tracking.ts","Logout.tsx","common/ResponsiveIconButton.tsx","Upload.tsx","User.tsx","common/Date.ts","power/PowerEntry.tsx","Power.tsx","common/DestinationCard.tsx","Archive.tsx","common/ConsumerTools.tsx","consumers/ConsumerCard.tsx","Consumers.tsx","behavior/Cell.tsx","behavior/helpers.ts","behavior/BehaviorDragSelect.tsx","Behavior.tsx","Home.tsx","common/Time.ts","thermostats/DummyData.ts","thermostats/ModifyTimeItemDialog.tsx","thermostats/ChartOptions.ts","thermostats/ThermostatDaySetting.tsx","Thermostats.tsx","Mood.tsx","Page404.tsx","PastBehavior.tsx","LoadingPage.tsx","Routes.tsx","service/BackendService.ts","App.tsx","common/UseThemeBuilder.tsx","i18n.tsx","serviceWorkerRegistration.ts","reportWebVitals.ts","index.tsx"],"names":["map","webpackAsyncContext","req","__webpack_require__","o","Promise","resolve","then","e","Error","code","ids","id","t","keys","Object","module","exports","AlertSnackbar","props","severity","autoHideDuration","Snackbar","anchorOrigin","horizontal","vertical","open","onClose","Alert","variant","message","destinations","home","title","subtitle","icon","HomeOutlined","to","upload","CloudUploadOutlined","behavior","EditOutlined","thermostats","AcUnit","user","SettingsOutlined","power","ShowChart","archive","History","mood","Mood","drawerWidth","DefaultDrawer","React","memo","useTranslation","useContext","UserContext","type","useNavDrawerDestinations","Box","component","sx","flexShrink","sm","width","Hidden","smDown","Drawer","role","Toolbar","Divider","List","disablePadding","d","ListItem","button","RouterLink","ListItemIcon","SvgIcon","ListItemText","primary","Content","flexGrow","Suspense","fallback","LinearProgress","children","Root","display","style","ml","DefaultAppBar","trigger","useScrollTrigger","history","useHistory","Slide","appear","direction","in","AppBar","hideBackButton","IconButton","color","edge","marginRight","onClick","goBack","size","Typography","mx","DefaultBottomNavigation","useState","value","setValue","theme","useTheme","matches","useMediaQuery","breakpoints","down","useBottomBarDestinations","marginTop","Paper","position","bottom","overflow","zIndex","elevation","BottomNavigation","onChange","event","newValue","destination","push","showLabels","BottomNavigationAction","label","ResponsiveDialog","fullScreen","Dialog","DialogTitle","UserConfirmationDialog","DialogContent","DialogContentText","DialogActions","Button","onAccept","useSnackBar","state","setState","prevState","useCallback","response","statusText","getFakeDB","db","localStorage","getItem","users","dates","today","Date","setDate","getDate","toISOString","slice","JSON","stringify","location","name","userId","email","consumer","assign","v","i","consumerId","toString","owner","customName","undefined","active","processedConsumption","reduce","val","Array","Math","random","predictions","token","setItem","parse","saveFakeDB","DefaultExecutor","reject","data","console","log","this","status","headers","config","request","FaultyExecutor","executor","ok","error","findInDict","dict","matcher","key","delayedPromise","promise","setTimeout","catch","reason","FakeBackend","backendConfig","url","Authorization","includes","substring","lastIndexOf","index","findIndex","it","splice","endsWith","params","shared_password","password","removeItem","x","y","consumer_name","uuidv4","split","pop","startsWith","consumer_active","array","elementMatcher","changes","consumerIndex","meldArrayElement","c","date","axios","create","baseURL","process","backend","apiDescription","useInfoDialog","Lorem","InfoDialog","content","StyledGrid","styled","Grid","margin","padding","flexDirection","alignItems","ChangeLanguageDialog","i18n","changeLanguage","language","finally","pt","ListItemButton","Login","setError","backendService","langDialogProps","openLangDialog","infoProps","openInfo","progress","setProgress","handleSubmit","preventDefault","requestPin","InfoContent","infoText","returnObjects","text","Container","maxWidth","height","container","spacing","item","xs","md","paragraph","Avatar","backgroundColor","onSubmit","TextField","autoFocus","autoComplete","disabled","target","required","fullWidth","InputProps","endAdornment","InputAdornment","InfoOutlined","LoadingButton","loading","Fab","LanguageOutlined","Form","StyledContainer","justifyContent","Verify","setPassword","useLocation","login","handleChange","useDefaultTracking","trackingData","options","extendData","useTracking","dispatchOnMount","extendOptions","Track","trackEvent","getTrackingData","Logout","page","useEffect","logout","AttentionIcon","Badge","invisible","requiresAttention","SmallIconButton","Tooltip","description","LargeIconButton","startIcon","ResponsiveIconButton","Input","operators","link","providers","Upload","success","setSuccess","setAppBar","showBackButton","infoContent","paddingTop","gutterBottom","mt","href","ListItemAvatar","ElectricalServicesOutlined","htmlFor","accept","file","files","postConsumption","UserInfo","items","Email","MyLocation","idx","ConsumersInfo","Power","ArrowRight","LanguageInfo","i18next","resolvedLanguage","setLanguage","Language","ToggleButtonGroup","exclusive","ToggleButton","ColorModeInfo","colorMode","ColorModeContext","colorModeValue","mode","Brightness4Outlined","toggleColorMode","User","setUser","getUser","ExitToApp","square","useParsedDate","useMemo","animation","PowerEntry","dateParsed","setData","getProcessedConsumption","consumptions","labels","from","datasets","fill","borderColor","Card","CardHeader","CardContent","setDates","getProcessedConsumptions","Stack","DestinationCard","done","CardActionArea","CardMedia","noWrap","Archive","getPredictions","parsedDate","CheckCircleOutlined","RadioButtonUncheckedOutlined","translate","str","override","de","en","consumers","laundry","blue","shadeDefault","colorAlt","shadeAlt","cooking","pink","dishes","purple","hygiene","entertainment","teal","wellness","green","homeoffice","red","emobility","temperature","high","med","amber","low","unknown","consumerLookup","compareProps","a","b","compareConsumers","ConsumerCard","clickEdit","clickActive","clickDelete","showButtonTooltip","consumerName","consumerType","ListItemSecondaryAction","Consumers","setConsumers","getConsumers","applyChangeActive","putConsumer","paddingBottom","consumerHelp","compareCellProps","selected","beingSelected","Cell","onTouchStart","onTouchMove","colorSelected","colorBeingSelected","tdRef","useRef","colorContext","prefersDarkMode","useDarkMode","td","current","addEventListener","passive","removeEventListener","TableCell","ref","border","onMouseDown","onMouseMove","degrees","backgroundImage","eventToCellLocation","touches","touch","document","elementFromPoint","clientX","clientY","tagName","parentNode","row","rowIndex","column","cellIndex","minMax","min","max","isValidEvent","BehaviorDragSelect","handleTouchStartCell","selectionStarted","startRow","startColumn","endRow","endColumn","addMode","rows","cellStates","handleTouchMoveCell","handleTouchEndWindow","r","minRow","maxRow","minColumn","maxColumn","isCellBeingSelected","window","TableRow","header","left","j","Component","hours","formatTime","colors","energyAvailable","isoDate","Behavior","setRows","modified","setModified","all","getPrediction","filter","enterTouchDelay","find","p","cells","handleSave","putPrediction","infoConsumers","disableGutters","TableContainer","maxHeight","Table","stickyHeader","userSelect","borderCollapse","TableHead","align","String","top","TableBody","when","Home","interactions","userInteractionNeeded","results","now","createTime","minutes","getDay","getMonth","data_","useAdvanced","simple","time","advanced","ModifyTimeItemDialog","showTimePicker","StaticTimePicker","ampm","setTime","renderInput","my","setTemperature","onOK","chartOptions","plugins","legend","tooltip","enabled","scales","ticks","stepSize","callback","printTime","toLocaleTimeString","hour","minute","length","every","getTime","compareItem","ThermostatDaySetting","palette","labeledTimeItems","dataItems","getHours","getMinutes","showLine","stepped","main","secondary","createData","colSpan","hover","onEdit","onDelete","CardActions","onCopyFrom","marginLeft","onAddTime","TabPanel","other","hidden","copySetting","day","copyData","sortDay","sort","compareDays","dayIndex","itemIndex","Thermostats","initialData","setInitialData","Success","simpleDayLabels","dayLabels","getThermostats","reset","save","putThermostats","addTimeOpen","setAddTimeOpen","editTimeOpen","setEditTimeOpen","copyFromOpen","setCopyFromOpen","setShowTimePicker","setID","intId","setIndex","addEntry","editEntry","copyFrom","fromID","empty","days","simpleDays","tabs","lg","xl","pb","textTransform","Switch","checked","tab","minWidth","DraggableGraph","defaults","divider","commonScaleProps","alignToPixels","grid","borderWidth","pointHitRadius","maintainAspectRatio","aspectRation","onHover","chart","getElementsAtEventForMode","intersect","native","cursor","dragData","dragX","showTooltip","onDragStart","onDrag","onDragEnd","datasetIndex","setMood","panel","setPanel","getMood","onSaveClick","putMood","onMoodChange","titleKey","TabContext","Page404","m","textAlign","Link","path","compareConsumerProps","ConsumerHeader","PastBehavior","URLSearchParams","search","get","validDate","isValid","isPast","LoadingPage","mr","retry","PublicRouter","LoadingRouter","exact","PrivateRouter","paths","pastbehavior","root","commonPaths","managementPaths","homeOwnerPaths","studentPaths","unpack","accessToken","isLoggedInObservable","BehaviorSubject","pipe","next","sharedPassword","addAuth","post","put","delete","formData","FormData","append","Config","createContext","App","setMode","useDarkTheme","createTheme","lightGreen","contrastText","components","MuiAppBar","defaultProps","MuiUseMediaQuery","noSsr","MuiGrid","MuiCard","MuiFab","styleOverrides","right","MuiSnackbar","anchorOriginBottomCenter","useThemeBuilder","isLoggedIn","setIsLoggedIn","dispatchTracking","postTracking","dispatch","userConfirm","confirm","useUserConfirmationDialog","userConfirmationProps","setRetry","onRetry","isAuthenticated","subscribe","appBar","StyledEngineProvider","injectFirst","ThemeProvider","CssBaseline","Provider","basename","getUserConfirmation","LocalizationProvider","dateAdapter","AdapterDateFns","locs","resources","resourcesToBackend","namespace","use","LanguageDetector","initReactI18next","init","fallbackLng","interpolation","escapeValue","format","lng","formatDate","locale","loadPath","Boolean","hostname","match","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.b840ed90.chunk.js","sourcesContent":["var map = {\n\t\"./de/translation.json\": [\n\t\t456,\n\t\t4\n\t],\n\t\"./en/translation.json\": [\n\t\t457,\n\t\t5\n\t]\n};\nfunction webpackAsyncContext(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\treturn Promise.resolve().then(function() {\n\t\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\t\te.code = 'MODULE_NOT_FOUND';\n\t\t\tthrow e;\n\t\t});\n\t}\n\n\tvar ids = map[req], id = ids[0];\n\treturn __webpack_require__.e(ids[1]).then(function() {\n\t\treturn __webpack_require__.t(id, 3);\n\t});\n}\nwebpackAsyncContext.keys = function webpackAsyncContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackAsyncContext.id = 443;\nmodule.exports = webpackAsyncContext;","import {Alert, AlertColor, Snackbar} from \"@mui/material\";\nimport React from \"react\";\n\nexport interface Props {\n    open: boolean\n    onClose: () => void\n    message?: string,\n    severity?: AlertColor\n    autoHideDuration?: number\n}\n\nexport function AlertSnackbar(props: Props) {\n    const severity = props.severity ?? \"error\";\n    const autoHideDuration = props.autoHideDuration ?? 3000;\n    return (\n        <Snackbar anchorOrigin={{horizontal: 'center', vertical: 'bottom'}}\n                  open={props.open}\n                  autoHideDuration={autoHideDuration}\n                  onClose={props.onClose}>\n            <Alert variant=\"filled\" onClose={props.onClose} severity={severity}>{props.message}</Alert>\n        </Snackbar>\n    );\n}\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport HomeOutlined from \"@mui/icons-material/HomeOutlined\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {SvgIcon} from \"@mui/material\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\nimport {SettingsOutlined} from \"@mui/icons-material\";\n\ninterface Destination {\n    title: string,\n    subtitle: string,\n    icon: typeof SvgIcon,\n    to: string\n}\n\nconst destinations = {\n    home: {title: 'home_link', subtitle: '', icon: HomeOutlined, to: '/'},\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    thermostats:\n        {title: 'card_thermostats_title', subtitle: 'card_thermostats_subtitle', icon: AcUnit, to: '/thermostats'},\n    user: {title: 'card_user_title', subtitle: 'card_user_subtitle', icon: SettingsOutlined, to: '/user'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nexport function useBottomBarDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\nexport function useNavDrawerDestinations(): Destination[] {\n    const user = useContext(UserContext)\n    switch (user?.type) {\n        case \"management\":\n            return [destinations.home, destinations.upload, destinations.user];\n        case \"student\":\n            return [destinations.home, destinations.behavior, destinations.user];\n        case \"homeowner\":\n            return [destinations.home, destinations.upload, destinations.behavior, destinations.user];\n        default:\n            return [];\n    }\n}\n\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {\n    AppBar,\n    Box,\n    Divider,\n    Drawer,\n    Hidden,\n    IconButton,\n    LinearProgress,\n    ListItemIcon,\n    Slide,\n    SvgIcon,\n    Toolbar,\n    Typography,\n    useScrollTrigger\n} from \"@mui/material\";\nimport List from \"@mui/material/List\";\nimport ListItem from \"@mui/material/ListItem\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {useNavDrawerDestinations} from \"./Destinations\";\n\nconst drawerWidth = 240;\n\nexport interface Props {\n    hideBackButton?: boolean;\n    title: string;\n}\n\nexport const DefaultDrawer = React.memo(() => {\n    const {t} = useTranslation();\n    const destinations = useNavDrawerDestinations();\n\n    return (\n        <Box component='nav' sx={{flexShrink: {sm: 0}, width: {sm: drawerWidth}}}>\n            <Hidden smDown>\n                <Drawer open variant=\"persistent\">\n                    <Box role=\"presentation\" sx={{width: drawerWidth}}>\n                        <Toolbar/>\n                        <Divider/>\n                        <List disablePadding>\n                            {destinations.map((d) =>\n                                <ListItem button key={d.title} component={RouterLink} to={d.to}>\n                                    <ListItemIcon><SvgIcon component={d.icon}/></ListItemIcon>\n                                    <ListItemText primary={t(d.title)}/>\n                                </ListItem>)\n                            }\n                        </List>\n                    </Box>\n                </Drawer>\n            </Hidden>\n        </Box>\n    );\n}, () => true);\n\nexport function Content(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{flexGrow: 1}}>\n        <Toolbar/>\n        <React.Suspense fallback={<LinearProgress/>} children={props.children}/>\n    </Box>\n}\n\nexport function Root(props: React.PropsWithChildren<{}>) {\n    return <Box sx={{display: 'flex'}} children={props.children}/>\n}\n\nconst style = {ml: {sm: `${drawerWidth}px`}, width: {sm: `calc(100% - ${drawerWidth}px)`}};\n\nexport function DefaultAppBar(props: React.PropsWithChildren<Props> & { hideBackButton?: boolean }) {\n    const {title} = props;\n    const trigger = useScrollTrigger();\n\n    const history = useHistory();\n    return (\n        <Slide appear={false} direction=\"down\" in={!trigger}>\n            <AppBar sx={style}>\n                <Toolbar>\n                    {!props.hideBackButton &&\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        sx={{marginRight: 2}}\n                        onClick={history.goBack}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    }\n                    <Typography color=\"inherit\" variant=\"h6\">{title}</Typography>\n                    <Box mx=\"auto\"/>\n                    {props.children}\n                </Toolbar>\n            </AppBar>\n        </Slide>\n    );\n}\n","import {Box, Paper, SvgIcon, useMediaQuery, useTheme} from \"@mui/material\";\nimport BottomNavigation from '@mui/material/BottomNavigation';\nimport BottomNavigationAction from '@mui/material/BottomNavigationAction';\nimport React from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from \"react-router-dom\";\nimport {useBottomBarDestinations} from \"./Destinations\";\n\nfunction DefaultBottomNavigation() {\n\n    const history = useHistory();\n    const {t} = useTranslation()\n    const [value, setValue] = React.useState(0);\n    const theme = useTheme();\n    const matches = useMediaQuery(theme.breakpoints.down('sm'));\n    const destinations = useBottomBarDestinations();\n\n    if (!matches) return null;\n    return (\n        (<>\n            <Box sx={{marginTop: '60px'}}/>\n            <Paper sx={{\n                width: '100%',\n                position: 'fixed',\n                bottom: 0,\n                overflow: 'hidden',\n                zIndex: 100\n            }} elevation={5}>\n                <BottomNavigation\n                    value={value}\n                    onChange={(event, newValue) => {\n                        setValue(newValue);\n                        const destination = destinations[newValue];\n                        if (destination != null) {\n                            history.push(destination.to);\n                        }\n                    }}\n                    showLabels\n                >\n                    {destinations.map((d) =>\n                        <BottomNavigationAction id={d.title} label={t(d.title)} icon={<SvgIcon component={d.icon}/>}/>)\n                    }\n                </BottomNavigation>\n            </Paper>\n        </>)\n    );\n}\n\nexport default DefaultBottomNavigation;\n","import ArrowBack from \"@mui/icons-material/ArrowBack\";\nimport {AppBar, Dialog, DialogTitle, IconButton, Toolbar, Typography, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    title: string\n    open: boolean\n    onClose: () => void\n}\n\nexport function ResponsiveDialog(props: React.PropsWithChildren<Props>) {\n    const theme = useTheme();\n    const fullScreen = useMediaQuery(theme.breakpoints.down('sm'));\n\n    return (\n        <Dialog\n            open={props.open}\n            onClose={props.onClose}\n            fullScreen={fullScreen}\n        >\n            {fullScreen &&\n            <AppBar>\n                <Toolbar>\n                    <IconButton\n                        color=\"inherit\"\n                        edge=\"start\"\n                        onClick={props.onClose}\n                        sx={{marginRight: 2}}\n                        size=\"large\"\n                        children={<ArrowBack/>}\n                    />\n                    <Typography variant=\"h6\">{props.title}</Typography>\n                </Toolbar>\n            </AppBar>\n            }\n            <DialogTitle children={props.title}/>\n            {props.children}\n        </Dialog>\n    );\n}\n","import {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport React, {useCallback, useState} from \"react\";\n\nexport const UserConfirmationDialog = (props: { open: boolean, onAccept: () => void, onClose: () => void, message: string }) => {\n    const {t} = useTranslation();\n\n    return (\n        <ResponsiveDialog title={t('confirm_title') as string}\n                          open={props.open}\n                          onClose={props.onClose}>\n            <DialogContent>\n                <DialogContentText>{props.message}</DialogContentText>\n            </DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n                <Button onClick={props.onAccept}>{t('dialog_button_ok')}</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n\nexport const useUserConfirmationDialog = () => {\n    const [state, setState] = useState<{ open: boolean, message: string, callback: (ok: boolean) => void }>({\n        open: false,\n        message: \"\",\n        callback: () => {\n        }\n    });\n    const userConfirm = useCallback((message: string, callback: (ok: boolean) => void) =>\n        setState({open: true, message: message, callback: callback}), [])\n    const confirm = useCallback((ok: boolean) => {\n        setState(prevState => {\n            prevState.callback(ok);\n            return {...prevState, open: false}\n        });\n    }, []);\n    return [{\n        open: state.open,\n        onAccept: () => confirm(true),\n        onClose: () => confirm(false),\n        message: state.message\n    }, userConfirm] as const\n}\n","import {useCallback, useState} from \"react\";\n\nexport interface State {\n    open: boolean,\n    message?: string\n}\n\nexport function useSnackBar() {\n    const [state, setState] = useState<State>({open: false});\n    const close = () => setState(prevState => ({...prevState, open: false}));\n    const props = {open: state.open, onClose: close, message: state.message};\n    const pushMessage = useCallback((message: any) => setState({\n        open: true,\n        message: typeof message === \"string\" ? message : message?.response?.statusText\n    }), []);\n    return [props, pushMessage] as const\n}\n","import {ConsumerModel} from \"./Model\";\n\nexport function getFakeDB() {\n    let db = localStorage.getItem(\"fake_db\");\n    if (db == null) {\n        const users = [\n            \"user@test.com\",\n            \"faulty@test.com\",\n            \"homeowner@test.com\"\n        ];\n        const dates = [0, -1, -2, -3, -4].map(o => {\n            const today = new Date();\n            today.setDate(today.getDate() + o);\n            return today.toISOString().slice(0, 10);\n        });\n        db = JSON.stringify({\n                location: {\n                    \"location_1\": {\n                        name: \"greenbox COOLCITY\"\n                    }\n                },\n                user: {\n                    \"user@test.com\": {\n                        userId: 'user1',\n                        email: 'user@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"faulty@test.com\": {\n                        userId: 'faulty',\n                        email: 'faulty@test.com',\n                        location: 'greenbox COOLCITY',\n                        type: 'student',\n                    },\n                    \"management@test.com\": {\n                        userId: 'user3',\n                        email: 'management@test.com',\n                        location: 'location_1',\n                        type: 'management',\n                    },\n                    \"homeowner@test.com\": {\n                        userId: 'user4',\n                        email: 'homeowner@test.com',\n                        location: 'location_1',\n                        type: 'homeowner',\n                    }\n                },\n                consumer: Object.assign({}, ...users.map((v) => ({\n                    [v]: [\n                        {name: {'de': \"Wäsche\", 'en': \"Laundry\"}, type: 'laundry'},\n                        {name: {'de': \"Kochen\", 'en': \"Cooking\"}, type: 'cooking'},\n                        {name: {'de': \"Spülen\", 'en': \"Dishes\"}, type: 'dishes'},\n                        {name: {'de': \"Hygiene\", 'en': \"Hygiene\"}, type: 'hygiene'},\n                        {name: {'de': \"Entertainment\", 'en': \"Entertainment\"}, type: 'entertainment'},\n                        {name: {'de': \"Wellness\", 'en': \"Wellness\"}, type: 'wellness'},\n                        {name: {'de': \"Home-Office\", 'en': \"Home office\"}, type: 'homeoffice'},\n                        {name: {'de': \"E-Mobilität\", 'en': \"E-Mobility\"}, type: 'emobility'},\n                        {name: {'de': \"Stromheizung/-kühlung\", 'en': \"Air conditioning\"}, type: 'temperature'},\n                        {name: {'de': \"Sonstiges (hoher Verbrauch)\", 'en': \"Miscellaneous high\"}, type: 'high'},\n                        {name: {'de': \"Sonstiges (mittlerer Verbrauch)\", 'en': \"Miscellaneous mid\"}, type: 'med'},\n                        {name: {'de': \"Sonstiges (niedriger Verbrauch)\", 'en': \"Miscellaneous low\"}, type: 'low'},\n                    ].map((v, i) => ({\n                        consumerId: i.toString(),\n                        owner: '0',\n                        name: v.name,\n                        customName: undefined,\n                        type: v.type,\n                        active: true\n                    } as ConsumerModel))\n                }))),\n                processedConsumption: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [\"actual\", \"predicted\"].map((type) => ({\n                            \"type\": type,\n                            \"data\": [...Array(24)].map(() => Math.random() * 10)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                predictions: Object.assign({}, ...users.map((v) => ({\n                    [v]: dates.reduce((map: any, val: any) => {\n                        map[val] = [...Array(10)].map((v, id) => ({\n                            \"consumerId\": id.toString(),\n                            \"data\": [...Array(24)].map(() => 0)\n                        }));\n                        return map\n                    }, {})\n                }))),\n                thermostats: Object.assign({}, ...users.map((v) => ({[v]: null}))),\n                mood: Object.assign({}, ...users.map((v) => ({[v]: {}}))),\n                token: {\n                    \"fakeToken.thistokenisfake\": \"user@test.com\",\n                    \"fakeToken.thistokenisfake3\": \"management@test.com\",\n                    \"fakeToken.thistokenisfake4\": \"homeowner@test.com\",\n                    \"fakeToken.thistokenisfake5\": \"faulty@test.com\"\n                }\n            }\n        );\n        localStorage.setItem(\"fake_db\", db);\n    }\n\n    return JSON.parse(db);\n}\n\nexport function resetFakeDB() {\n    localStorage.removeItem(\"fake_db\")\n}\n\nexport function saveFakeDB(db: any) {\n    localStorage.setItem(\"fake_db\", JSON.stringify(db))\n}\n","export interface Executor {\n    ok(data: {}): void\n\n    error(): void\n}\n\nexport class DefaultExecutor<R> implements Executor {\n    constructor(private resolve: (value: (PromiseLike<R> | R)) => void, private reject: (reason?: any) => void) {\n    }\n\n    ok(data: {}) {\n        console.log(\"FAKEBACKEND Resolving call with OK\", data)\n        this.resolve({\n            data: data,\n            status: 200,\n            statusText: \"OK\",\n            headers: {},\n            config: {},\n            request: {}\n        } as any)\n    }\n\n    error() {\n        console.log(\"FAKEBACKEND Resolving call with Error\")\n        this.reject({\n            response: {\n                data: {},\n                status: 400,\n                statusText: \"BAD REQUEST\",\n                headers: {},\n                config: {},\n                request: {}\n            }\n        })\n    }\n}\n\nexport class FaultyExecutor implements Executor {\n    constructor(private executor: Executor) {\n    }\n\n    ok(data: {}): void {\n        if (Math.random() > 0.3) this.executor.ok(data); else this.executor.error();\n    }\n\n    error() {\n        this.executor.error();\n    }\n}\n","import {Backend} from \"./Backend\";\nimport {AxiosRequestConfig, AxiosResponse} from \"axios\";\nimport {getFakeDB, resetFakeDB, saveFakeDB} from \"./FakeDB\";\nimport {DefaultExecutor, Executor, FaultyExecutor} from \"./Executor\";\nimport {v4 as uuidv4} from 'uuid';\nimport {ConsumerModel} from \"./Model\";\n\nfunction findInDict(dict: any, matcher: (value: any) => boolean): any {\n    for (let key in dict) {\n        if (matcher(dict[key])) {\n            return key;\n        }\n    }\n    return null;\n}\n\nconst delay = 30;\nfunction delayedPromise<T>(promise: Promise<T>): Promise<T> {\n    return promise\n        .then(value => new Promise<T>(resolve => setTimeout(() => resolve(value), delay)))\n        .catch(reason => new Promise<T>((resolve, reject) => setTimeout(() => reject(reason), delay)));\n}\n\nclass FakeBackend implements Backend {\n    delete<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND DELETE Fake backend call to ${url}`, config);\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n\n            const token = config.headers.Authorization;\n            const user = db.token[token];\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.includes('/consumer/')) {\n                const id = url.substring(url.lastIndexOf('/') + 1);\n                const index = db.consumer[user].findIndex((it: any) => it.consumerId.toString() === id.toString());\n                if (index < 0) return e.error();\n                db.consumer[user].splice(index, 1);\n\n                saveFakeDB(db);\n                return e.ok({});\n            }\n            return e.error();\n        });\n        return delayedPromise(promise);\n    }\n\n    get<T = any, R = AxiosResponse<T>>(url: string, config?: AxiosRequestConfig): Promise<R> {\n        const promise = new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND GET Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/request_pin')) {\n                const {shared_password, email} = config.params;\n                if (shared_password === 'test' && db.user[email] != null) {\n                    return e.ok({})\n                }\n                return e.error()\n            } else if (url.endsWith('/login')) {\n                const {email, password} = config.params;\n                const user = db.user[email]\n                if (user != null && password === \"123456\") {\n                    return e.ok({token: findInDict(db.token, (v: string) => v === email)})\n                }\n                return e.error()\n            }\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error();\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/logout')) {\n                resetFakeDB()\n                e.ok({})\n            } else if (url.endsWith('/user')) {\n                e.ok(db.user[user])\n            } else if (url.endsWith('/consumer')) {\n                e.ok(db.consumer[user])\n            } else if (url.endsWith('/processedconsumption')) {\n                e.ok(Object.keys(db.processedConsumption[user]))\n            } else if (url.includes('/processedconsumption/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.processedConsumption[user][index])\n            } else if (url.endsWith('/predictions')) {\n                e.ok(Object.keys(db.predictions[user]))\n            } else if (url.includes('/predictions/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.predictions[user][index] ?? [])\n            } else if (url.includes('/thermostat')) {\n                e.ok(db.thermostats[user])\n            } else if (url.includes('/mood/')) {\n                const index = url.substring(url.lastIndexOf('/') + 1)\n                e.ok(db.mood[user][index] ?? {x: 5, y: 5})\n            } else {\n                e.error()\n            }\n        });\n        return delayedPromise(promise);\n    }\n\n    post<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n\n            console.log(`FAKEBACKEND POST Fake backend call to ${url}`, config)\n            if (!config) return e.error();\n            const db = getFakeDB();\n\n            if (url.endsWith('/tracking')) {\n                console.log('FAKEBACKEND Tracking data:', data);\n                return e.ok({});\n            }\n\n            if (!config.headers) return e.error();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            if (url.endsWith('/consumer')) {\n                const {consumer_name} = config.params;\n                if (consumer_name == null) return e.error();\n                db.consumer[user].push({\n                    consumerId: uuidv4(),\n                    owner: '0',\n                    customName: consumer_name,\n                    type: 'misc',\n                    active: true\n                } as ConsumerModel);\n                saveFakeDB(db)\n                return e.ok({});\n            }\n\n            return e.error();\n        })\n    }\n\n    put<T = any, R = AxiosResponse<T>>(url: string, data?: any, config?: AxiosRequestConfig): Promise<R> {\n        return new Promise<R>((resolve, reject) => {\n            let e: Executor = new DefaultExecutor(resolve, reject);\n            console.log(`FAKEBACKEND PUT Fake backend call to ${url}`, 'config:', config, 'data:', data)\n            if (!config?.headers) return e.error();\n            const db = getFakeDB();\n            const token = config.headers.Authorization;\n            const user = db.token[token]\n            if (user == null) return e.error()\n            if (db.user[user].userId === \"faulty\") e = new FaultyExecutor(e);\n\n            const id = url.split('/').pop()\n            if (id == null) return e.error()\n\n            if (url.startsWith('/consumer')) {\n                const {consumer_name, consumer_active} = config.params;\n                meldArrayElement(db.consumer[user],\n                    (c: ConsumerModel) => c.consumerId.toString() === id.toString(),\n                    {customName: consumer_name, active: consumer_active}\n                )\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/predictions')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.predictions[user][date] = data['predictions'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/mood')) {\n                const date = url.substring(url.lastIndexOf('/') + 1)\n                db.mood[user][date] = data['mood'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            } else if (url.startsWith('/thermostat')) {\n                db.thermostats[user] = data['data'];\n                saveFakeDB(db);\n\n                return e.ok({})\n            }\n\n            e.error()\n        })\n    }\n}\n\nfunction meldArrayElement(array: any, elementMatcher: any, changes: any) {\n    const consumerIndex = array.findIndex(elementMatcher)\n    array[consumerIndex] = {...array[consumerIndex], ...changes}\n}\n\nexport default FakeBackend;\n","import axios from \"axios\";\nimport FakeBackend from \"./service/FakeBackend\";\nimport {Backend} from \"./service/Backend\";\n\nexport interface Config {\n    backend: Backend,\n    type: string,\n    apiDescription: string\n}\n\nconst dev = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'development',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst prod = {\n    backend: axios.create({baseURL: process.env.REACT_APP_API_BASE_URL}),\n    type: 'production',\n    apiDescription: process.env.REACT_APP_API_BASE_URL\n}\n\nconst local = {\n    backend: new FakeBackend(),\n    type: 'local',\n    apiDescription: 'fakeApi'\n}\n\nlet backendConfig;\nif (process.env.REACT_APP_STAGE === 'production') {\n    backendConfig = prod;\n} else if (process.env.REACT_APP_STAGE === 'local') {\n    backendConfig = local;\n} else {\n    backendConfig = dev;\n}\n\nconst config = {\n    ...backendConfig\n}\nexport default config;\n","import React, {useCallback, useState} from \"react\";\nimport {Button, DialogActions, DialogContent, DialogContentText} from \"@mui/material\";\nimport {ResponsiveDialog} from \"./ResponsiveDialog\";\n\nexport function useInfoDialog(): readonly [{ open: boolean, onClose: () => void }, () => void] {\n    const [state, setState] = useState(false);\n    return [{open: state, onClose: () => setState(false)}, useCallback(() => setState(true), [])]\n}\n\nexport function Lorem() {\n    return <>\n        <DialogContentText>\n            Lorem ipsum dolor sit amet, consectetur adipiscing elit. Donec interdum orci nibh, ac porttitor\n            metus lacinia sit amet. Vivamus mollis porttitor mauris sed placerat. Duis porttitor gravida\n            justo, ut facilisis sapien. Nunc ultricies porta lectus, sit amet sollicitudin elit pulvinar ut.\n            Donec quis porta ex. Aenean vehicula tortor eu enim semper rhoncus. Sed scelerisque tempor\n            placerat. Suspendisse euismod turpis ante, a facilisis tellus scelerisque quis. Morbi vel leo\n            nec enim iaculis faucibus eu eu enim. Donec semper purus urna, vel iaculis eros placerat in.\n        </DialogContentText>\n        <DialogContentText>\n            Sed eu erat finibus, ultrices magna vitae, scelerisque libero. Aliquam vel massa pretium,\n            feugiat justo nec, accumsan ligula. Ut eget lacinia libero, vel placerat ipsum. Phasellus\n            fringilla consequat metus, at ultricies lectus posuere in. Integer ut arcu id mauris maximus\n            iaculis. Nullam lacinia, justo sed porta dapibus, purus dolor faucibus dolor, eget viverra nunc\n            turpis at lectus. Aenean et lobortis mauris, a porttitor mi. Quisque sit amet dictum risus.\n            Aenean vel tortor vel justo vestibulum consequat et dictum nunc. Pellentesque mattis urna\n            consectetur mauris dapibus, quis maximus lorem porta. Cras sagittis lacus ut suscipit\n            ullamcorper. Sed ultrices velit a venenatis elementum. Curabitur tincidunt lorem non dignissim\n            bibendum.\n        </DialogContentText>\n    </>\n}\n\ninterface Props {\n    title: string\n    content: JSX.Element\n    open: boolean\n    onClose: () => void\n}\n\nexport function InfoDialog(props: Props) {\n    return (\n        <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n            <DialogContent>{props.content}</DialogContent>\n            <DialogActions>\n                <Button onClick={props.onClose}>OK</Button>\n            </DialogActions>\n        </ResponsiveDialog>\n    )\n}\n","import {InfoOutlined, LanguageOutlined} from \"@mui/icons-material\";\nimport {\n    Avatar,\n    Box,\n    Container,\n    DialogContentText,\n    Fab,\n    Grid,\n    IconButton,\n    InputAdornment,\n    List,\n    ListItemButton,\n    ListItemText,\n    TextField,\n    Typography\n} from \"@mui/material\";\nimport {styled} from \"@mui/system\";\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {useHistory} from 'react-router-dom';\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\n\ninterface Props {\n    backendService: BackendService\n}\n\ninterface State {\n    shared_password: string;\n    email: string;\n}\n\nconst StyledGrid = styled(Grid)({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    alignItems: 'center',\n})\n\nfunction ChangeLanguageDialog(props: {\n    open: boolean\n    onClose: () => void\n}) {\n    const {t, i18n} = useTranslation();\n    const changeLanguage = React.useCallback((language: string) =>\n            i18n.changeLanguage(language)\n                .catch(console.log)\n                .finally(() => props.onClose())\n        , [i18n, props])\n    return <ResponsiveDialog title={t('change_language')} {...props}>\n        <List sx={{pt: 0}}>\n            <ListItemButton onClick={() => changeLanguage('en')}>\n                <ListItemText primary={t('lang_english')}/>\n            </ListItemButton>\n            <ListItemButton onClick={() => changeLanguage('de')}>\n                <ListItemText primary={t('lang_german')}/>\n            </ListItemButton>\n        </List>\n    </ResponsiveDialog>\n}\n\nfunction Login(props: Props) {\n    const [state, setState] = useState<State>({shared_password: '', email: ''});\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const history = useHistory();\n    const {backendService} = props;\n    const [langDialogProps, openLangDialog] = useInfoDialog();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [progress, setProgress] = useState(false);\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.requestPin(state.shared_password, state.email)\n            .then(() => history.push('/verify', {email: state.email}))\n            .catch(setError)\n            .finally(() => setProgress(false))\n    }, [backendService, history, setError, state.email, state.shared_password]);\n\n    const InfoContent = () => {\n        const infoText = t('info_personal_code', {returnObjects: true}) as string[];\n        return <>{infoText.map(text => <DialogContentText children={text}/>)}</>\n    }\n\n    return (\n        (<>\n            <Container maxWidth=\"lg\">\n                <Box sx={{display: 'flex', alignItems: 'center', height: '100vh'}}>\n                    <Grid container spacing={2}>\n                        <StyledGrid item xs={12} md>\n                            <Typography paragraph component=\"h1\" variant=\"h2\">ANSERS</Typography>\n                            <Typography component=\"h2\" variant=\"h5\">{t('login_welcome')}</Typography>\n                        </StyledGrid>\n                        <StyledGrid item xs={12} md>\n                            <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                            <Typography component=\"h1\" variant=\"h5\">{t('login_sign_in')}</Typography>\n                            <form onSubmit={handleSubmit}>\n                                <TextField\n                                    autoFocus\n                                    autoComplete=\"email\"\n                                    disabled={progress}\n                                    id=\"email\"\n                                    label={t('login_email_address')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.email}\n                                    onChange={(e) => setState({...state, email: e.target.value})}\n                                    required\n                                    fullWidth\n                                />\n                                <TextField\n                                    id=\"shared_password\"\n                                    disabled={progress}\n                                    label={t('login_shared_password')}\n                                    variant=\"outlined\"\n                                    margin=\"normal\"\n                                    value={state.shared_password}\n                                    onChange={(e) => setState({...state, shared_password: e.target.value})}\n                                    required\n                                    fullWidth\n                                    InputProps={{\n                                        endAdornment: (\n                                            <InputAdornment position=\"end\">\n                                                <IconButton onClick={openInfo}>\n                                                    <InfoOutlined color=\"inherit\"/>\n                                                </IconButton>\n                                            </InputAdornment>),\n                                    }}\n                                />\n                                <LoadingButton\n                                    type=\"submit\"\n                                    fullWidth\n                                    variant=\"contained\"\n                                    color=\"primary\"\n                                    sx={{marginTop: 1}}\n                                    loading={progress}\n                                >\n                                    {t('login_submit')}\n                                </LoadingButton>\n                            </form>\n                        </StyledGrid>\n                    </Grid>\n                </Box>\n            </Container>\n            <Fab title={t('change_language')}\n                 color=\"primary\"\n                 size=\"medium\"\n                 onClick={openLangDialog}\n                 children={<LanguageOutlined/>}/>\n            <ChangeLanguageDialog {...langDialogProps}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </>)\n    );\n}\n\nexport default Login;\n","import {Avatar, Container, TextField, Typography} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useCallback, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Redirect, useHistory, useLocation} from \"react-router-dom\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {LoadingButton} from \"@mui/lab\";\n\nconst Form = styled('form')({\n    width: '100%',\n    marginTop: 1\n});\n\ninterface Props {\n    backendService: BackendService\n}\n\nconst StyledContainer = styled('div')({\n    margin: 2,\n    padding: 8,\n    display: 'flex',\n    flexDirection: 'column',\n    justifyContent: 'center',\n    alignItems: 'center',\n    height: '100vh'\n})\n\nfunction Verify(props: Props) {\n    const [password, setPassword] = useState<string>('')\n    const [error, setError] = useSnackBar()\n    const {t} = useTranslation();\n    const location = useLocation<{ email: string }>();\n    const history = useHistory();\n    const [progress, setProgress] = useState(false);\n    const {email} = location.state;\n    const {backendService} = props;\n\n    const handleSubmit = useCallback((e: React.FormEvent) => {\n        e.preventDefault();\n        setProgress(true);\n        backendService.login(email, password)\n            .then(() => history.push('/'), setError)\n            .catch(console.log)\n            .finally(() => setProgress(false))\n    }, [backendService, email, history, password, setError]);\n\n    const handleChange = useCallback(e => setPassword(e.target.value), []);\n\n    if (!email) return <Redirect to={'/'}/>\n    return (\n        (<>\n            <Container component=\"main\" maxWidth=\"sm\">\n                <StyledContainer>\n                    <Avatar sx={{margin: '1px', backgroundColor: 'secondary.main'}}/>\n                    <Typography component=\"h1\" variant=\"h5\">{t('verify_title')}</Typography>\n                    <Form onSubmit={handleSubmit}>\n                        <TextField\n                            disabled={progress}\n                            autoFocus\n                            id=\"otp\"\n                            label=\"Pin\"\n                            variant=\"outlined\"\n                            margin=\"normal\"\n                            value={password}\n                            onChange={handleChange}\n                            required\n                            fullWidth/>\n                        <LoadingButton\n                            loading={progress}\n                            type=\"submit\"\n                            fullWidth\n                            variant=\"contained\"\n                            color=\"primary\"\n                            sx={{marginTop: 1}}\n                        >{t('verify_login')}</LoadingButton>\n                    </Form>\n                </StyledContainer>\n            </Container>\n            <AlertSnackbar {...error}/>\n        </>)\n    );\n}\n\nexport default Verify;\n","import {Options, TrackingHook, useTracking} from \"react-tracking\";\nimport {useContext} from \"react\";\nimport {UserContext} from \"../App\";\n\nexport default function useDefaultTracking<P = {}>(trackingData?: any, options?: Partial<Options<P>>): TrackingHook<P> {\n    const user = useContext(UserContext);\n    const extendData = (data: Partial<P>) => ({...data, date: +new Date(), user: user?.userId ?? \"unknown\"});\n    const extendOptions = (options?: Partial<Options<P>>) => ({...options, dispatchOnMount: true});\n    const {Track, trackEvent, getTrackingData} = useTracking<P>(extendData(trackingData), extendOptions(options));\n    return {Track: Track, trackEvent: (data) => trackEvent(extendData(data)), getTrackingData: getTrackingData};\n}\n","import {useEffect} from 'react';\nimport {useHistory} from 'react-router-dom';\nimport BackendService from \"./service/BackendService\";\nimport {LinearProgress} from \"@mui/material\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nfunction Logout(props: { backendService: BackendService }) {\n    const {Track} = useDefaultTracking({page: 'Logout'});\n    const {push} = useHistory();\n    const {backendService} = props;\n\n    useEffect(() => {\n        backendService\n            .logout()\n            .catch(console.log)\n            .then(() => push(\"/login\"))\n    }, [backendService, push]);\n\n    return <Track><LinearProgress/></Track>;\n}\n\nexport default Logout;\n","import {Badge, Button, IconButton, Tooltip, useMediaQuery, useTheme} from \"@mui/material\";\nimport React from \"react\";\n\ninterface Props {\n    description: string\n    icon: JSX.Element\n    onClick?: () => void\n    requiresAttention?: boolean\n}\n\nfunction AttentionIcon(props: { requiresAttention?: boolean, icon: JSX.Element }) {\n    return <Badge invisible={!props.requiresAttention} variant=\"dot\" color=\"info\">{props.icon}</Badge>\n}\n\nfunction SmallIconButton(props: Props) {\n    return (\n        <Tooltip title={props.description}>\n            <IconButton\n                color=\"inherit\"\n                onClick={props.onClick}\n                size=\"large\"\n                children={<AttentionIcon {...props}/>}\n            />\n        </Tooltip>\n    )\n}\n\nfunction LargeIconButton(props: Props) {\n    return (\n        <Button startIcon={<AttentionIcon {...props}/>}\n                color=\"inherit\"\n                onClick={props.onClick}\n                children={props.description}\n        />\n    )\n}\n\nexport function ResponsiveIconButton(props: Props) {\n    const theme = useTheme();\n    const breakpoint = useMediaQuery(theme.breakpoints.down('sm'));\n    if (breakpoint) return <SmallIconButton {...props}/>\n    return <LargeIconButton {...props}/>\n}\n","import {ElectricalServicesOutlined} from \"@mui/icons-material\";\nimport CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Button,\n    Container,\n    DialogContentText,\n    Divider,\n    Grid,\n    List,\n    ListItemAvatar,\n    ListItemButton,\n    ListItemText,\n    Paper,\n    Typography\n} from \"@mui/material\";\nimport {styled} from '@mui/system';\nimport React, {useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\n\n\nconst Input = styled('input')({\n    display: 'none',\n});\n\nconst operators = [\n    {name: 'Energienetze Steiermark', link: 'https://portal.e-netze.at/'},\n    {name: 'Kelag', link: 'https://services.kelag.at/ISS/Services.aspx'},\n    {name: 'Stromnetz Graz', link: 'https://webportal.stromnetz-graz.at/'},\n]\n\nconst providers = [\n    {name: 'Energie Graz', link: 'https://portal.energie-graz.at/'},\n    {name: 'Energie Steiermark', link: 'https://portal.energie-graz.at/'},\n    {name: 'Verbund', link: 'https://www.verbund.at/login'},\n]\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Upload(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Upload'});\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n    const [infoProps, openInfo] = useInfoDialog();\n\n    const onUpload = (file: File) => {\n        backendService.postConsumption(file)\n            .then(() => {\n                console.log(\"File uploaded.\")\n                setSuccess(\"File uploaded\");\n            }, setError)\n            .catch(console.log);\n    }\n\n    useEffect(() => setAppBar({\n        title: t('card_upload_title'),\n        showBackButton: false,\n        children: () => <>\n            <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n        </>\n    }), [t, setAppBar, openInfo])\n\n    const infoText = t('info_upload', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    return (\n        <Track>\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Grid container spacing={3}>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_download')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_download')}</Typography>\n                        <Paper>\n                            <List>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Network operators</Typography>\n                                </li>\n                                {operators.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n                                <Divider component=\"li\"/>\n                                <li>\n                                    <Typography\n                                        sx={{mt: 0.5, ml: 2}}\n                                        color=\"text.secondary\"\n                                        display=\"block\"\n                                        variant=\"caption\">Energy providers</Typography>\n                                </li>\n                                {providers.map(item =>\n                                    <ListItemButton key={item.name} component=\"a\" href={item.link} target=\"_blank\">\n                                        <ListItemAvatar><ElectricalServicesOutlined/></ListItemAvatar>\n                                        <ListItemText primary={item.name}/>\n                                    </ListItemButton>)\n                                }\n\n                            </List>\n                        </Paper>\n                    </Grid>\n                    <Grid item xs={12} sm={6}>\n                        <Typography variant=\"h5\" gutterBottom>{t('upload_title_upload')}</Typography>\n                        <Typography color=\"text.secondary\" paragraph>{t('upload_instruction_upload')}</Typography>\n                        <label htmlFor=\"contained-button-file\">\n                            <Input\n                                accept=\".csv, application/vnd.openxmlformats-officedocument.spreadsheetml.sheet, application/vnd.ms-excel\"\n                                id=\"contained-button-file\"\n                                type=\"file\"\n                                onChange={(e) => e.target?.files && onUpload(e.target.files[0])}\n                            />\n                            <Button variant=\"contained\"\n                                    size=\"large\"\n                                    color=\"primary\"\n                                    fullWidth\n                                    component=\"span\"\n                                    startIcon={<CloudUploadOutlined/>}\n                            >{t('action_upload')}</Button>\n                        </label>\n                    </Grid>\n                </Grid>\n            </Container>\n            <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n            <AlertSnackbar severity=\"success\" {...success} />\n            <AlertSnackbar {...error} />\n        </Track>\n    );\n}\n\nexport default Upload;\n","import {\n    Container,\n    DialogContentText,\n    Divider,\n    LinearProgress,\n    List,\n    ListItem,\n    ListItemIcon,\n    ListItemText,\n    Paper,\n    ToggleButton,\n    ToggleButtonGroup,\n    Typography\n} from \"@mui/material\";\nimport i18next from \"i18next\";\nimport React, {useContext, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {Link as RouterLink, useHistory} from \"react-router-dom\";\nimport {AppBarProps, ColorMode, ColorModeContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\nimport {\n    ArrowRight,\n    Brightness4Outlined,\n    Email,\n    ExitToApp,\n    InfoOutlined,\n    Language,\n    MyLocation,\n    Power\n} from \"@mui/icons-material\";\n\nfunction UserInfo(props: { user: UserModel }) {\n    const {user} = props;\n    const items = [\n        {icon: <Email/>, text: user.email},\n        {icon: <MyLocation/>, text: user.location},\n    ]\n    return <>{items.map((it, idx) =>\n        <ListItem key={'element_' + idx}>\n            <ListItemIcon>{it.icon}</ListItemIcon>\n            <ListItemText>{it.text}</ListItemText>\n        </ListItem>\n    )}</>\n}\n\nfunction ConsumersInfo(props: {}) {\n    const {t} = useTranslation();\n    return <ListItem key={'element_consumers'} button component={RouterLink} to={\"/consumers\"}>\n        <ListItemIcon><Power/></ListItemIcon>\n        <ListItemText>{t('user_consumer')}</ListItemText>\n        <ListItemIcon><ArrowRight/></ListItemIcon>\n    </ListItem>\n}\n\nfunction LanguageInfo(props: { setError: (description: string) => void }) {\n    const {t} = useTranslation();\n    const [language, setLanguage] = useState<string>(i18next.resolvedLanguage);\n    const {setError} = props;\n\n    const changeLanguage = React.useCallback((language: string) =>\n            language && i18next.changeLanguage(language)\n                .then(() => setLanguage(language), setError)\n                .catch(console.log),\n        [setError])\n    return <>\n        <ListItem key=\"element_language2\">\n            <ListItemIcon><Language/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={language}\n                exclusive\n                onChange={((event, value) => changeLanguage(value))}\n            >\n                <ToggleButton value=\"en\">{t('lang_english')}</ToggleButton>\n                <ToggleButton value=\"de\">{t('lang_german')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    </>\n}\n\nfunction ColorModeInfo(props: {}) {\n    const colorMode = useContext(ColorModeContext);\n    const colorModeValue = colorMode.mode ?? 'auto';\n    const {t} = useTranslation();\n    const setColorMode = (event: any, value: string | null): void => {\n        value && colorMode.toggleColorMode((value !== 'auto' ? value : undefined) as ColorMode)\n    }\n\n    return (\n        <ListItem key=\"element_color_mode\">\n            <ListItemIcon><Brightness4Outlined/></ListItemIcon>\n            <ToggleButtonGroup\n                fullWidth\n                color=\"primary\"\n                value={colorModeValue}\n                exclusive\n                onChange={setColorMode}\n            >\n                <ToggleButton value=\"auto\">Auto</ToggleButton>\n                <ToggleButton value=\"light\">{t('color_mode_light')}</ToggleButton>\n                <ToggleButton value=\"dark\">{t('color_mode_dark')}</ToggleButton>\n            </ToggleButtonGroup>\n        </ListItem>\n    )\n}\n\ninterface Props {\n    backendService: BackendService\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction User(props: Props) {\n    const {Track} = useDefaultTracking({page: 'User'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [user, setUser] = useState<UserModel>()\n    const [error, setError] = useSnackBar();\n    const history = useHistory();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getUser()\n            .then(setUser, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_user_title'),\n            showBackButton: false,\n            children: () =>\n                <>\n                    <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                    <ResponsiveIconButton\n                        icon={<ExitToApp/>}\n                        onClick={() => history.push('/logout')}\n                        description={t('logout')}\n                    />\n                </>\n        })\n    }, [history, openInfo, t, setAppBar])\n\n    return (\n        <Track>\n            {user &&\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1}}>\n                <Paper variant=\"outlined\" square>\n                    <List>\n                        <UserInfo user={user}/>\n                        <Divider variant=\"inset\" component=\"li\"/>\n                        {user.type !== \"management\" && <ConsumersInfo/>}\n                        <LanguageInfo setError={setError}/>\n                        <ColorModeInfo/>\n                    </List>\n                </Paper>\n                {process.env.REACT_APP_BUILD_SHA && <Typography>{process.env.REACT_APP_BUILD_SHA}</Typography>}\n            </Container>\n            }\n            {!user && <LinearProgress/>}\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_settings')}/>} {...infoProps}/>\n            <AlertSnackbar {...error}/>\n        </Track>\n    )\n}\n\nexport default User;\n","import {useMemo} from \"react\";\nimport {parse} from \"date-fns\";\n\nexport const useParsedDate = (date: string) => useMemo(() => parse(date, 'yyyy-MM-dd', new Date()), [date]);\n","import {ChartOptions} from \"chart.js\";\nimport React, {useEffect, useState} from \"react\";\nimport {Line} from \"react-chartjs-2\";\nimport BackendService from \"../service/BackendService\";\nimport {Card, CardContent, CardHeader} from \"@mui/material\";\nimport {useTranslation} from \"react-i18next\";\nimport {useParsedDate} from \"../common/Date\";\n\ninterface Props {\n    backendService: BackendService;\n    date: string;\n}\n\nconst options: ChartOptions = {\n    animation: false\n};\n\nexport function PowerEntry(props: Props) {\n    const {backendService, date} = props;\n    const dateParsed = useParsedDate(date);\n    const {t} = useTranslation();\n    const [data, setData] = useState<any>();\n    useEffect(() => {\n        backendService.getProcessedConsumption(date)\n            .then((consumptions) => {\n                setData({\n                    labels: Array.from(Array(24).keys()),\n                    datasets: consumptions.map((c) => ({\n                            label: c.type,\n                            data: c.data,\n                            fill: false,\n                            backgroundColor: (c.type === 'actual') ? 'rgb(255, 99, 132)' : 'green',\n                            borderColor: 'rgba(255, 99, 132, 0.2)',\n                        })\n                    )\n                })\n            })\n            .catch(console.log)\n    }, [backendService, date]);\n\n    return (\n        <Card variant=\"outlined\" key={date}>\n            <CardHeader title={t('archive_entry_date', {date: dateParsed})}/>\n            <CardContent>\n                <Line data={data} options={options}/>\n            </CardContent>\n        </Card>\n    )\n}","import {Container, Stack} from \"@mui/material\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {PowerEntry} from \"./power/PowerEntry\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Power(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const [dates, setDates] = useState<string[]>();\n    const {backendService, setAppBar} = props;\n    const {t} = useTranslation();\n\n    useEffect(() => {\n        backendService.getProcessedConsumptions()\n            .then(setDates)\n            .catch(console.log);\n    }, [backendService])\n\n    useEffect(() => setAppBar({\n        title: t('card_power_title'),\n        showBackButton: true,\n        children: () => <></>\n    }), [t, setAppBar])\n\n    return (\n        <Track>\n            {dates &&\n            <Container maxWidth=\"md\" sx={{paddingTop: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date) => <PowerEntry date={date} backendService={backendService}/>)}\n                </Stack>\n            </Container>\n            }\n        </Track>\n    );\n}\n\nexport default (Power);\n","import {Box, Card, CardActionArea, CardContent, CardMedia, SvgIcon, Typography} from \"@mui/material\";\nimport React from \"react\";\nimport {Link as RouterLink} from \"react-router-dom\";\n\nexport interface DestinationCardProps {\n    to: string\n    icon: any\n    title: string\n    subtitle: string\n    done?: boolean\n}\n\nexport function DestinationCard(props: DestinationCardProps) {\n    const {to, icon, title, subtitle, done} = props;\n    return (\n        <Card sx={{borderColor: done ? undefined : \"warning.main\"}}>\n            <CardActionArea component={RouterLink} to={to}>\n                <Box display=\"flex\">\n                    <CardMedia sx={{\n                        backgroundColor: done ? \"secondary.main\" : \"warning.main\",\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        padding: \"8px\"\n                    }}>\n                        <SvgIcon component={icon} sx={{color: 'background.paper'}}/>\n                    </CardMedia>\n                    <CardContent>\n                        <Typography variant=\"h6\">{title}</Typography>\n                        <Typography color=\"textSecondary\" noWrap>{subtitle}</Typography>\n                    </CardContent>\n                </Box>\n            </CardActionArea>\n        </Card>\n    )\n}\n","import {CheckCircleOutlined, InfoOutlined, RadioButtonUncheckedOutlined} from \"@mui/icons-material\";\nimport {Container, DialogContentText, LinearProgress, Stack} from \"@mui/material\";\nimport {parse} from \"date-fns\";\nimport React, {useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {DestinationCard} from \"./common/DestinationCard\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Archive(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Archive'});\n    const [infoProps, openInfo] = useInfoDialog();\n    const [dates, setDates] = useState<string[]>();\n    const {t} = useTranslation();\n    const [error, setError] = useSnackBar();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getPredictions()\n            .then(setDates, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_archive_title'),\n            showBackButton: true,\n            children: () => <ResponsiveIconButton\n                description={t('info')}\n                icon={<InfoOutlined/>}\n                onClick={openInfo}\n            />\n        });\n    }, [t, setAppBar, openInfo])\n\n    if (!dates) return <LinearProgress/>\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{pt: 1}}>\n                <Stack spacing={1}>\n                    {dates.map((date, index) => {\n                            const parsedDate = parse(date, 'yyyy-MM-dd', new Date())\n                            return <DestinationCard\n                                to={`/pastbehavior?date=${date}`}\n                                icon={index ? CheckCircleOutlined : RadioButtonUncheckedOutlined}\n                                title={t('archive_entry_date', {date: parsedDate})}\n                                subtitle={index ? 'Bereits erledigt' : 'Bitte überpüfen'}\n                                done={!!index}\n                            />\n                        }\n                    )}\n                </Stack>\n            </Container>\n            <InfoDialog title={t('info')} content={<DialogContentText children={t('info_archive')}/>} {...infoProps}/>\n            <AlertSnackbar {...error} />\n        </Track>\n    )\n}\n\nexport default Archive;\n","import AcUnit from \"@mui/icons-material/AcUnit\";\nimport Bathtub from \"@mui/icons-material/Bathtub\";\nimport Computer from \"@mui/icons-material/Computer\";\nimport FreeBreakfast from \"@mui/icons-material/FreeBreakfast\";\nimport Help from \"@mui/icons-material/Help\";\nimport LocalLaundryService from \"@mui/icons-material/LocalLaundryService\";\nimport Movie from \"@mui/icons-material/Movie\";\nimport Power from \"@mui/icons-material/Power\";\nimport Restaurant from \"@mui/icons-material/Restaurant\";\nimport Spa from \"@mui/icons-material/Spa\";\nimport {amber, blue, green, pink, purple, red, teal} from \"@mui/material/colors\";\nimport i18next from \"i18next\";\nimport {TranslatedString} from \"../service/Model\";\n\nexport function translate(str: TranslatedString | undefined, override: string | undefined): string {\n    if (override && override !== '') return override;\n    if (!str) return ''\n\n    const lang = i18next.language\n    if (lang === 'de') return str.de;\n    return str.en;\n}\n\nconst shadeDefault = 500;\nconst shadeAlt = 400;\n\nconst consumers: any = {\n    laundry: {icon: <LocalLaundryService/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    cooking: {icon: <Restaurant/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    dishes: {icon: <FreeBreakfast/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]},\n    hygiene: {icon: <Bathtub/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    entertainment: {icon: <Movie/>, color: teal[shadeDefault], colorAlt: teal[shadeAlt]},\n    wellness: {icon: <Spa/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    homeoffice: {icon: <Computer/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    emobility: {icon: <Power/>, color: blue[shadeDefault], colorAlt: blue[shadeAlt]},\n    temperature: {icon: <AcUnit/>, color: pink[shadeDefault], colorAlt: pink[shadeAlt]},\n    high: {icon: <Help/>, color: red[shadeDefault], colorAlt: red[shadeAlt]},\n    med: {icon: <Help/>, color: amber[shadeDefault], colorAlt: amber[shadeAlt]},\n    low: {icon: <Help/>, color: green[shadeDefault], colorAlt: green[shadeAlt]},\n    unknown: {icon: <Help/>, color: purple[shadeDefault], colorAlt: purple[shadeAlt]}\n}\n\nexport const consumerLookup = (type: string) => type in consumers ? consumers[type] : consumers.unknown\n\nexport function backgroundColor(type: string) {\n    return type in consumers ? consumers[type].color : \"#0ff\";\n}\n\nexport function iconLookup(type: string): JSX.Element {\n    return type in consumers ? consumers[type].icon : <Help/>\n}\n","import Delete from \"@mui/icons-material/Delete\";\nimport Visibility from \"@mui/icons-material/Visibility\";\nimport VisibilityOff from \"@mui/icons-material/VisibilityOff\";\nimport {\n    Avatar,\n    IconButton,\n    ListItem,\n    ListItemAvatar,\n    ListItemSecondaryAction,\n    ListItemText,\n    Tooltip\n} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {consumerLookup, translate} from \"../common/ConsumerTools\";\nimport {ConsumerModel} from \"../service/Model\";\n\ninterface Props {\n    consumer: ConsumerModel,\n    clickEdit?: (consumer: ConsumerModel) => void,\n    clickActive?: (consumer: ConsumerModel) => void,\n    clickDelete?: (consumer: ConsumerModel) => void\n}\n\nexport const compareProps = (a: Props, b: Props) => compareConsumers(a.consumer, b.consumer)\nexport const compareConsumers = (a: ConsumerModel, b: ConsumerModel) =>\n    a.type === b.type &&\n    a.consumerId === b.consumerId &&\n    a.active === b.active\n\nconst ConsumerCard = React.memo((props: Props) => {\n    const {t} = useTranslation();\n    const {consumer, clickEdit, clickActive, clickDelete} = props;\n    const button = !!clickEdit;\n    const showButtonTooltip = consumer.active ? t(\"hide_consumer\") : t(\"show_consumer\");\n    const consumerName = translate(consumer.name, consumer.customName);\n    const consumerType = consumerLookup(consumer.type);\n    return (\n        <ListItem key={consumer.consumerId}\n                  role={undefined}\n                  button={button as false | undefined}\n                  onClick={() => clickEdit && clickEdit(consumer)}>\n            <ListItemAvatar>\n                <Avatar sx={{backgroundColor: consumerType.color}} children={consumerType.icon}/>\n            </ListItemAvatar>\n            <ListItemText primary={consumerName}/>\n            <ListItemSecondaryAction>\n                {clickActive &&\n                <Tooltip title={showButtonTooltip}>\n                    <IconButton\n                        edge=\"end\"\n                        arial-label={showButtonTooltip}\n                        onClick={() => clickActive(consumer)}\n                        size=\"large\">\n                        {consumer.active ? <Visibility/> : <VisibilityOff/>}\n                    </IconButton>\n                </Tooltip>\n                }\n                {clickDelete &&\n                <IconButton\n                    edge=\"end\"\n                    arial-label=\"delete\"\n                    onClick={() => clickDelete(consumer)}\n                    size=\"large\">\n                    <Delete/>\n                </IconButton>\n                }\n            </ListItemSecondaryAction>\n        </ListItem>\n    );\n}, compareProps)\n\nexport default ConsumerCard;\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {Container, DialogContentText, LinearProgress, List, Paper} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport ConsumerCard from \"./consumers/ConsumerCard\";\nimport {ConsumerModel} from \"./service/Model\";\n\ninterface Props extends PrivateRouteProps {\n}\n\nfunction Consumers(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Consumers'});\n    const [consumers, setConsumers] = useState<ConsumerModel[]>();\n    const [error, setError] = useSnackBar();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {t} = useTranslation();\n    const {backendService, setAppBar} = props;\n\n    useEffect(() => {\n        backendService.getConsumers()\n            .then(setConsumers, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const applyChangeActive = useCallback((consumer: ConsumerModel) => {\n        return backendService.putConsumer({...consumer, active: !consumer.active})\n            .then(() => backendService.getConsumers())\n            .then(setConsumers, setError)\n            .catch(console.log);\n    }, [backendService, setError])\n\n    useEffect(() => setAppBar({\n        title: t('edit_consumers'),\n        showBackButton: true,\n        children: () => <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n    }), [t, setAppBar, openInfo])\n\n    const content = () => {\n        const infoText = t('info_consumers', {returnObjects: true}) as string[]\n        const consumerHelp = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {consumerHelp.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    if (!consumers) return <LinearProgress/>;\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 1, paddingBottom: 10}}>\n                <Paper variant=\"outlined\">\n                    <List>\n                        {consumers && consumers.map((it) =>\n                            <ConsumerCard\n                                key={it.consumerId}\n                                consumer={it}\n                                clickActive={applyChangeActive}\n                            />\n                        )}\n                    </List>\n                </Paper>\n            </Container>\n            <AlertSnackbar {...error}/>\n            <InfoDialog title={t('info')} content={content()} {...infoProps}/>\n        </Track>\n    );\n}\n\nexport default Consumers;\n","import {TableCell, useMediaQuery} from \"@mui/material\";\nimport React, {useContext, useEffect, useRef} from \"react\";\nimport {ColorModeContext} from \"../App\";\n\ninterface CellProps {\n    beingSelected: boolean\n    selected: 0 | 1 | 2 | 3 | 4\n    onTouchStart: any\n    onTouchMove: any\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\nconst useDarkMode = () => {\n    const colorContext = useContext(ColorModeContext);\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    if (!colorContext.mode) return prefersDarkMode;\n    return colorContext.mode === \"dark\";\n}\n\nconst compareCellProps = (a: CellProps, b: CellProps) => a.selected === b.selected && a.beingSelected === b.beingSelected;\nexport const Cell = React.memo(function (props: CellProps) {\n    const {beingSelected, selected, onTouchStart, onTouchMove, colorSelected, colorBeingSelected} = props;\n    const tdRef = useRef<HTMLElement>();\n    const borderColor = useDarkMode() ? 'grey.800' : 'grey.400';\n\n    useEffect(() => {\n        const td = tdRef.current;\n        if (!td) return;\n        td.addEventListener(\"touchstart\", onTouchStart, {passive: false});\n        td.addEventListener(\"touchmove\", onTouchMove, {passive: false});\n        return function cleanup() {\n            td.removeEventListener(\"touchstart\", onTouchStart);\n            td.removeEventListener(\"touchmove\", onTouchMove);\n        }\n    }, [onTouchMove, onTouchStart, tdRef]);\n\n    if (beingSelected) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorBeingSelected ?? \"primary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 0) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    if (selected === 4) {\n        return <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundColor: colorSelected ?? \"secondary.main\"\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    }\n    const degrees = 100 - 25 * selected;\n    return (\n        <TableCell\n            ref={tdRef}\n            sx={{\n                border: 1,\n                borderColor: borderColor,\n                backgroundImage: `linear-gradient(transparent ${degrees}%, ${colorSelected ?? '#9ccc65'} ${degrees}%);`,\n            }}\n            onMouseDown={onTouchStart}\n            onMouseMove={onTouchMove}\n        />\n    );\n}, compareCellProps);\n","export function eventToCellLocation(e: any): { row: number, column: number } {\n    let target;\n    // For touchmove and touchend events, e.target and e.touches[n].target are\n    // wrong, so we have to rely on elementFromPoint(). For mouse clicks, we have\n    // to use e.target.\n    if (e.touches) {\n        const touch = e.touches[0];\n        target = document.elementFromPoint(touch.clientX, touch.clientY);\n    } else {\n        target = e.target;\n        while (target.tagName !== \"TD\") target = target.parentNode;\n    }\n    return {\n        row: target?.parentNode?.rowIndex - 2,\n        column: target?.cellIndex - 1\n    };\n}\n\nexport const minMax = (a: number, b: number) => [Math.min(a, b), Math.max(a, b)];\nexport const isValidEvent = (e: any) => e.button === 0 || e.type !== \"mousedown\";\n","/*  Adapted from https://github.com/mcjohnalds/react-table-drag-select */\n\nimport React from \"react\";\nimport {TableCell, TableRow} from \"@mui/material\";\nimport {Cell} from \"./Cell\";\nimport {eventToCellLocation, isValidEvent, minMax} from \"./helpers\";\n\nexport type CellState = 0 | 1 | 2 | 3 | 4;\n\nexport interface Row {\n    header: JSX.Element\n    cellStates: CellState[]\n    colorSelected?: string\n    colorBeingSelected?: string\n}\n\ninterface Props {\n    onChange: (value: CellState[][]) => void\n    rows: Row[]\n}\n\ninterface State {\n    selectionStarted: boolean\n    startRow: number\n    startColumn: number\n    endRow: number\n    endColumn: number\n    addMode: boolean\n}\n\nclass BehaviorDragSelect extends React.Component<Props, State> {\n    constructor(props: Props) {\n        super(props);\n        this.state = {\n            selectionStarted: false,\n            startRow: 0,\n            startColumn: 0,\n            endRow: 0,\n            endColumn: 0,\n            addMode: false\n        }\n    }\n\n    componentDidMount() {\n        window.addEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.addEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    componentWillUnmount() {\n        window.removeEventListener(\"mouseup\", this.handleTouchEndWindow);\n        window.removeEventListener(\"touchend\", this.handleTouchEndWindow);\n    }\n\n    render() {\n        const {rows} = this.props;\n        return <>\n            {rows.map((row, i) =>\n                <TableRow>\n                    <TableCell children={row.header} sx={{\n                        position: \"sticky\",\n                        left: 0,\n                        backgroundColor: \"background.paper\",\n                        border: 0,\n                    }}/>\n                    {row.cellStates.map((selected, j) =>\n                        <Cell\n                            beingSelected={this.isCellBeingSelected(i, j)}\n                            selected={selected}\n                            onTouchStart={this.handleTouchStartCell}\n                            onTouchMove={this.handleTouchMoveCell}\n                            colorSelected={row.colorSelected}\n                            colorBeingSelected={row.colorBeingSelected}\n                        />)}\n                </TableRow>\n            )}\n        </>\n    }\n\n    handleTouchStartCell = (e: any) => {\n        const {selectionStarted} = this.state;\n        if (selectionStarted || !isValidEvent(e)) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return\n        this.setState({\n            selectionStarted: true,\n            startRow: row,\n            startColumn: column,\n            endRow: row,\n            endColumn: column,\n            addMode: !this.props.rows[row].cellStates[column]\n        });\n    };\n\n    handleTouchMoveCell = (e: any) => {\n        const {selectionStarted, endRow, endColumn} = this.state;\n        if (!selectionStarted) return;\n\n        e.preventDefault();\n        const {row, column} = eventToCellLocation(e);\n        if (row === undefined || column === undefined) return;\n        if (endRow !== row || endColumn !== column) {\n            this.setState({endRow: row, endColumn: column});\n        }\n    };\n\n    handleTouchEndWindow = (e: any) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn, addMode} = this.state;\n        if (!selectionStarted || !isValidEvent(e)) return;\n\n        const value = this.props.rows.map((r) => Object.assign([], r.cellStates)) as CellState[][]\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        if (minRow === maxRow && minColumn === maxColumn) {\n            value[minRow][maxColumn] = (value[minRow][maxColumn] + 1) % 5 as CellState;\n        } else {\n            for (let row = minRow; row <= maxRow; row++) {\n                for (let column = minColumn; column <= maxColumn; column++) {\n                    value[row][column] = addMode ? 4 : 0;\n                }\n            }\n        }\n\n        this.setState({selectionStarted: false});\n        this.props.onChange(value);\n    };\n\n    isCellBeingSelected = (row: number, column: number) => {\n        const {selectionStarted, startRow, endRow, startColumn, endColumn} = this.state;\n\n        if (!selectionStarted) return false;\n        const [minRow, maxRow] = minMax(startRow, endRow);\n        const [minColumn, maxColumn] = minMax(startColumn, endColumn);\n        return row >= minRow && row <= maxRow && column >= minColumn && column <= maxColumn;\n    };\n}\n\n\nexport default BehaviorDragSelect;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {CheckCircleOutlined} from \"@mui/icons-material\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\nconst date = new Date();\nconst isoDate = new Date().toISOString().slice(0, 10)\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\nfunction Behavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(isoDate)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return {\n                            header: (\n                                <Tooltip title={translate(c.name, c.customName)} enterTouchDelay={0}>\n                                    <Avatar\n                                        variant=\"rounded\"\n                                        sx={{width: 30, height: 30, backgroundColor: consumerType.color}}\n                                    >\n                                        {consumerType.icon}\n                                    </Avatar>\n                                </Tooltip>\n                            ),\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        }\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        rows && backendService.putPrediction(isoDate, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [rows, backendService, setError, setSuccess, t]);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_behavior_full_title', {date: date}),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [t, setAppBar, handleSave, openInfo, modified])\n\n    if (!rows) return <LinearProgress/>\n\n    const InfoContent = () => {\n        const infoText = t('info_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\" sx={{border: 0}}/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell sx={{border: 0}}/>\n                                {energyAvailable.map((v) => <TableCell\n                                    sx={{border: 0, backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default Behavior;","import CloudUploadOutlined from \"@mui/icons-material/CloudUploadOutlined\";\nimport EditOutlined from \"@mui/icons-material/EditOutlined\";\nimport History from \"@mui/icons-material/History\";\nimport Mood from \"@mui/icons-material/Mood\";\nimport ShowChart from \"@mui/icons-material/ShowChart\";\nimport {Container, Stack, Typography,} from \"@mui/material\";\nimport React, {useContext, useEffect} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {DestinationCard, DestinationCardProps} from \"./common/DestinationCard\";\nimport useDefaultTracking from \"./common/Tracking\";\n\nconst destinations: { [key: string]: DestinationCardProps } = {\n    upload: {title: 'card_upload_title', subtitle: 'card_upload_subtitle', icon: CloudUploadOutlined, to: '/upload'},\n    behavior: {title: 'card_behavior_title', subtitle: 'card_behavior_subtitle', icon: EditOutlined, to: '/behavior'},\n    power: {title: 'card_power_title', subtitle: 'card_power_subtitle', icon: ShowChart, to: '/power'},\n    archive: {title: 'card_archive_title', subtitle: 'card_archive_subtitle', icon: History, to: '/archive'},\n    mood: {title: 'card_mood_title', subtitle: 'card_mood_subtitle', icon: Mood, to: '/mood'},\n}\n\nconst userInteractionNeeded = (type?: string) => {\n    switch (type) {\n        case \"management\":\n            return [destinations.upload]\n        case \"student\":\n            return [destinations.archive, destinations.mood]\n        case \"homeowner\":\n            return [destinations.upload, destinations.mood]\n        default:\n            return null;\n    }\n}\n\nconst userResult = (type?: string) => {\n    switch (type) {\n        case \"homeowner\":\n            return [destinations.power]\n        default:\n            return null;\n    }\n}\n\nfunction Home(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'Home'});\n    const {t} = useTranslation();\n    const {setAppBar} = props;\n    const user = useContext(UserContext);\n    const interactions = userInteractionNeeded(user?.type);\n    const results = userResult(user?.type);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('home_title'),\n            showBackButton: false,\n            children: () => <></>\n        })\n    }, [t, setAppBar])\n\n    return (\n        <Track>\n            <Container maxWidth=\"sm\" sx={{paddingTop: 3}}>\n                <Stack spacing={3}>\n                    {interactions &&\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">{t('home_item_todos')}</Typography>\n                        {interactions.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                    {results &&\n                    <Stack spacing={1}>\n                        <Typography variant=\"h5\">{t('home_item_results')}</Typography>\n                        {results.map((item, index) =>\n                            <DestinationCard\n                                {...item}\n                                title={t(item.title)}\n                                subtitle={t(item.subtitle)}\n                                done\n                                key={index}\n                            />\n                        )}\n                    </Stack>\n                    }\n                </Stack>\n            </Container>\n        </Track>\n    );\n}\n\nexport default Home;\n","const now = new Date();\n\nexport const createTime = (hours: number, minutes: number) => {\n    return new Date(now.getDay(), now.getMonth(), now.getDate(), hours, minutes, 0, 0);\n}\n","import {createTime} from \"../common/Time\";\nimport {ThermostatModel} from \"../service/Model\";\n\nexport const data_ = {\n    useAdvanced: false,\n    simple: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ],\n    advanced: [\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}],\n        [{time: createTime(0, 0), temperature: 21}]\n    ]\n} as ThermostatModel\n","import {StaticTimePicker} from \"@mui/lab\";\nimport {Button, DialogActions, DialogContent, InputAdornment, TextField} from \"@mui/material\";\nimport React from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {ResponsiveDialog} from \"../common/ResponsiveDialog\";\n\ninterface Props {\n    title: string\n    open: boolean\n    showTimePicker: boolean\n    onClose: () => void\n    onOK: () => void\n    time: Date | null\n    setTime: (time: Date | null) => void\n    temperature: string | null\n    setTemperature: (temperature: string | null) => void\n}\n\nexport function ModifyTimeItemDialog(props: Props) {\n    const {t} = useTranslation();\n    return <ResponsiveDialog title={props.title} open={props.open} onClose={props.onClose}>\n        <DialogContent>\n            {props.showTimePicker &&\n            <StaticTimePicker\n                label={t('thermostat_select_time')}\n                ampm={false}\n                value={props.time}\n                onChange={(date) => props.setTime(date)}\n                renderInput={() => <></>}\n            />\n            }\n            <TextField\n                variant=\"filled\"\n                sx={{my: 2}}\n                fullWidth\n                label={t('thermostat_temperature')}\n                type=\"number\"\n                value={props.temperature}\n                onChange={(e) => props.setTemperature(e.target.value)}\n                InputProps={{endAdornment: <InputAdornment position=\"start\">°C</InputAdornment>}}/>\n        </DialogContent>\n        <DialogActions>\n            <Button color=\"primary\" onClick={props.onClose}>{t('dialog_button_cancel')}</Button>\n            <Button color=\"primary\" onClick={props.onOK}>{t('dialog_button_ok')}</Button>\n        </DialogActions>\n    </ResponsiveDialog>\n}\n","import {Palette} from '@mui/material/styles';\nimport {TimeItem} from \"../service/Model\";\n\nexport const chartOptions = {\n    plugins: {\n        legend: {display: false},\n        tooltip: {enabled: false}\n    },\n    scales: {\n        x: {\n            min: 0,\n            max: 24,\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + '⁰⁰'\n            }\n        },\n        y: {\n            ticks: {\n                stepSize: 2,\n                callback: (value: any) => value + ' °C'\n            }\n        }\n    }\n}\n\nexport const createData = (dataItems: TimeItem[], palette: Palette) => ({\n    datasets: [\n        {\n            data: dataItems.map((i) => ({x: (i.time.getHours() + i.time.getMinutes() / 60), y: i.temperature})),\n            showLine: true,\n            fill: true,\n            stepped: true,\n            borderColor: palette.primary.main,\n            backgroundColor: palette.secondary.main,\n        }\n    ],\n})\n","import Add from \"@mui/icons-material/Add\";\nimport Delete from \"@mui/icons-material/Delete\";\nimport Edit from \"@mui/icons-material/Edit\";\nimport {\n    Box,\n    Button,\n    Card,\n    CardActions,\n    CardContent,\n    CardHeader,\n    IconButton,\n    Table,\n    TableBody,\n    TableCell,\n    TableHead,\n    TableRow,\n    Tooltip,\n    useTheme\n} from \"@mui/material\";\nimport React from \"react\";\nimport {Scatter} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {createTime} from \"../common/Time\";\nimport {TimeItem} from \"../service/Model\";\nimport {chartOptions, createData} from \"./ChartOptions\";\n\ninterface LabeledTimeItem extends TimeItem {\n    label: string\n}\n\ninterface Props {\n    title: string;\n    id: string;\n    items: TimeItem[];\n    onAddTime: (id: string) => void\n    onCopyFrom: (id: string) => void\n    onDelete: (id: string, index: number) => void\n    onEdit: (id: string, index: number) => void\n}\n\nconst printTime = (time: Date) => time.toLocaleTimeString('de-DE', {hour: '2-digit', minute: '2-digit'})\nconst labelTimeItems = (array: TimeItem[]): LabeledTimeItem[] => array.map((value, index) => ({\n    ...value, label: `${printTime(value.time)} - ${printTime(array[index + 1]?.time ?? createTime(23, 59))}`\n}))\n\nconst compareItem = (a: TimeItem, b: TimeItem) => a.time.getTime() === b.time.getTime() && a.temperature === b.temperature\nexport const compareProps = (a: Props, b: Props) =>\n    a.id === b.id && a.title === b.title && a.items.length === b.items.length &&\n    a.items.every((value, index) => compareItem(value, b.items[index]))\n\nexport const ThermostatDaySetting = React.memo((props: Props) => {\n    const {palette} = useTheme();\n    const {t} = useTranslation();\n    const {title, items} = props;\n\n    const labeledTimeItems = labelTimeItems(items);\n    const dataItems = [...items, {time: createTime(23, 59), temperature: items[items.length - 1].temperature}]\n    const data = createData(dataItems, palette);\n    return (\n        <Card>\n            <CardHeader title={title}/>\n            <CardContent>\n                <Scatter data={data} options={chartOptions} height={50}/>\n                <Table size=\"small\">\n                    <TableHead>\n                        <TableRow>\n                            <TableCell>{t('thermostat_timespan')}</TableCell>\n                            <TableCell colSpan={2}>{t('thermostat_temperature')}</TableCell>\n                        </TableRow>\n                    </TableHead>\n                    <TableBody>\n                        {labeledTimeItems.map((item, index) => (\n                            <TableRow key={index} hover={true}>\n                                <TableCell>{item.label}</TableCell>\n                                <TableCell>{item.temperature} °C</TableCell>\n                                <TableCell align=\"right\">\n                                    <IconButton\n                                        size=\"small\"\n                                        onClick={() => props.onEdit(props.id, index)}\n                                    ><Edit/></IconButton>\n                                    <IconButton\n                                        disabled={index < 1}\n                                        size=\"small\"\n                                        onClick={() => props.onDelete(props.id, index)}\n                                    ><Delete/></IconButton>\n                                </TableCell>\n                            </TableRow>\n                        ))}\n                    </TableBody>\n                </Table>\n            </CardContent>\n            <CardActions>\n                <Button\n                    color=\"primary\"\n                    onClick={() => props.onCopyFrom(props.id)}\n                >{t('thermostat_copy_from')}</Button>\n                <Box mx=\"auto\"/>\n                <Tooltip title={t('thermostat_insert_timespan') as string}>\n                    <IconButton\n                        sx={{marginLeft: \"auto\"}}\n                        onClick={() => props.onAddTime(props.id)}\n                        disabled={items?.length > 4}\n                    ><Add/></IconButton>\n                </Tooltip>\n            </CardActions>\n        </Card>\n    )\n}, compareProps)\n","import CompareArrowsOutlined from \"@mui/icons-material/CompareArrowsOutlined\"\nimport InfoOutlined from \"@mui/icons-material/InfoOutlined\"\nimport RotateLeft from \"@mui/icons-material/RotateLeft\"\nimport SaveAlt from \"@mui/icons-material/SaveAlt\"\nimport Container from \"@mui/material/Container\"\nimport DialogContent from \"@mui/material/DialogContent\"\nimport Divider from \"@mui/material/Divider\";\nimport Grid, {GridSize} from \"@mui/material/Grid\"\nimport List from \"@mui/material/List\"\nimport ListItem from \"@mui/material/ListItem\"\nimport ListItemText from \"@mui/material/ListItemText\"\nimport Stack from \"@mui/material/Stack\"\nimport Switch from \"@mui/material/Switch\"\nimport Typography from \"@mui/material/Typography\"\nimport React, {useCallback, useEffect, useState} from 'react';\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, Lorem, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveDialog} from \"./common/ResponsiveDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport {createTime} from \"./common/Time\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ThermostatModel, TimeItem} from \"./service/Model\";\nimport {data_} from \"./thermostats/DummyData\";\nimport {ModifyTimeItemDialog} from \"./thermostats/ModifyTimeItemDialog\";\nimport {ThermostatDaySetting} from \"./thermostats/ThermostatDaySetting\";\nimport {Prompt} from \"react-router-dom\";\n\ninterface TabPanelProps {\n    children?: React.ReactNode;\n    index: any;\n    value: any;\n}\n\nfunction TabPanel(props: TabPanelProps) {\n    const {children, value, index, ...other} = props;\n\n    return (\n        <div\n            role=\"tabpanel\"\n            hidden={value !== index}\n            id={`simple-tabpanel-${index}`}\n            aria-labelledby={`simple-tab-${index}`}\n            {...other}\n        >\n            {value === index && children}\n        </div>\n    );\n}\n\ninterface DayModel {\n    id: string\n    label: string\n    data: Array<TimeItem>\n}\n\ninterface TabModel {\n    days: Array<DayModel>\n    md: GridSize\n    lg: GridSize\n    xl: GridSize\n}\n\ninterface Props extends PrivateRouteProps {\n}\n\nconst copySetting = (data: Array<Array<TimeItem>>) => data.map((day) => day.map((e) => ({...e})))\nconst copyData = (data: ThermostatModel): ThermostatModel => ({\n    ...data,\n    simple: copySetting(data.simple),\n    advanced: copySetting(data.advanced)\n})\nconst sortDay = (day: Array<TimeItem>) => day.sort((a, b) => a.time.getHours() > b.time.getHours() || (a.time.getHours() === b.time.getHours() && a.time.getMinutes() >= b.time.getMinutes()) ? 1 : -1)\n\nconst compareDays = (a: TimeItem[][], b: TimeItem[][]) => a.length === b.length &&\n    a.every((day, dayIndex) =>\n        day.length === b[dayIndex].length && day.every((item, itemIndex) =>\n            item.time === b[dayIndex][itemIndex].time && item.temperature === b[dayIndex][itemIndex].temperature))\nconst compareData = (a: ThermostatModel, b: ThermostatModel) => a.useAdvanced === b.useAdvanced &&\n    compareDays(a.simple, b.simple) && compareDays(a.advanced, b.advanced)\n\nfunction Thermostats(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Power'});\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const [data, setData] = useState<ThermostatModel>(data_)\n    const [initialData, setInitialData] = useState<ThermostatModel>(data_)\n    const [Success, setSuccess] = useSnackBar();\n    const [Error, setError] = useSnackBar();\n    const {setAppBar, backendService} = props;\n\n    const simpleDayLabels = [t('day_weekdays'), t('day_weekend')]\n    const dayLabels = [t('day_monday'), t('day_tuesday'), t('day_wednesday'), t('day_thursday'), t('day_friday'), t('day_saturday'), t('day_sunday')]\n\n    useEffect(() => {\n        backendService.getThermostats()\n            .then((data) => {\n                if (!data) return;\n                data.simple = data.simple.map(day => sortDay(day));\n                data.advanced = data.advanced.map(day => sortDay(day));\n                setData(data);\n                setInitialData(data);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, setError])\n\n    const reset = useCallback(() => setData(initialData), [initialData]);\n    const save = useCallback(() => {\n        backendService.putThermostats(data)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setInitialData(data))\n            .catch(console.log)\n    }, [data, backendService, setSuccess, t, setError])\n\n    const modified = !compareData(data, initialData);\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_thermostats_title'),\n            showBackButton: false,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton description={t('reset')} icon={<RotateLeft/>} onClick={reset}/>\n                <ResponsiveIconButton description={t('compare')} icon={<CompareArrowsOutlined/>}/>\n                <ResponsiveIconButton\n                    requiresAttention={modified}\n                    description={t('save')}\n                    icon={<SaveAlt/>}\n                    onClick={save}/>\n            </>\n        })\n    }, [t, openInfo, reset, setAppBar, save, modified]);\n\n    const [addTimeOpen, setAddTimeOpen] = useState(false);\n    const [editTimeOpen, setEditTimeOpen] = useState(false);\n    const [copyFromOpen, setCopyFromOpen] = useState(false);\n\n    const onAddTime = useCallback((id: string) => {\n        setShowTimePicker(true);\n        setTemperature(\"21\");\n        setTime(createTime(12, 0));\n        setID(+id);\n        setAddTimeOpen(true);\n    }, []);\n    const onCopyFrom = useCallback((id: string) => {\n        setID(+id);\n        setCopyFromOpen(true);\n    }, []);\n    const onDelete = useCallback((id: string, index: number) => {\n        setData(prevState => {\n            const intId = +id;\n            const state = copyData(prevState)\n            if (intId > 9) {\n                state.simple[intId - 10].splice(index, 1)\n            } else {\n                state.advanced[intId].splice(index, 1)\n            }\n            return state;\n        });\n    }, [])\n    const [id, setID] = useState<number>();\n    const [index, setIndex] = useState<number>();\n    const [time, setTime] = useState<Date | null>(new Date());\n    const [temperature, setTemperature] = useState<string | null>(\"21\");\n    const [showTimePicker, setShowTimePicker] = useState(false);\n\n    const addEntry = useCallback(() => {\n        if (id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10].push({time: time, temperature: +temperature})\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id].push({time: time, temperature: +temperature})\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setAddTimeOpen(false);\n    }, [id, time, temperature]);\n\n    const editEntry = useCallback(() => {\n        if (index === undefined || id === undefined || time === null || time === undefined || temperature === undefined || temperature === null) {\n            console.log(\"id, time or temperature undefined, aborting\");\n            return;\n        }\n\n        setData(prevState => {\n            const state = copyData(prevState);\n            if (id > 9) {\n                state.simple[id - 10][index] = {time: time, temperature: +temperature};\n                sortDay(state.simple[id - 10])\n            } else {\n                state.advanced[id][index] = {time: time, temperature: +temperature};\n                sortDay(state.advanced[id])\n            }\n            return state;\n        });\n        setEditTimeOpen(false);\n    }, [index, id, time, temperature]);\n\n    const copyFrom = useCallback((fromID: number) => {\n        if (id === undefined) return;\n        setData(prevState => {\n            const state = copyData(prevState);\n            const from = (fromID > 9 ? prevState.simple[fromID - 10] : prevState.advanced[fromID]).map(it => ({...it}));\n            if (id > 9) {\n                state.simple[id - 10] = from;\n            } else {\n                state.advanced[id] = from;\n            }\n            return state;\n        });\n    }, [id])\n\n    if (!data) return <></>\n\n    const empty = [{time: createTime(0, 0), temperature: 21}]\n    const days = dayLabels.map((value, index) => ({\n        id: String(index),\n        label: value,\n        data: data.advanced.length < index ? empty : data.advanced[index]\n    }))\n    const simpleDays = simpleDayLabels.map((value, index) => ({\n        id: String(index + 10),\n        label: value,\n        data: data.simple[index]\n    }))\n    const tabs: TabModel[] = [\n        {days: simpleDays, md: 6, lg: 6, xl: 6},\n        {days: days, md: 6, lg: 4, xl: 4}\n    ]\n\n    return (\n        <Track>\n            <Container maxWidth=\"xl\" sx={{paddingTop: 1}}>\n                <Stack direction=\"row\" spacing={1} sx={{alignItems: \"center\", justifyContent: \"end\", pb: 1}}>\n                    <Typography variant=\"subtitle1\"\n                                sx={{textTransform: 'uppercase'}}\n                    >{t('thermostat_use_advanced_settings')}</Typography>\n                    <Switch\n                        checked={data.useAdvanced}\n                        onChange={(event, value) => setData(prevState => ({...prevState, useAdvanced: value}))}/>\n                </Stack>\n\n                {tabs.map((tab, index) => (\n                    <TabPanel index={index} value={data.useAdvanced ? 1 : 0} key={index}>\n                        <Grid container spacing={1}>\n                            {tab.days.map((day) => (\n                                <Grid item xs={12} md={tab.md} lg={tab.lg} xl={tab.xl} key={day.id}>\n                                    <ThermostatDaySetting\n                                        id={day.id}\n                                        title={day.label}\n                                        items={day.data}\n                                        onAddTime={onAddTime}\n                                        onCopyFrom={onCopyFrom}\n                                        onEdit={(id, index) => {\n                                            setID(+id);\n                                            setIndex(index);\n                                            setTime(day.data[index].time);\n                                            setTemperature(String(day.data[index].temperature));\n                                            setShowTimePicker(index > 0);\n                                            setEditTimeOpen(true);\n                                        }}\n                                        onDelete={onDelete}\n                                    />\n                                </Grid>\n                            ))}\n                        </Grid>\n                    </TabPanel>\n                ))}\n            </Container>\n            <ModifyTimeItemDialog\n                title={t('thermostat_add_entry')}\n                onOK={addEntry}\n                onClose={() => setAddTimeOpen(false)}\n                open={addTimeOpen}\n                showTimePicker={true}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ModifyTimeItemDialog\n                title={t('thermostat_edit_entry')}\n                onOK={editEntry}\n                onClose={() => setEditTimeOpen(false)}\n                open={editTimeOpen}\n                showTimePicker={showTimePicker}\n                setTemperature={setTemperature}\n                temperature={temperature}\n                setTime={setTime}\n                time={time}\n            />\n            <ResponsiveDialog title={t('dialog_copy_from_title')} open={copyFromOpen}\n                              onClose={() => setCopyFromOpen(false)}>\n                <DialogContent sx={{minWidth: 300}}>\n                    <List>\n                        {dayLabels.map((day, index) =>\n                            <ListItem\n                                key={index}\n                                button\n                                disabled={index === id}\n                                onClick={() => {\n                                    copyFrom(index);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                        <Divider variant=\"middle\"/>\n                        {simpleDayLabels.map((day, index) =>\n                            <ListItem\n                                key={index + 10}\n                                button\n                                disabled={index + 10 === id}\n                                onClick={() => {\n                                    copyFrom(index + 10);\n                                    setCopyFromOpen(false);\n                                }}\n                            ><ListItemText>{day}</ListItemText></ListItem>)}\n                    </List>\n                </DialogContent>\n            </ResponsiveDialog>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<Lorem/>} {...infoProps} />\n            <AlertSnackbar {...Error}/>\n            <AlertSnackbar severity=\"success\" {...Success}/>\n        </Track>\n    )\n}\n\nexport default Thermostats;","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Box,\n    Button,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Paper,\n    Stack,\n    Typography,\n    useTheme\n} from \"@mui/material\";\nimport 'chartjs-plugin-dragdata';\nimport React, {useCallback, useContext, useEffect, useState} from 'react';\nimport {Bubble, defaults} from \"react-chartjs-2\";\nimport {useTranslation} from \"react-i18next\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {MoodModel} from \"./service/Model\";\nimport {Link as RouterLink, Prompt} from \"react-router-dom\";\nimport {CheckCircleOutlined} from \"@mui/icons-material\";\nimport {TabContext, TabPanel} from \"@mui/lab\";\n\ninterface GraphProps {\n    mood: { x: number, y: number }\n    onChange: (mood: { x: number, y: number }) => void\n}\n\nexport const compareProps = (a: GraphProps, b: GraphProps) => a.mood.x === b.mood.x && a.mood.y === b.mood.y\n\nconst DraggableGraph = React.memo(function (props: GraphProps) {\n    const theme = useTheme();\n    const {t} = useTranslation();\n\n    defaults.borderColor = theme.palette.divider;\n    defaults.color = theme.palette.text.primary;\n    const commonScaleProps = {\n        alignToPixels: true,\n        max: 10,\n        min: 0,\n        ticks: {display: false},\n        grid: {display: false},\n    }\n\n    return <Bubble\n        data={{\n            labels: [\"Red\"],\n            datasets: [{\n                data: [{...props.mood, r: 20}],\n                borderWidth: 1,\n                backgroundColor: theme.palette.primary.main,\n                pointHitRadius: 25\n            }]\n        }}\n        options={{\n            maintainAspectRatio: true,\n            aspectRation: 1,\n            scales: {\n                y: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: [t('mood_very_uncomfortable') + ' ⟵      ⟶ ' + t('mood_very_comfortable')],\n                    },\n                },\n                x: {\n                    ...commonScaleProps,\n                    title: {\n                        display: true,\n                        text: t('mood_very_cold') + ' ⟵      ⟶ ' + t('mood_very_hot'),\n                    },\n                }\n            },\n            onHover: function (e: any) {\n                const point = e.chart.getElementsAtEventForMode(e, 'nearest', {intersect: true}, false)\n                if (point.length) e.native.target.style.cursor = 'grab'\n                else e.native.target.style.cursor = 'default'\n            },\n            plugins: {\n                // @ts-ignore\n                dragData: {\n                    dragX: true,\n                    showTooltip: true,\n                    onDragStart: () => null,\n                    onDrag: () => null,\n                    onDragEnd: (e: any, datasetIndex: any, index: number, value: { x: number, y: number, r: number }) => {\n                        e.target.style.cursor = 'default'\n                        props.onChange(value);\n                    },\n                },\n                legend: {display: false},\n                tooltip: {enabled: false}\n            }\n        }} height={100} width={100}/>\n}, compareProps)\n\nconst date = new Date().toISOString().slice(0, 10)\n\nfunction Mood(props: PrivateRouteProps) {\n    const {Track} = useDefaultTracking({page: 'MoodPage'});\n    const {t} = useTranslation()\n    const [infoProps, openInfo] = useInfoDialog();\n    const [success, setSuccess] = useSnackBar();\n    const [error, setError] = useSnackBar();\n    const [mood, setMood] = useState<MoodModel>();\n    const [modified, setModified] = useState(false);\n    const [panel, setPanel] = useState(\"0\");\n\n    const {backendService, setAppBar} = props;\n    const user = useContext(UserContext);\n\n    useEffect(() => {\n        backendService.getMood(date)\n            .then(setMood, setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, setError])\n\n    const onSaveClick = useCallback(() => {\n        if (!mood) return;\n        backendService.putMood(date, mood)\n            .then(() => setSuccess(t('changes_saved')), setError)\n            .then(() => setModified(false))\n            .catch(console.log);\n    }, [backendService, mood, setError, setSuccess, t])\n\n    const onMoodChange = useCallback((mood: MoodModel) => {\n        setMood(mood);\n        setModified(true);\n    }, [])\n\n    useEffect(() => {\n        setAppBar({\n            title: t('card_mood_title'),\n            showBackButton: true,\n            children: () => {\n                if (panel !== \"1\") return <></>\n                return <>\n                    <ResponsiveIconButton icon={<InfoOutlined/>} onClick={openInfo} description={t('info')}/>\n                    <ResponsiveIconButton requiresAttention={modified}\n                                          icon={<CheckCircleOutlined/>}\n                                          onClick={onSaveClick}\n                                          description={t('save')}/>\n                </>\n            }\n        })\n    }, [t, setAppBar, onSaveClick, openInfo, modified, panel])\n\n    if (!mood) return <LinearProgress/>;\n\n    const infoText = t('info_mood', {returnObjects: true}) as string[];\n    const infoContent = <>{infoText.map(text => <DialogContentText paragraph children={text}/>)}</>\n\n    const titleKey = user?.type === \"student\" ? \"mood_please_select_mood_student\" : \"mood_please_select_mood_homeowner\";\n    return <Track>\n        <Container maxWidth=\"sm\" sx={{paddingTop: 3}} disableGutters>\n            <TabContext value={panel}>\n                <TabPanel value=\"0\">\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('mood_question_home')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button\n                                variant=\"contained\"\n                                onClick={() => setPanel('1')}\n                                children={t('yes')}/>\n                            <Button\n                                sx={{marginLeft: 2}}\n                                variant=\"contained\"\n                                onClick={() => setPanel('2')}\n                                children={t('no')}/>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"1\">\n                    <Typography variant=\"h5\" align=\"center\" paragraph>{t(titleKey)}</Typography>\n                    <Paper variant=\"outlined\" sx={{p: 2}}>\n                        <DraggableGraph mood={mood} onChange={onMoodChange}/>\n                    </Paper>\n                </TabPanel>\n                <TabPanel value=\"2\">\n                    <Paper square variant=\"outlined\" sx={{p: 2}}>\n                        <Typography variant=\"h5\">{t('mood_come_back_later')}</Typography>\n                        <Box mt={5}/>\n                        <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                            <Button variant=\"contained\" component={RouterLink} to=\"/\">{t('go_back')}</Button>\n                        </Stack>\n                    </Paper>\n                </TabPanel>\n            </TabContext>\n        </Container>\n        <Prompt when={modified} message={t('unsaved_changes')}/>\n        <InfoDialog title={t('info')} content={infoContent} {...infoProps} />\n        <AlertSnackbar {...success} severity=\"success\"/>\n        <AlertSnackbar {...error} />\n    </Track>\n}\n\nexport default Mood;","import {Box, Button, Typography} from \"@mui/material\";\nimport {Link} from \"react-router-dom\";\nimport React from \"react\";\n\nexport function Page404(props: { path: string }) {\n    return (\n        <Box m={16} textAlign='center'>\n            <Typography variant=\"h1\">404</Typography>\n            <Typography variant=\"h5\">Page not found</Typography>\n            <Box m={2}>\n                <Button color=\"primary\" variant=\"contained\" component={Link} to={props.path}>Go home</Button>\n            </Box>\n        </Box>\n    )\n}\n","import InfoOutlined from \"@mui/icons-material/InfoOutlined\";\nimport {\n    Avatar,\n    Container,\n    DialogContentText,\n    LinearProgress,\n    Table,\n    TableBody,\n    TableCell,\n    TableContainer,\n    TableHead,\n    TableRow,\n    Tooltip,\n} from \"@mui/material\";\nimport {isPast, isValid} from \"date-fns\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {useTranslation} from \"react-i18next\";\nimport {Prompt, Redirect, useLocation} from 'react-router-dom';\nimport {PrivateRouteProps} from \"./App\";\nimport BehaviorDragSelect, {CellState, Row} from \"./behavior/BehaviorDragSelect\"\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {consumerLookup, translate} from \"./common/ConsumerTools\";\nimport {useParsedDate} from \"./common/Date\";\nimport {InfoDialog, useInfoDialog} from \"./common/InfoDialog\";\nimport {ResponsiveIconButton} from \"./common/ResponsiveIconButton\";\nimport useDefaultTracking from \"./common/Tracking\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {ConsumerModel} from \"./service/Model\";\nimport {CheckCircleOutlined} from \"@mui/icons-material\";\n\nconst formatTime = (v: number) => v < 10 ? '0' + v : '' + v\nconst hours = Array.from(Array(24).keys()).map(v => formatTime(v));\nconst colors = ['lightgreen', 'yellow', 'red']\nconst energyAvailable = [0, 0, 0, 0, 0, 1, 1, 1, 1, 1, 2, 2, 2, 2, 2, 1, 1, 1, 1, 1, 0, 0, 0, 0].map(v => colors[v])\n\ninterface Props extends PrivateRouteProps {\n}\n\ninterface ExtendedRow extends Row {\n    consumerId: string\n}\n\ninterface HeaderProps {\n    consumer: ConsumerModel\n}\n\nconst compareConsumerProps = (a: HeaderProps, b: HeaderProps) => a.consumer.consumerId === b.consumer.consumerId\nconst ConsumerHeader = React.memo((props: { consumer: ConsumerModel }) => {\n    const {consumer} = props;\n    const consumerType = consumerLookup(consumer.type);\n    return (<Tooltip title={translate(consumer.name, consumer.customName)} enterTouchDelay={0}>\n        <Avatar\n            variant=\"rounded\"\n            sx={{backgroundColor: consumerType.color, width: 30, height: 30}}\n            children={consumerType.icon}\n        />\n    </Tooltip>)\n}, compareConsumerProps);\n\nfunction PastBehavior(props: Props) {\n    const {Track} = useDefaultTracking({page: 'Behavior'});\n    const [rows, setRows] = useState<ExtendedRow[]>();\n    const [modified, setModified] = useState(false);\n    const [error, setError] = useSnackBar();\n    const [success, setSuccess] = useSnackBar();\n    const {t} = useTranslation();\n    const [infoProps, openInfo] = useInfoDialog();\n    const query = new URLSearchParams(useLocation().search);\n    const date = query.get(\"date\")!;\n    const dateParsed = useParsedDate(date);\n    const validDate = isValid(dateParsed) && isPast(dateParsed);\n\n    const {setAppBar, backendService} = props;\n\n    useEffect(() => {\n        if (!validDate) return;\n        Promise.all([backendService.getConsumers(), backendService.getPrediction(date)])\n            .then(([consumers, predictions]) => {\n                const cellStates = consumers\n                    .filter((c) => c.active)\n                    .map((c) => {\n                        const consumerType = consumerLookup(c.type);\n                        return ({\n                            header: <ConsumerHeader consumer={c}/>,\n                            consumerId: c.consumerId,\n                            cellStates: predictions.find((p) => p.consumerId === c.consumerId)?.data ?? hours.map(() => 0),\n                            colorSelected: consumerType.color,\n                            colorBeingSelected: consumerType.colorAlt\n                        });\n                    });\n                setRows(cellStates);\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [validDate, backendService, setError, date]);\n\n    const handleChange = useCallback((cells: CellState[][]) => {\n        setRows(prevState => prevState?.map((row, i) => ({...row, cellStates: cells[i]})))\n        setModified(true);\n    }, []);\n\n    const handleSave = useCallback(() => {\n        rows && backendService.putPrediction(date, rows.map((r) => ({consumerId: r.consumerId, data: r.cellStates})))\n            .then(() => {\n                setSuccess(t('changes_saved'));\n                setModified(false);\n            }, setError)\n            .catch(console.log)\n    }, [backendService, date, rows, setError, setSuccess, t]);\n\n    useEffect(() => {\n        validDate && setAppBar({\n            title: t('card_behavior_full_title', {date: dateParsed}),\n            showBackButton: true,\n            children: () => <>\n                <ResponsiveIconButton description={t('info')} icon={<InfoOutlined/>} onClick={openInfo}/>\n                <ResponsiveIconButton requiresAttention={modified}\n                                      description={t('save')}\n                                      icon={<CheckCircleOutlined/>}\n                                      onClick={handleSave}/>\n            </>\n        })\n    }, [validDate, dateParsed, handleSave, modified, openInfo, setAppBar, t])\n\n    if (!validDate) return <Redirect to={'/'}/>\n    if (!rows) return <LinearProgress/>\n\n    const InfoContent = () => {\n        const infoText = t('info_past_behavior', {returnObjects: true}) as string[]\n        const infoConsumers = t('consumer_help', {returnObjects: true}) as string[]\n        return <>\n            {infoText.map(text => <DialogContentText paragraph children={text}/>)}\n            {infoConsumers.map(text => <DialogContentText children={text}/>)}\n        </>\n    }\n\n    return (\n        <Track>\n            <Container disableGutters maxWidth=\"xl\" sx={{paddingTop: 1, display: \"grid\"}}>\n                <TableContainer\n                    sx={{overflow: 'auto', maxHeight: {xs: 'calc(100vh - 124px)', sm: 'calc(100vh - 72px)'}}}>\n                    <Table stickyHeader size=\"small\" sx={{userSelect: \"none\", borderCollapse: \"collapse\"}}>\n                        <TableHead>\n                            <TableRow>\n                                <TableCell variant=\"head\"/>\n                                {hours.map((value) => <TableCell align=\"center\">{String(value)}⁰⁰</TableCell>)}\n                            </TableRow>\n                            <TableRow>\n                                <TableCell/>\n                                {energyAvailable.map((v) => <TableCell sx={{backgroundColor: v, top: \"37px\"}}/>)}\n                            </TableRow>\n                        </TableHead>\n                        <TableBody>\n                            <BehaviorDragSelect rows={rows} onChange={handleChange}/>\n                        </TableBody>\n                    </Table>\n                </TableContainer>\n            </Container>\n            <Prompt when={modified} message={t('unsaved_changes')}/>\n            <InfoDialog title={t('info')} content={<InfoContent/>} {...infoProps}/>\n            <AlertSnackbar {...success} severity=\"success\"/>\n            <AlertSnackbar {...error} />\n        </Track>)\n}\n\nexport default PastBehavior;","import {useTranslation} from \"react-i18next\";\nimport {Box, Button, Container, LinearProgress, Paper, Stack, Typography} from \"@mui/material\";\nimport {Link as RouterLink} from \"react-router-dom\";\nimport React from \"react\";\n\nconst style = {display: \"flex\", justifyContent: \"center\", alignItems: \"center\", height: \"100vh\"};\n\nexport function LoadingPage(props: { retry: () => void }) {\n    const {t} = useTranslation();\n    return (\n        <Container maxWidth=\"xs\" sx={style}>\n            <Paper square variant=\"outlined\" sx={{width: \"100%\", p: 2}}>\n                <Typography variant=\"h5\" textAlign=\"center\" children={t('logging_in')}/>\n                <Box mt={5}/>\n                <LinearProgress/>\n                <Stack direction=\"row\" sx={{justifyContent: \"flex-end\", pt: 2}}>\n                    <Button component={RouterLink} to=\"/logout\" sx={{mr: 2}} children={t('logout')}/>\n                    <Button onClick={props.retry} children={t('retry')}/>\n                </Stack>\n            </Paper>\n        </Container>\n    )\n}\n","import {LinearProgress} from \"@mui/material\";\nimport {Redirect, Route, Switch} from \"react-router-dom\";\nimport Login from \"./Login\";\nimport Verify from \"./Verify\";\nimport Logout from \"./Logout\";\nimport Upload from \"./Upload\";\nimport User from \"./User\";\nimport Power from \"./Power\";\nimport Archive from \"./Archive\";\nimport Consumers from \"./Consumers\";\nimport Behavior from \"./Behavior\";\nimport React, {useContext} from \"react\";\nimport Home from \"./Home\";\nimport Thermostats from \"./Thermostats\";\nimport BackendService from \"./service/BackendService\";\nimport Mood from \"./Mood\";\nimport {PrivateRouteProps, UserContext} from \"./App\";\nimport {Page404} from \"./Page404\";\nimport PastBehavior from \"./PastBehavior\";\nimport {LoadingPage} from \"./LoadingPage\";\n\nexport function PublicRouter(props: { backendService: BackendService }) {\n    return <>\n        <Redirect to=\"/login\"/>\n        <Switch>\n            <Route path=\"/verify\"><Verify {...props}/></Route>\n            <Route path=\"/login\"><Login {...props}/></Route>\n            <Route><Page404 path=\"/login\"/></Route>\n        </Switch>\n    </>\n}\n\nexport function LoadingRouter(props: { backendService: BackendService, retry: () => void }) {\n    return (\n        <Switch>\n            <Route path=\"/logout\"><Logout {...props}/></Route>,\n            <Route exact path=\"/\"><LoadingPage retry={props.retry}/></Route>,\n            <Route exact path={`${process.env.PUBLIC_URL}`}><LoadingPage retry={props.retry}/></Route>,\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n\nexport function PrivateRouter(props: PrivateRouteProps) {\n    const user = useContext(UserContext);\n    if (user === undefined) return <LinearProgress/>;\n\n    const paths = {\n        logout: <Route path=\"/logout\"><Logout {...props}/></Route>,\n        upload: <Route path=\"/upload\"><Upload {...props}/></Route>,\n        user: <Route path=\"/user\"><User {...props}/></Route>,\n        power: <Route path=\"/power\"><Power {...props}/></Route>,\n        archive: <Route path=\"/archive\"><Archive {...props}/></Route>,\n        consumers: <Route path=\"/consumers\"><Consumers {...props}/></Route>,\n        behavior: <Route path=\"/behavior\"><Behavior {...props}/></Route>,\n        pastbehavior: <Route path=\"/pastbehavior\"><PastBehavior {...props}/></Route>,\n        mood: <Route path=\"/mood\"><Mood {...props}/></Route>,\n        thermostats: <Route path=\"/thermostats\"><Thermostats {...props}/></Route>,\n        root: <Route exact path=\"/\"><Home {...props}/></Route>,\n        home: <Route exact path={`${process.env.PUBLIC_URL}`}><Home {...props}/></Route>,\n    }\n\n    const commonPaths = [paths.logout, paths.user, paths.home, paths.root]\n    const managementPaths = [paths.upload];\n    const homeOwnerPaths = [paths.upload, paths.power, paths.consumers, paths.behavior, paths.mood];\n    const studentPaths = [paths.archive, paths.consumers, paths.behavior, paths.mood, paths.pastbehavior];\n\n    return (\n        <Switch>\n            {user.type === \"management\" && managementPaths}\n            {user.type === \"student\" && studentPaths}\n            {user.type === \"homeowner\" && homeOwnerPaths}\n            {commonPaths}\n            <Route><Page404 path=\"/\"/></Route>\n        </Switch>\n    )\n}\n","import {AxiosRequestConfig, AxiosResponse} from 'axios';\nimport {BehaviorSubject, map, Observable} from \"rxjs\";\nimport {Backend} from \"./Backend\";\nimport {\n    ConsumerModel,\n    LoginResponse,\n    MoodModel,\n    ProcessedConsumptionModel,\n    ThermostatModel,\n    UserModel,\n    UserPredictionModel\n} from \"./Model\";\n\nfunction unpack<T>(response: AxiosResponse<T>): T {\n    return response.data;\n}\n\nclass BackendService {\n    private readonly accessToken: BehaviorSubject<string | null>;\n    private readonly isLoggedInObservable: any;\n    private readonly backend: Backend;\n\n    constructor(backend: Backend) {\n        this.backend = backend;\n        this.accessToken = new BehaviorSubject(localStorage.getItem(\"token\"));\n        this.isLoggedInObservable = this.accessToken\n            .pipe(map((token) => token != null && token !== \"\"))\n\n        window.addEventListener('storage', () => {\n            const token = localStorage.getItem(\"token\");\n            if (token !== this.accessToken.value) {\n                this.accessToken.next(token)\n            }\n        })\n    }\n\n    isLoggedIn(): Observable<boolean> {\n        return this.isLoggedInObservable\n    }\n\n    requestPin(sharedPassword: string, email: string) {\n        return this.backend\n            .get('/request_pin', {params: {'shared_password': sharedPassword, 'email': email}});\n    }\n\n    login(email: string, password: string) {\n        return this.backend\n            .get<LoginResponse>('/login', {params: {'email': email, 'password': password}})\n            .then((response) => {\n                const {token} = response.data;\n                localStorage.setItem(\"token\", token);\n                this.accessToken.next(token)\n            });\n    }\n\n    logout(): Promise<any> {\n        localStorage.removeItem(\"token\");\n        return this.backend\n            .get('/logout', this.addAuth())\n            .finally(() => this.accessToken.next(null))\n    }\n\n    getUser(): Promise<UserModel> {\n        return this.backend\n            .get<UserModel>('/user', this.addAuth())\n            .then(unpack);\n    }\n\n    getConsumers(): Promise<ConsumerModel[]> {\n        return this.backend\n            .get<ConsumerModel[]>('/consumer', this.addAuth())\n            .then(unpack);\n    }\n\n    postConsumer(consumer_name: string) {\n        return this.backend\n            .post('/consumer', null, this.addAuth({params: {consumer_name: consumer_name}}))\n    }\n\n    putConsumer(consumer: ConsumerModel) {\n        return this.backend\n            .put('/consumer/' + consumer.consumerId, null, this.addAuth({\n                params: {\n                    consumer_name: consumer.customName,\n                    consumer_active: consumer.active\n                }\n            }))\n    }\n\n    removeConsumer(consumerId: String): Promise<AxiosResponse> {\n        return this.backend\n            .delete('/consumer/' + consumerId, this.addAuth())\n    }\n\n    getProcessedConsumptions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/processedconsumption', this.addAuth())\n            .then(unpack);\n    }\n\n    getProcessedConsumption(date: string): Promise<ProcessedConsumptionModel[]> {\n        return this.backend\n            .get<ProcessedConsumptionModel[]>('/processedconsumption/' + date, this.addAuth())\n            .then(unpack);\n    }\n\n    getPredictions(): Promise<string[]> {\n        return this.backend\n            .get<string[]>('/predictions', this.addAuth())\n            .then(unpack);\n    }\n\n    getPrediction(date: string): Promise<UserPredictionModel[]> {\n        return this.backend\n            .get<UserPredictionModel[]>('/predictions/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    putPrediction(date: string, predictions: UserPredictionModel[]): Promise<AxiosResponse> {\n        return this.backend\n            .put('/predictions/' + date, {predictions: predictions}, this.addAuth())\n    }\n\n    getThermostats(): Promise<ThermostatModel | null> {\n        return this.backend\n            .get<ThermostatModel>('/thermostat', this.addAuth())\n            .then(unpack)\n            .then((data) => {\n                if (!data) return data;\n                data.simple = data.simple.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                data.advanced = data.advanced.map(day => day.map(it => ({\n                    time: new Date(it.time),\n                    temperature: it.temperature\n                })));\n                return data;\n            })\n    }\n\n    putThermostats(data: ThermostatModel) {\n        return this.backend\n            .put('/thermostat', {data: data}, this.addAuth())\n    }\n\n    putMood(date: string, mood: MoodModel): Promise<AxiosResponse> {\n        return this.backend\n            .put('/mood/' + date, {mood: mood}, this.addAuth())\n    }\n\n    getMood(date: string): Promise<MoodModel> {\n        return this.backend\n            .get('/mood/' + date, this.addAuth())\n            .then(unpack)\n    }\n\n    postConsumption(file: File) {\n        const formData = new FormData();\n        formData.append(\"upfile\", file, file.name)\n        return this.backend\n            .post('/consumption', formData, this.addAuth())\n    }\n\n    postTracking(data: any): Promise<AxiosResponse> {\n        return this.backend\n            .post(\"/tracking\", JSON.stringify(data), {})\n    }\n\n    private addAuth(config?: AxiosRequestConfig): AxiosRequestConfig {\n        return {...config, headers: {Authorization: `${this.accessToken.value}`}}\n    }\n}\n\nexport default BackendService;\n","import {LocalizationProvider} from \"@mui/lab\";\nimport AdapterDateFns from '@mui/lab/AdapterDateFns';\nimport {CssBaseline, LinearProgress, StyledEngineProvider, ThemeProvider,} from \"@mui/material\";\nimport React, {useCallback, useEffect, useState} from \"react\";\nimport {BrowserRouter as Router} from 'react-router-dom';\nimport {useTracking} from \"react-tracking\";\nimport {AlertSnackbar} from \"./common/AlertSnackbar\";\nimport {Content, DefaultAppBar, DefaultDrawer, Root} from \"./common/DefaultAppBar\";\nimport DefaultBottomNavigation from \"./common/DefaultBottomNavigation\";\nimport {UserConfirmationDialog, useUserConfirmationDialog} from \"./common/UserConfirmationDialog\";\nimport {useSnackBar} from \"./common/UseSnackBar\";\nimport {useThemeBuilder} from \"./common/UseThemeBuilder\";\nimport Config from \"./Config\";\nimport {LoadingRouter, PrivateRouter, PublicRouter} from \"./Routes\";\nimport BackendService from \"./service/BackendService\";\nimport {UserModel} from \"./service/Model\";\n\nexport type ColorMode = 'light' | 'dark' | undefined\n\ninterface ColorModeCtx {\n    mode: ColorMode,\n    toggleColorMode: (mode: ColorMode) => void\n}\n\nconst backendService = new BackendService(Config.backend);\nexport const UserContext = React.createContext<UserModel | undefined>(undefined);\nexport const ColorModeContext = React.createContext<ColorModeCtx>({\n    mode: undefined,\n    toggleColorMode: (state: ColorMode) => {\n    }\n});\n\nexport interface AppBarProps {\n    title: string,\n    showBackButton: boolean,\n    children: () => JSX.Element\n}\n\nexport interface PrivateRouteProps {\n    backendService: BackendService,\n    setAppBar: (props: AppBarProps) => void\n}\n\nfunction App() {\n    const [theme, colorMode] = useThemeBuilder();\n    const [user, setUser] = useState<UserModel>();\n    const [isLoggedIn, setIsLoggedIn] = useState<boolean>();\n    const [error, setError] = useSnackBar();\n    const dispatchTracking = useCallback((data: any) => backendService.postTracking(data).catch(console.log), [])\n    const {Track} = useTracking({}, {dispatch: dispatchTracking});\n    const [userConfirmationProps, userConfirm] = useUserConfirmationDialog();\n    const [retry, setRetry] = useState(0);\n    const onRetry = useCallback(() => setRetry(prevState => prevState + 1), []);\n    const isAuthenticated = user!!;\n\n    useEffect(() => {\n        backendService.isLoggedIn()\n            .subscribe((value) => setIsLoggedIn(value));\n    }, []);\n\n    useEffect(() => {\n        if (!isLoggedIn) {\n            setUser(undefined);\n        } else {\n            backendService.getUser()\n                .then(setUser, setError)\n                .catch(console.error);\n        }\n    }, [isLoggedIn, setError, retry])\n\n    const [appBar, setAppBar] = useState<AppBarProps>({title: \"\", showBackButton: false, children: () => <></>});\n\n    return (\n        <StyledEngineProvider injectFirst>\n            <ThemeProvider theme={theme}>\n                <CssBaseline/>\n                {isLoggedIn !== undefined &&\n                <React.Suspense fallback={<LinearProgress/>}>\n                    <ColorModeContext.Provider value={colorMode}>\n                        <Router basename={`${process.env.PUBLIC_URL}#`} getUserConfirmation={userConfirm}>\n                            {!isLoggedIn && <PublicRouter backendService={backendService}/>}\n                            {isLoggedIn && isAuthenticated &&\n                            <UserContext.Provider value={user}>\n                                <Track>\n                                    <Root>\n                                        <DefaultAppBar title={appBar.title}\n                                                       hideBackButton={!appBar.showBackButton}\n                                                       children={appBar.children()}/>\n                                        <DefaultDrawer/>\n                                        <Content>\n                                            <LocalizationProvider dateAdapter={AdapterDateFns}>\n                                                <PrivateRouter\n                                                    backendService={backendService}\n                                                    setAppBar={setAppBar}\n                                                />\n                                            </LocalizationProvider>\n                                        </Content>\n                                    </Root>\n                                    <DefaultBottomNavigation/>\n                                </Track>\n                            </UserContext.Provider>\n                            }\n                            {isLoggedIn && !isAuthenticated &&\n                            <LoadingRouter backendService={backendService} retry={onRetry}/>\n                            }\n                            <UserConfirmationDialog {...userConfirmationProps}/>\n                            <AlertSnackbar {...error} severity=\"error\"/>\n                        </Router>\n                    </ColorModeContext.Provider>\n                </React.Suspense>\n                }\n            </ThemeProvider>\n        </StyledEngineProvider>\n    );\n}\n\nexport default App;\n","import {createTheme, ThemeOptions, useMediaQuery} from \"@mui/material\";\nimport {useMemo, useState} from \"react\";\nimport {lightGreen} from \"@mui/material/colors\";\n\nexport const useThemeBuilder = () => {\n    const prefersDarkMode = useMediaQuery('(prefers-color-scheme: dark)');\n    const [mode, setMode] = useState<'light' | 'dark' | undefined>();\n    const colorMode = useMemo(() => ({mode: mode, toggleColorMode: setMode}), [setMode, mode]);\n    const useDarkTheme = mode ? mode === 'dark' : prefersDarkMode;\n    const theme: ThemeOptions = useMemo(() => createTheme({\n        palette: {\n            mode: useDarkTheme ? \"dark\" : \"light\",\n            primary: {\n                main: lightGreen[600],\n                contrastText: '#fff'\n            },\n            secondary: {\n                main: lightGreen[400]\n            },\n        },\n        components: {\n            MuiAppBar: {\n                defaultProps: {\n                    elevation: useDarkTheme ? 1 : 0,\n                    color: \"inherit\",\n                },\n            },\n            MuiUseMediaQuery: {\n                defaultProps: {\n                    noSsr: true,\n                }\n            },\n            MuiGrid: {\n                defaultProps: {\n                    spacing: 1\n                }\n            },\n            MuiCard: {\n                defaultProps: {\n                    variant: \"outlined\",\n                    square: true,\n                }\n            },\n            MuiFab: {\n                styleOverrides: {\n                    root: {\n                        position: 'fixed',\n                        bottom: '10px',\n                        right: '10px',\n                    }\n                }\n            },\n            MuiSnackbar: {\n                styleOverrides: {\n                    anchorOriginBottomCenter: {\n                        // When bottom bar is shown, raise Snackbar position\n                        '@media (max-width:599.95px)': {\n                            bottom: '70px'\n                        }\n                    }\n                }\n            }\n        },\n    }), [useDarkTheme]);\n    return [theme, colorMode] as const\n}\n","import i18n from 'i18next';\nimport {initReactI18next} from 'react-i18next';\nimport resourcesToBackend from 'i18next-resources-to-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\nimport {de, enUS as en} from \"date-fns/locale\";\nimport {format as formatDate} from 'date-fns';\n\nconst locs: { [key: string]: Locale } = {\"en\": en, \"de\": de};\nconst resources = resourcesToBackend((language, namespace, callback) => {\n    import(`./locales/${language}/${namespace}.json`)\n        .then((resources) => callback(null, resources))\n        .catch((error) => callback(error, null))\n});\n\ni18n.use(resources)\n    .use(LanguageDetector)\n    .use(initReactI18next)\n    .init({\n        /*debug: true,*/\n        fallbackLng: 'en',\n        interpolation: {\n            escapeValue: false, // not needed for react as it escapes by default\n            format: (value, format, lng) => {\n                if (value instanceof Date) try {\n                    return formatDate(value, format!, {locale: locs[lng!]})\n                } catch (e) {\n                    console.error(e);\n                }\n                return value;\n            }\n        },\n        backend: {\n            // for all available options read the backend's repository readme file\n            loadPath: `${process.env.PUBLIC_URL}/locales/{{lng}}/{{ns}}.json`\n        }\n    });\n\nexport default i18n;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://cra.link/PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(/^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/)\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://cra.link/PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then((registration) => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://cra.link/PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch((error) => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then((response) => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then((registration) => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log('No internet connection found. App is running in offline mode.');\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then((registration) => {\n        registration.unregister();\n      })\n      .catch((error) => {\n        console.error(error.message);\n      });\n  }\n}\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","\nimport React from 'react'\nimport './index.css';\nimport App from \"./App\";\nimport ReactDOM from 'react-dom';\nimport './i18n';\nimport * as serviceWorkerRegistration from './serviceWorkerRegistration';\nimport reportWebVitals from \"./reportWebVitals\";\n\nReactDOM.render(\n    <React.StrictMode>\n        <App/>\n    </React.StrictMode>,\n    document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://cra.link/PWA\n// FIXME change to register with v1.0\nserviceWorkerRegistration.unregister();\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}